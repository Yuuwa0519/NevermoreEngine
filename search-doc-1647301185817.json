[{"title":"ActionManager","type":0,"sectionRef":"#","url":"api/ActionManager","content":"On this page ActionManager Holds single toggleable actions (like a tool system). info This is legacy code and probably shoudl not be used in new games.","keywords":""},{"title":"AccelTween","type":0,"sectionRef":"#","url":"api/AccelTween","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"AccelTween","url":"api/AccelTween#properties","content":" "},{"title":"p​","type":1,"pageTitle":"AccelTween","url":"api/AccelTween#p","content":"&lt;/&gt; AccelTween.p: number Gets and sets the current position of the AccelTween  "},{"title":"v​","type":1,"pageTitle":"AccelTween","url":"api/AccelTween#v","content":"&lt;/&gt; AccelTween.v: number Gets and sets the current velocity of the AccelTween  "},{"title":"a​","type":1,"pageTitle":"AccelTween","url":"api/AccelTween#a","content":"&lt;/&gt; AccelTween.a: number Gets and sets the maximum acceleration.  "},{"title":"t​","type":1,"pageTitle":"AccelTween","url":"api/AccelTween#t","content":"&lt;/&gt; AccelTween.t: number Gets and sets the target position.  "},{"title":"rtime​","type":1,"pageTitle":"AccelTween","url":"api/AccelTween#rtime","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; AccelTween.rtime: number Returns the remaining time before the AccelTween attains the target.  "},{"title":"pt​","type":1,"pageTitle":"AccelTween","url":"api/AccelTween#pt","content":"&lt;/&gt; AccelTween.pt: number Sets the current and target position, and sets the velocity to 0. "},{"title":"Functions​","type":1,"pageTitle":"AccelTween","url":"api/AccelTween#functions","content":" "},{"title":"new​","type":1,"pageTitle":"AccelTween","url":"api/AccelTween#new","content":"&lt;/&gt; AccelTween.new( maxaccel: number?-- The maximum acceleration applied to reach its target. Defaults to 1 ) → AccelTween Constructs a new AccelTween. local accelTween = AccelTween.new(30) accelTween.t = 1 conn = RunService.RenderStepped:Connect(function() print(accelTween.p) end) task.delay(accelTween.rtime, function() conn:Disconnect() end)  "},{"title":"AnimatedSpritesheet","type":0,"sectionRef":"#","url":"api/AnimatedSpritesheet","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"AnimatedSpritesheet","url":"api/AnimatedSpritesheet#functions","content":" "},{"title":"new​","type":1,"pageTitle":"AnimatedSpritesheet","url":"api/AnimatedSpritesheet#new","content":"&lt;/&gt; AnimatedSpritesheet.new(options: AnimatedSpritesheetOptions) → AnimatedSpritesheet "},{"title":"Types","type":1,"pageTitle":"AnimatedSpritesheet","url":"api/AnimatedSpritesheet##","content":""},{"title":"​","type":1,"pageTitle":"AnimatedSpritesheet","url":"api/AnimatedSpritesheet#AnimatedSpritesheetOptions","content":"interface AnimatedSpritesheetOptions { texture: string frames: number spritesPerRow: number spriteSize: Vector2 framesPerSecond: number }  Constructs a new AnimatedSpritesheet  "},{"title":"GetSpriteSize​","type":1,"pageTitle":"AnimatedSpritesheet","url":"api/AnimatedSpritesheet#GetSpriteSize","content":"&lt;/&gt; AnimatedSpritesheet:GetSpriteSize() → Vector2  Gets the sprite size  "},{"title":"GetFramesPerSecond​","type":1,"pageTitle":"AnimatedSpritesheet","url":"api/AnimatedSpritesheet#GetFramesPerSecond","content":"&lt;/&gt; AnimatedSpritesheet:GetFramesPerSecond() → number Gets the frames per a second  "},{"title":"GetPlayTime​","type":1,"pageTitle":"AnimatedSpritesheet","url":"api/AnimatedSpritesheet#GetPlayTime","content":"&lt;/&gt; AnimatedSpritesheet:GetPlayTime() → number Gets the play time for the animated sheet  "},{"title":"GetFrames​","type":1,"pageTitle":"AnimatedSpritesheet","url":"api/AnimatedSpritesheet#GetFrames","content":"&lt;/&gt; AnimatedSpritesheet:GetFrames() → frames Retrieves the frames for the sprite sheet. "},{"title":"AdorneeUtils","type":0,"sectionRef":"#","url":"api/AdorneeUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"AdorneeUtils","url":"api/AdorneeUtils#functions","content":" "},{"title":"getCenter​","type":1,"pageTitle":"AdorneeUtils","url":"api/AdorneeUtils#getCenter","content":"&lt;/&gt; AdorneeUtils.getCenter(adornee: Instance ) → Vector3?  Gets the center of the adornee  "},{"title":"getBoundingBox​","type":1,"pageTitle":"AdorneeUtils","url":"api/AdorneeUtils#getBoundingBox","content":"&lt;/&gt; AdorneeUtils.getBoundingBox(adornee: Instance ) → ( CFrame? , Vector3? ) Gets the bounding box of the adornee  "},{"title":"isPartOfAdornee​","type":1,"pageTitle":"AdorneeUtils","url":"api/AdorneeUtils#isPartOfAdornee","content":"&lt;/&gt; AdorneeUtils.isPartOfAdornee( adornee: Instance , part: BasePart ) → boolean Returns whether a part is a part of an adornee  "},{"title":"getParts​","type":1,"pageTitle":"AdorneeUtils","url":"api/AdorneeUtils#getParts","content":"&lt;/&gt; AdorneeUtils.getParts(adornee: Instance ) → {BasePart } Retrieves all parts of an adornee  "},{"title":"getAlignedSize​","type":1,"pageTitle":"AdorneeUtils","url":"api/AdorneeUtils#getAlignedSize","content":"&lt;/&gt; AdorneeUtils.getAlignedSize(adornee: Instance ) → Vector3?  Retrieves a size aligned the adornee's CFrame  "},{"title":"getPartCFrame​","type":1,"pageTitle":"AdorneeUtils","url":"api/AdorneeUtils#getPartCFrame","content":"&lt;/&gt; AdorneeUtils.getPartCFrame(adornee: Instance ) → CFrame  Retrieves this adornee's &quot;part&quot;'s CFrame.  "},{"title":"getPartPosition​","type":1,"pageTitle":"AdorneeUtils","url":"api/AdorneeUtils#getPartPosition","content":"&lt;/&gt; AdorneeUtils.getPartPosition(adornee: Instance ) → Position Retrieves this adornee's &quot;part&quot;'s position.  "},{"title":"getPartVelocity​","type":1,"pageTitle":"AdorneeUtils","url":"api/AdorneeUtils#getPartVelocity","content":"&lt;/&gt; AdorneeUtils.getPartVelocity(adornee: Instance ) → Vector3  Retrieves this adornee's &quot;part&quot;'s Velocity.  "},{"title":"getPart​","type":1,"pageTitle":"AdorneeUtils","url":"api/AdorneeUtils#getPart","content":"&lt;/&gt; AdorneeUtils.getPart(adornee: Instance ) → BasePart  Retrieves this adornee's part  "},{"title":"getRenderAdornee​","type":1,"pageTitle":"AdorneeUtils","url":"api/AdorneeUtils#getRenderAdornee","content":"&lt;/&gt; AdorneeUtils.getRenderAdornee(adornee: Instance ) → Instance  Retrieves this adornee's part on which to attach a rendering instance to "},{"title":"AnimatedSpritesheetPlayer","type":0,"sectionRef":"#","url":"api/AnimatedSpritesheetPlayer","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"AnimatedSpritesheetPlayer","url":"api/AnimatedSpritesheetPlayer#functions","content":" "},{"title":"new​","type":1,"pageTitle":"AnimatedSpritesheetPlayer","url":"api/AnimatedSpritesheetPlayer#new","content":"&lt;/&gt; AnimatedSpritesheetPlayer.new( imageLabel: ImageLabel , spritesheet: AnimatedSpritesheet? ) → AnimatedSpritesheetPlayer Constructs a new AnimatedSpritesheetPlayer  "},{"title":"SetSheet​","type":1,"pageTitle":"AnimatedSpritesheetPlayer","url":"api/AnimatedSpritesheetPlayer#SetSheet","content":"&lt;/&gt; AnimatedSpritesheetPlayer:SetSheet(spritesheet: AnimatedSpritesheet) → () Sets the current sheet and starts play if needed "},{"title":"AnimationGroup","type":0,"sectionRef":"#","url":"api/AnimationGroup","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"AnimationGroup","url":"api/AnimationGroup#functions","content":" "},{"title":"new​","type":1,"pageTitle":"AnimationGroup","url":"api/AnimationGroup#new","content":"&lt;/&gt; AnimationGroup.new(weightedTracks: {WeightedTrack}) → AnimationGroup   "},{"title":"Play​","type":1,"pageTitle":"AnimationGroup","url":"api/AnimationGroup#Play","content":"&lt;/&gt; AnimationGroup:Play(transitionTime: number) → () Plays the animations  "},{"title":"Stop​","type":1,"pageTitle":"AnimationGroup","url":"api/AnimationGroup#Stop","content":"&lt;/&gt; AnimationGroup:Stop(transitionTime: number) → () Stops the animations "},{"title":"AnimationGroupUtils","type":0,"sectionRef":"#","url":"api/AnimationGroupUtils","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"AnimationGroupUtils","url":"api/AnimationGroupUtils#types","content":" "},{"title":"WeightedAnimation​","type":1,"pageTitle":"AnimationGroupUtils","url":"api/AnimationGroupUtils#WeightedAnimation","content":"&lt;/&gt; interface WeightedAnimation { animationId: string weight: number }   "},{"title":"WeightedTrack​","type":1,"pageTitle":"AnimationGroupUtils","url":"api/AnimationGroupUtils#WeightedTrack","content":"&lt;/&gt; interface WeightedTrack { track: Track weight: number }  "},{"title":"Functions​","type":1,"pageTitle":"AnimationGroupUtils","url":"api/AnimationGroupUtils#functions","content":" "},{"title":"createdWeightedTracks​","type":1,"pageTitle":"AnimationGroupUtils","url":"api/AnimationGroupUtils#createdWeightedTracks","content":"&lt;/&gt; AnimationGroupUtils.createdWeightedTracks( humanoid: Humanoid , weightedAnimationList: {WeightedAnimation} ) → {WeightedTrack} Creates a new weighted track list.  "},{"title":"createdWeightedAnimation​","type":1,"pageTitle":"AnimationGroupUtils","url":"api/AnimationGroupUtils#createdWeightedAnimation","content":"&lt;/&gt; AnimationGroupUtils.createdWeightedAnimation( animationId: string, weight: number ) → WeightedAnimation Creates a new weighted animation.  "},{"title":"createdWeightedTrack​","type":1,"pageTitle":"AnimationGroupUtils","url":"api/AnimationGroupUtils#createdWeightedTrack","content":"&lt;/&gt; AnimationGroupUtils.createdWeightedTrack( track: Track, weight: number ) → WeightedTrack Creates a new weighted track.  "},{"title":"selectFromWeightedTracks​","type":1,"pageTitle":"AnimationGroupUtils","url":"api/AnimationGroupUtils#selectFromWeightedTracks","content":"&lt;/&gt; AnimationGroupUtils.selectFromWeightedTracks(weightedTracks: {WeightedTrack}) → WeightedTrack? Picks a weighted track for playback. "},{"title":"AnimationProvider","type":0,"sectionRef":"#","url":"api/AnimationProvider","content":"On this page AnimationProvider Provides animations for anything tagged with &quot;AnimationContainer&quot; and from a folder named &quot;Animations&quot; in ReplicatedStorage. See TemplateProvider.","keywords":""},{"title":"AnimationTrackUtils","type":0,"sectionRef":"#","url":"api/AnimationTrackUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"AnimationTrackUtils","url":"api/AnimationTrackUtils#functions","content":" "},{"title":"loadAnimationFromId​","type":1,"pageTitle":"AnimationTrackUtils","url":"api/AnimationTrackUtils#loadAnimationFromId","content":"&lt;/&gt; AnimationTrackUtils.loadAnimationFromId( humanoid: Humanoid , animationId: string ) → Animation  Loads an animation from the animation id  "},{"title":"setWeightTargetIfNotSet​","type":1,"pageTitle":"AnimationTrackUtils","url":"api/AnimationTrackUtils#setWeightTargetIfNotSet","content":"&lt;/&gt; AnimationTrackUtils.setWeightTargetIfNotSet( track: AnimationTrack , weight: number, fadeTime: number ) → Animation  Sets the weight target if not set "},{"title":"ApplyTagToTaggedChildren","type":0,"sectionRef":"#","url":"api/ApplyTagToTaggedChildren","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ApplyTagToTaggedChildren","url":"api/ApplyTagToTaggedChildren#functions","content":" "},{"title":"new​","type":1,"pageTitle":"ApplyTagToTaggedChildren","url":"api/ApplyTagToTaggedChildren#new","content":"&lt;/&gt; ApplyTagToTaggedChildren.new( parent: Instance , tag: string, requiredTag: string ) → ApplyTagToTaggedChildren Creates a new ApplyTagToTaggedChildren. "},{"title":"AssetServiceUtils","type":0,"sectionRef":"#","url":"api/AssetServiceUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"AssetServiceUtils","url":"api/AssetServiceUtils#functions","content":" "},{"title":"promiseAssetIdsForPackage​","type":1,"pageTitle":"AssetServiceUtils","url":"api/AssetServiceUtils#promiseAssetIdsForPackage","content":"&lt;/&gt; AssetServiceUtils.promiseAssetIdsForPackage(packageAssetId: number) → Promise&lt;table&gt; Retrieves the assetIds for a package "},{"title":"ArmIKBase","type":0,"sectionRef":"#","url":"api/ArmIKBase","content":"On this page ArmIKBase Provides IK for a given arm","keywords":""},{"title":"AttributeValue","type":0,"sectionRef":"#","url":"api/AttributeValue","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"AttributeValue","url":"api/AttributeValue#properties","content":" "},{"title":"Value​","type":1,"pageTitle":"AttributeValue","url":"api/AttributeValue#Value","content":"&lt;/&gt; AttributeValue.Value: T The current property of the Attribute. Can be assigned to to write the attribute.  "},{"title":"Changed​","type":1,"pageTitle":"AttributeValue","url":"api/AttributeValue#Changed","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; AttributeValue.Changed: Signal&lt;()&gt; Signal that fires when the attribute changes "},{"title":"Functions​","type":1,"pageTitle":"AttributeValue","url":"api/AttributeValue#functions","content":" "},{"title":"new​","type":1,"pageTitle":"AttributeValue","url":"api/AttributeValue#new","content":"&lt;/&gt; AttributeValue.new( object: Instance , attributeName: string, defaultValue: T? ) → AttributeValue&lt;T&gt; Constructs a new AttributeValue. If a defaultValue that is not nil is defined, then this value will be set on the Roblox object.  "},{"title":"Observe​","type":1,"pageTitle":"AttributeValue","url":"api/AttributeValue#Observe","content":"&lt;/&gt; AttributeValue:Observe() → Observable&lt;any&gt; Observes an attribute on an instance. "},{"title":"AttributeUtils","type":0,"sectionRef":"#","url":"api/AttributeUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"AttributeUtils","url":"api/AttributeUtils#functions","content":" "},{"title":"bindToBinder​","type":1,"pageTitle":"AttributeUtils","url":"api/AttributeUtils#bindToBinder","content":"&lt;/&gt; AttributeUtils.bindToBinder( instance: Instance , attributeName: string, binder: Binder&lt;T&gt; ) → Maid Whenever the attribute is true, the binder will be bound, and when the binder is bound, the attribute will be true.  "},{"title":"initAttribute​","type":1,"pageTitle":"AttributeUtils","url":"api/AttributeUtils#initAttribute","content":"&lt;/&gt; AttributeUtils.initAttribute( instance: Instance , attributeName: string, default: any ) → any?-- The value of the attribute Initializes an attribute for a given instance  "},{"title":"getAttribute​","type":1,"pageTitle":"AttributeUtils","url":"api/AttributeUtils#getAttribute","content":"&lt;/&gt; AttributeUtils.getAttribute( instance: Instance , attributeName: string, default: T? ) → T? Retrieves an attribute, and if it is nil, returns the default instead. "},{"title":"AxisAngleUtils","type":0,"sectionRef":"#","url":"api/AxisAngleUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"AxisAngleUtils","url":"api/AxisAngleUtils#functions","content":" "},{"title":"toCFrame​","type":1,"pageTitle":"AxisAngleUtils","url":"api/AxisAngleUtils#toCFrame","content":"&lt;/&gt; AxisAngleUtils.toCFrame( axisAngle: Vector3 , position: Vector3 ) → CFrame  Converts an AxisAngle and position to a CFrame  "},{"title":"fromCFrame​","type":1,"pageTitle":"AxisAngleUtils","url":"api/AxisAngleUtils#fromCFrame","content":"&lt;/&gt; AxisAngleUtils.fromCFrame(cframe: CFrame ) → ( Vector3 ,-- AxisAngle Vector3 -- position ) Converts a CFrame to an AxisAngle and position "},{"title":"BadgeUtils","type":0,"sectionRef":"#","url":"api/BadgeUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"BadgeUtils","url":"api/BadgeUtils#functions","content":" "},{"title":"promiseAwardBadge​","type":1,"pageTitle":"BadgeUtils","url":"api/BadgeUtils#promiseAwardBadge","content":"This item only works when running on the server. Server &lt;/&gt; BadgeUtils.promiseAwardBadge( player: Player , badgeId: number ) → Promise Tries to reward a player to a badge inside of a promise.  "},{"title":"promiseBadgeInfo​","type":1,"pageTitle":"BadgeUtils","url":"api/BadgeUtils#promiseBadgeInfo","content":"&lt;/&gt; BadgeUtils.promiseBadgeInfo(badgeId: number) → Promise&lt;BadgeInfoDictionary&gt; "},{"title":"Types","type":1,"pageTitle":"BadgeUtils","url":"api/BadgeUtils##","content":""},{"title":"​","type":1,"pageTitle":"BadgeUtils","url":"api/BadgeUtils#BadgeInfoDictionary","content":"interface BadgeInfoDictionary { Name: string-- The name of the badge. Description: string-- The description of the badge. IconImageId: int64-- The asset ID of the image for the badge. IsEnabled: bool-- Indicates whether the badge is available to be awarded. }  Gets the badge info for the given badgeId. "},{"title":"BaseAction","type":0,"sectionRef":"#","url":"api/BaseAction","content":"On this page BaseAction BaseAction state for ActionManager. info This is legacy code and probably shoudl not be used in new games.","keywords":""},{"title":"BaseObject","type":0,"sectionRef":"#","url":"api/BaseObject","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"BaseObject","url":"api/BaseObject#functions","content":" "},{"title":"new​","type":1,"pageTitle":"BaseObject","url":"api/BaseObject#new","content":"&lt;/&gt; BaseObject.new(obj?: Instance ) → BaseObject Constructs a new BaseObject  "},{"title":"Destroy​","type":1,"pageTitle":"BaseObject","url":"api/BaseObject#Destroy","content":"&lt;/&gt; BaseObject:Destroy() → () Cleans up the BaseObject and sets the metatable to nil "},{"title":"BasePermissionProvider","type":0,"sectionRef":"#","url":"api/BasePermissionProvider","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"BasePermissionProvider","url":"api/BasePermissionProvider#functions","content":" "},{"title":"new​","type":1,"pageTitle":"BasePermissionProvider","url":"api/BasePermissionProvider#new","content":"&lt;/&gt; BasePermissionProvider.new(config: {remoteFunctionName: string}) → BasePermissionProvider Initializes a new permission provider  "},{"title":"Start​","type":1,"pageTitle":"BasePermissionProvider","url":"api/BasePermissionProvider#Start","content":"&lt;/&gt; BasePermissionProvider:Start() → () Starts the permission provider. Should be done via ServiceBag.  "},{"title":"PromiseIsCreator​","type":1,"pageTitle":"BasePermissionProvider","url":"api/BasePermissionProvider#PromiseIsCreator","content":"&lt;/&gt; BasePermissionProvider:PromiseIsCreator(player: Player ) → Promise&lt;boolean&gt; Returns whether the player is a creator.  "},{"title":"PromiseIsAdmin​","type":1,"pageTitle":"BasePermissionProvider","url":"api/BasePermissionProvider#PromiseIsAdmin","content":"&lt;/&gt; BasePermissionProvider:PromiseIsAdmin(player: Player ) → Promise&lt;boolean&gt; Returns whether the player is an admin.  "},{"title":"IsCreator​","type":1,"pageTitle":"BasePermissionProvider","url":"api/BasePermissionProvider#IsCreator","content":"&lt;/&gt; BasePermissionProvider:IsCreator(player: Player ) → boolean Returns whether the player is a creator. info May return false if not loaded. Prefer using the promise version.  "},{"title":"IsAdmin​","type":1,"pageTitle":"BasePermissionProvider","url":"api/BasePermissionProvider#IsAdmin","content":"&lt;/&gt; BasePermissionProvider:IsAdmin(player: Player ) → boolean Returns whether the player is an admin. info May return false if not loaded. Prefer using the promise version. "},{"title":"BasicPane","type":0,"sectionRef":"#","url":"api/BasicPane","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"BasicPane","url":"api/BasicPane#properties","content":" "},{"title":"Gui​","type":1,"pageTitle":"BasicPane","url":"api/BasicPane#Gui","content":"&lt;/&gt; BasicPane.Gui: Instance?  Gui object which can be reparented or whatever  "},{"title":"VisibleChanged​","type":1,"pageTitle":"BasicPane","url":"api/BasicPane#VisibleChanged","content":"&lt;/&gt; BasicPane.VisibleChanged: Signal&lt;boolean,boolean,Maid&gt; Fires whenever visibility changes. FIres with isVisible, doNotAnimate, and a maid which has the lifetime of the visibility. info Do not use the Maid if you want the code to work in Deferred signal mode. "},{"title":"Functions​","type":1,"pageTitle":"BasicPane","url":"api/BasicPane#functions","content":" "},{"title":"isBasicPane​","type":1,"pageTitle":"BasicPane","url":"api/BasicPane#isBasicPane","content":"&lt;/&gt; BasicPane.isBasicPane(value: any) → boolean Returns whether the value is a basic pane  "},{"title":"new​","type":1,"pageTitle":"BasicPane","url":"api/BasicPane#new","content":"&lt;/&gt; BasicPane.new( gui: GuiBase? -- Optional Gui object ) → BasicPane Constructs a new BasicPane with the .Gui property set.  "},{"title":"SetVisible​","type":1,"pageTitle":"BasicPane","url":"api/BasicPane#SetVisible","content":"&lt;/&gt; BasicPane:SetVisible( isVisible: boolean,-- Whether or not the pane should be visible doNotAnimate: boolean?-- True if this visiblity should not animate ) → () Sets the BasicPane to be visible  "},{"title":"Show​","type":1,"pageTitle":"BasicPane","url":"api/BasicPane#Show","content":"&lt;/&gt; BasicPane:Show( doNotAnimate: boolean?-- True if this visiblity should not animate ) → () Shows the pane  "},{"title":"Hide​","type":1,"pageTitle":"BasicPane","url":"api/BasicPane#Hide","content":"&lt;/&gt; BasicPane:Hide( doNotAnimate: boolean?-- True if this visiblity should not animate ) → () Hides the pane  "},{"title":"Toggle​","type":1,"pageTitle":"BasicPane","url":"api/BasicPane#Toggle","content":"&lt;/&gt; BasicPane:Toggle( doNotAnimate: boolean?-- True if this visiblity should not animate ) → () Toggles the pane  "},{"title":"IsVisible​","type":1,"pageTitle":"BasicPane","url":"api/BasicPane#IsVisible","content":"&lt;/&gt; BasicPane:IsVisible() → boolean Returns if the pane is visible  "},{"title":"Destroy​","type":1,"pageTitle":"BasicPane","url":"api/BasicPane#Destroy","content":"&lt;/&gt; BasicPane:Destroy() → () Cleans up the BasicPane, invoking Maid:DoCleaning() on the BasicPane and setting the metatable to nil. "},{"title":"batchRaycast","type":0,"sectionRef":"#","url":"api/batchRaycast","content":"On this page batchRaycast This item is only intended to be used by the module's authors. Private Batch raycast utility function","keywords":""},{"title":"BezierUtils","type":0,"sectionRef":"#","url":"api/BezierUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"BezierUtils","url":"api/BezierUtils#functions","content":" "},{"title":"createBezierFactory​","type":1,"pageTitle":"BezierUtils","url":"api/BezierUtils#createBezierFactory","content":"&lt;/&gt; BezierUtils.createBezierFactory( p1x: number, p1y: number, p2x: number, p2y: number ) → (aX: number) → number Creates a new bezier factory which can smoothly translate between 0 to 1. "},{"title":"BasicPaneUtils","type":0,"sectionRef":"#","url":"api/BasicPaneUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"BasicPaneUtils","url":"api/BasicPaneUtils#functions","content":" "},{"title":"observeVisible​","type":1,"pageTitle":"BasicPaneUtils","url":"api/BasicPaneUtils#observeVisible","content":"&lt;/&gt; BasicPaneUtils.observeVisible(basicPane: BasicPane) → Observable&lt;boolean&gt; Observes visibility  "},{"title":"observePercentVisible​","type":1,"pageTitle":"BasicPaneUtils","url":"api/BasicPaneUtils#observePercentVisible","content":"&lt;/&gt; BasicPaneUtils.observePercentVisible(basicPane: BasicPane) → Observable&lt;number&gt; Observes percent visibility  "},{"title":"toTransparency​","type":1,"pageTitle":"BasicPaneUtils","url":"api/BasicPaneUtils#toTransparency","content":"&lt;/&gt; BasicPaneUtils.toTransparency(source: Observable&lt;number&gt;) → Observable&lt;number&gt; Convert percentVisible observable to transparency  "},{"title":"observeShow​","type":1,"pageTitle":"BasicPaneUtils","url":"api/BasicPaneUtils#observeShow","content":"&lt;/&gt; BasicPaneUtils.observeShow(basicPane: BasicPane) → Observable&lt;boolean&gt; Observes showing a basic pane "},{"title":"BinarySearchUtils","type":0,"sectionRef":"#","url":"api/BinarySearchUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"BinarySearchUtils","url":"api/BinarySearchUtils#functions","content":" "},{"title":"spanSearch​","type":1,"pageTitle":"BinarySearchUtils","url":"api/BinarySearchUtils#spanSearch","content":"&lt;/&gt; BinarySearchUtils.spanSearch( list: {T}, t: number ) → ( number, number ) if t lands within the domain of two spans of time t = 5 [3 5][5 7] ^ picks this one   "},{"title":"spanSearchNodes​","type":1,"pageTitle":"BinarySearchUtils","url":"api/BinarySearchUtils#spanSearchNodes","content":"&lt;/&gt; BinarySearchUtils.spanSearchNodes( list: {TNode}, index: string, t: number ) → ( number, number ) Same as searching a span, but uses a list of nodes  "},{"title":"spanSearchAnything​","type":1,"pageTitle":"BinarySearchUtils","url":"api/BinarySearchUtils#spanSearchAnything","content":"&lt;/&gt; BinarySearchUtils.spanSearchAnything( n: number, indexFunc: (number) → number, t: number ) → ( number, number ) Same as span search, but uses an indexFunc to retrieve the index "},{"title":"BindableRagdollHumanoidOnFall","type":0,"sectionRef":"#","url":"api/BindableRagdollHumanoidOnFall","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"BindableRagdollHumanoidOnFall","url":"api/BindableRagdollHumanoidOnFall#functions","content":" "},{"title":"new​","type":1,"pageTitle":"BindableRagdollHumanoidOnFall","url":"api/BindableRagdollHumanoidOnFall#new","content":"&lt;/&gt; BindableRagdollHumanoidOnFall.new( humanoid: Humanoid , ragdollBinder: Binder&lt;Ragdoll | RagdollClient&gt; ) → BindableRagdollHumanoidOnFall Constructs a new BindableRagdollHumanoidOnFall. "},{"title":"BinderGroup","type":0,"sectionRef":"#","url":"api/BinderGroup","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"BinderGroup","url":"api/BinderGroup#functions","content":" "},{"title":"new​","type":1,"pageTitle":"BinderGroup","url":"api/BinderGroup#new","content":"&lt;/&gt; BinderGroup.new( binders: {Binder&lt;T&gt;},-- A list of binders that validateConstructor: (constructor: any) → boolean-- Validates a binder matches T ) → BinderGroup&lt;T&gt; Constructs a new BinderGroup  "},{"title":"AddList​","type":1,"pageTitle":"BinderGroup","url":"api/BinderGroup#AddList","content":"&lt;/&gt; BinderGroup:AddList(binders: {Binder&lt;T&gt;}) → () Adds a list of binders to the group.  "},{"title":"Add​","type":1,"pageTitle":"BinderGroup","url":"api/BinderGroup#Add","content":"&lt;/&gt; BinderGroup:Add(binder: Binder&lt;T&gt;) → () Adds the specific binder to the list  "},{"title":"GetBinders​","type":1,"pageTitle":"BinderGroup","url":"api/BinderGroup#GetBinders","content":"&lt;/&gt; BinderGroup:GetBinders() → {T} Returns a list of binders. warning Do not modify the list of binders returned here "},{"title":"BinderGroupProvider","type":0,"sectionRef":"#","url":"api/BinderGroupProvider","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"BinderGroupProvider","url":"api/BinderGroupProvider#functions","content":" "},{"title":"new​","type":1,"pageTitle":"BinderGroupProvider","url":"api/BinderGroupProvider#new","content":"&lt;/&gt; BinderGroupProvider.new(initMethod: (BinderGroupProvider) → ()) → BinderGroupProvider Constructs a new BinderGroupProvider  "},{"title":"PromiseGroupsAdded​","type":1,"pageTitle":"BinderGroupProvider","url":"api/BinderGroupProvider#PromiseGroupsAdded","content":"&lt;/&gt; BinderGroupProvider:PromiseGroupsAdded() → Promise Returns a promise that will resolve once groups are added.  "},{"title":"Init​","type":1,"pageTitle":"BinderGroupProvider","url":"api/BinderGroupProvider#Init","content":"&lt;/&gt; BinderGroupProvider:Init(...: ServiceBag | any) → () Starts the binder provider. Should be called via ServiceBag.  "},{"title":"Start​","type":1,"pageTitle":"BinderGroupProvider","url":"api/BinderGroupProvider#Start","content":"&lt;/&gt; BinderGroupProvider:Start() → () Starts the binder provider. Should be called via ServiceBag.  "},{"title":"Get​","type":1,"pageTitle":"BinderGroupProvider","url":"api/BinderGroupProvider#Get","content":"&lt;/&gt; BinderGroupProvider:Get(groupName: string) → BinderGroup? Returns a binder group given the binderName  "},{"title":"Add​","type":1,"pageTitle":"BinderGroupProvider","url":"api/BinderGroupProvider#Add","content":"&lt;/&gt; BinderGroupProvider:Add( groupName: string, binderGroup: BinderGroup ) → () Adds a new group at the given name "},{"title":"Binder","type":0,"sectionRef":"#","url":"api/Binder","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Binder","url":"api/Binder#types","content":" "},{"title":"BinderContructor​","type":1,"pageTitle":"Binder","url":"api/Binder#BinderContructor","content":"&lt;/&gt; type BinderContructor = ( Instance , ...: any ) → T | {new: ( Instance , ...: any )} | { Create(self, Instance , ...: any) } Constructor for a binder "},{"title":"Functions​","type":1,"pageTitle":"Binder","url":"api/Binder#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Binder","url":"api/Binder#new","content":"&lt;/&gt; Binder.new( tagName: string,-- Name of the tag to bind to. This uses CollectionService's tag system constructor: BinderContructor, ...: any-- Variable arguments that will be passed into the constructor ) → Binder&lt;T&gt; Constructs a new binder object. local binder = Binder.new(&quot;Bird&quot;, function(inst) print(&quot;Wow, a new bird!&quot;, inst) return { Destroy = function() print(&quot;Uh oh, the bird is gone!&quot;) end; } end) binder:Start()   "},{"title":"isBinder​","type":1,"pageTitle":"Binder","url":"api/Binder#isBinder","content":"&lt;/&gt; Binder.isBinder(value: any) → booleantrueorfalse,whetherornotitisavalue Retrieves whether or not the given value is a binder.  "},{"title":"Start​","type":1,"pageTitle":"Binder","url":"api/Binder#Start","content":"&lt;/&gt; Binder:Start() → () Listens for new instances and connects to the GetInstanceAddedSignal() and removed signal!  "},{"title":"GetTag​","type":1,"pageTitle":"Binder","url":"api/Binder#GetTag","content":"&lt;/&gt; Binder:GetTag() → string Returns the tag name that the binder has.  "},{"title":"GetConstructor​","type":1,"pageTitle":"Binder","url":"api/Binder#GetConstructor","content":"&lt;/&gt; Binder:GetConstructor() → BinderContructor Returns whatever was set for the construtor. Used for meta-analysis of the binder, such as extracting if parameters are allowed.  "},{"title":"ObserveInstance​","type":1,"pageTitle":"Binder","url":"api/Binder#ObserveInstance","content":"&lt;/&gt; Binder:ObserveInstance( inst: Instance , callback: function ) → function-- Cleanup function Fired when added, and then after removal, but before destroy!  "},{"title":"GetClassAddedSignal​","type":1,"pageTitle":"Binder","url":"api/Binder#GetClassAddedSignal","content":"&lt;/&gt; Binder:GetClassAddedSignal() → Signal&lt;T&gt; Returns a new signal that will fire whenever a class is bound to the binder local birdBinder = Binder.new(&quot;Bird&quot;, require(&quot;Bird&quot;)) -- Load bird into binder birdBinder:GetClassAddedSignal():Connect(function(bird) bird:Squack() -- Make the bird squack when it's first spawned end) -- Load all birds birdBinder:Start()   "},{"title":"GetClassRemovingSignal​","type":1,"pageTitle":"Binder","url":"api/Binder#GetClassRemovingSignal","content":"&lt;/&gt; Binder:GetClassRemovingSignal() → Signal&lt;T&gt; Returns a new signal that will fire whenever a class is removing from the binder.  "},{"title":"GetClassRemovedSignal​","type":1,"pageTitle":"Binder","url":"api/Binder#GetClassRemovedSignal","content":"&lt;/&gt; Binder:GetClassRemovedSignal() → Signal&lt;T&gt; Returns a new signal that will fire whenever a class is removed from the binder.  "},{"title":"GetAll​","type":1,"pageTitle":"Binder","url":"api/Binder#GetAll","content":"&lt;/&gt; Binder:GetAll() → {T} Returns all of the classes in a new table. local birdBinder = Binder.new(&quot;Bird&quot;, require(&quot;Bird&quot;)) -- Load bird into binder -- Update every bird every frame RunService.Stepped:Connect(function() for _, bird in pairs(birdBinder:GetAll()) do bird:Update() end end) birdBinder:Start()   "},{"title":"GetAllSet​","type":1,"pageTitle":"Binder","url":"api/Binder#GetAllSet","content":"&lt;/&gt; Binder:GetAllSet() → {[T]: boolean} Faster method to get all items in a binder local birdBinder = Binder.new(&quot;Bird&quot;, require(&quot;Bird&quot;)) -- Load bird into binder -- Update every bird every frame RunService.Stepped:Connect(function() for bird, _ in pairs(birdBinder:GetAllSet()) do bird:Update() end end) birdBinder:Start() warning Do not mutate this set directly  "},{"title":"Bind​","type":1,"pageTitle":"Binder","url":"api/Binder#Bind","content":"This item only works when running on the server. Server &lt;/&gt; Binder:Bind( inst: Instance -- Instance to check ) → T?-- Bound class Binds an instance to this binder using collection service and attempts to return it if it's bound properly. See BinderUtils.promiseBoundClass() for a safe way to retrieve it. warning Do not assume that a bound object will be retrieved  "},{"title":"Unbind​","type":1,"pageTitle":"Binder","url":"api/Binder#Unbind","content":"This item only works when running on the server. Server &lt;/&gt; Binder:Unbind( inst: Instance -- Instance to unbind ) → () Unbinds the instance by removing the tag.  "},{"title":"BindClient​","type":1,"pageTitle":"Binder","url":"api/Binder#BindClient","content":"This item only works when running on the client. Client &lt;/&gt; Binder:BindClient( inst: Instance -- Instance to bind ) → T?-- Bound class (potentially) See :Bind(). Acknowledges the risk of doing this on the client. Using this acknowledges that we're intentionally binding on a safe client object, i.e. one without replication. If another tag is changed on this instance, this tag will be lost/changed.  "},{"title":"UnbindClient​","type":1,"pageTitle":"Binder","url":"api/Binder#UnbindClient","content":"This item only works when running on the client. Client &lt;/&gt; Binder:UnbindClient( inst: Instance -- Instance to unbind ) → () See Unbind(), acknowledges risk of doing this on the client.  "},{"title":"Get​","type":1,"pageTitle":"Binder","url":"api/Binder#Get","content":"&lt;/&gt; Binder:Get( inst: Instance -- Instance to check ) → T? Returns a instance of the class that is bound to the instance given.  "},{"title":"Promise​","type":1,"pageTitle":"Binder","url":"api/Binder#Promise","content":"&lt;/&gt; Binder:Promise( inst: Instance ,-- Instance to check cancelToken?: CancelToken ) → Promise&lt;T&gt; Returns a promise which will resolve when the instance is bound.  "},{"title":"Destroy​","type":1,"pageTitle":"Binder","url":"api/Binder#Destroy","content":"&lt;/&gt; Binder:Destroy() → () Cleans up all bound classes, and disconnects all events. "},{"title":"BinderTouchingCalculator","type":0,"sectionRef":"#","url":"api/BinderTouchingCalculator","content":"On this page BinderTouchingCalculator Extends PartTouchingCalculator with generic binder stuff","keywords":""},{"title":"BinderProvider","type":0,"sectionRef":"#","url":"api/BinderProvider","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"BinderProvider","url":"api/BinderProvider#functions","content":" "},{"title":"new​","type":1,"pageTitle":"BinderProvider","url":"api/BinderProvider#new","content":"&lt;/&gt; BinderProvider.new(initMethod: ( self, serviceBag: ServiceBag )) → BinderProvider Constructs a new BinderProvider. local serviceBag = ServiceBag.new() -- Usually in a separate file! local binderProvider = BinderProvider.new(function(self, serviceBag) serviceBag:Add(Binder.new(&quot;Bird&quot;, require(&quot;Bird&quot;))) end) -- Retrieve binders local binders = serviceBag:GetService(binderProvider) -- Runs the game (including binders) serviceBag:Init() serviceBag:Start()   "},{"title":"isBinderProvider​","type":1,"pageTitle":"BinderProvider","url":"api/BinderProvider#isBinderProvider","content":"&lt;/&gt; BinderProvider.isBinderProvider(value: any) → boolean-- True if it is a binder provider Retrieves whether or not its a binder provider  "},{"title":"PromiseBinder​","type":1,"pageTitle":"BinderProvider","url":"api/BinderProvider#PromiseBinder","content":"&lt;/&gt; BinderProvider:PromiseBinder(binderName: string) → Promise&lt;Binder&lt;T&gt;&gt; Resolves to the given binder given the binderName.  "},{"title":"Init​","type":1,"pageTitle":"BinderProvider","url":"api/BinderProvider#Init","content":"&lt;/&gt; BinderProvider:Init(...: ServiceBag | any) → () Initializes itself and all binders  "},{"title":"PromiseBindersAdded​","type":1,"pageTitle":"BinderProvider","url":"api/BinderProvider#PromiseBindersAdded","content":"&lt;/&gt; BinderProvider:PromiseBindersAdded() → Promise Returns a promise that will resolve once all binders are added.  "},{"title":"PromiseBindersStarted​","type":1,"pageTitle":"BinderProvider","url":"api/BinderProvider#PromiseBindersStarted","content":"&lt;/&gt; BinderProvider:PromiseBindersStarted() → Promise Returns a promise that will resolve once all binders are started.  "},{"title":"Start​","type":1,"pageTitle":"BinderProvider","url":"api/BinderProvider#Start","content":"&lt;/&gt; BinderProvider:Start() → () Starts all of the binders.  "},{"title":"Get​","type":1,"pageTitle":"BinderProvider","url":"api/BinderProvider#Get","content":"&lt;/&gt; BinderProvider:Get(tagName: string) → Binder&lt;T&gt;? Retrieves a binder given a tagName  "},{"title":"Add​","type":1,"pageTitle":"BinderProvider","url":"api/BinderProvider#Add","content":"&lt;/&gt; BinderProvider:Add(binder: Binder&lt;T&gt;) → () Adds a binder given a tag name. "},{"title":"BinderUtils","type":0,"sectionRef":"#","url":"api/BinderUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"BinderUtils","url":"api/BinderUtils#functions","content":" "},{"title":"findFirstAncestor​","type":1,"pageTitle":"BinderUtils","url":"api/BinderUtils#findFirstAncestor","content":"&lt;/&gt; BinderUtils.findFirstAncestor( binder: Binder&lt;T&gt;, child: Instance ) → T? Finds the first ancestor that is bound with the current child. Skips the child class, of course.  "},{"title":"findFirstChild​","type":1,"pageTitle":"BinderUtils","url":"api/BinderUtils#findFirstChild","content":"&lt;/&gt; BinderUtils.findFirstChild( binder: Binder&lt;T&gt;, parent: Instance ) → T? Finds the first child bound with the given binder and returns the bound class.  "},{"title":"getChildren​","type":1,"pageTitle":"BinderUtils","url":"api/BinderUtils#getChildren","content":"&lt;/&gt; BinderUtils.getChildren( binder: Binder&lt;T&gt;, parent: Instance ) → {T} Gets all bound children of the given binder for the parent.  "},{"title":"mapBinderListToTable​","type":1,"pageTitle":"BinderUtils","url":"api/BinderUtils#mapBinderListToTable","content":"&lt;/&gt; BinderUtils.mapBinderListToTable(bindersList: {Binder&lt;any&gt;}) → {[string]: Binder&lt;any&gt;} Maps a list of binders into a look up table where the keys are tags and the value is the binder. Duplicates are overwritten by the last entry.  "},{"title":"getMappedFromList​","type":1,"pageTitle":"BinderUtils","url":"api/BinderUtils#getMappedFromList","content":"&lt;/&gt; BinderUtils.getMappedFromList( tagsMap: {[string]: Binder&lt;T&gt;}, instanceList: {Instance } ) → {T} Given a mapping of tags to binders, retrieves the bound values from an instanceList by quering the list of :GetTags() instead of iterating over each binder. This lookup should be faster when there are potentially many interaction points for a given tag map, but the actual bound list should be low.  "},{"title":"getChildrenOfBinders​","type":1,"pageTitle":"BinderUtils","url":"api/BinderUtils#getChildrenOfBinders","content":"&lt;/&gt; BinderUtils.getChildrenOfBinders( bindersList: {Binder&lt;T&gt;}, parent: Instance ) → {T} Given a list of binders retrieves all children bound with the given value.  "},{"title":"getLinkedChildren​","type":1,"pageTitle":"BinderUtils","url":"api/BinderUtils#getLinkedChildren","content":"&lt;/&gt; BinderUtils.getLinkedChildren( binder: Binder&lt;T&gt;, linkName: string,-- Name of the object values required parent: Instance ) → {T} Gets all the linked (via objectValues of name linkName) bound objects  "},{"title":"getDescendants​","type":1,"pageTitle":"BinderUtils","url":"api/BinderUtils#getDescendants","content":"&lt;/&gt; BinderUtils.getDescendants( binder: Binder&lt;T&gt;, parent: Instance ) → {T} Gets all bound descendants of the given binder for the parent. "},{"title":"BounceTemplate","type":0,"sectionRef":"#","url":"api/BounceTemplate","content":"On this page BounceTemplate This item is only intended to be used by the module's authors. Private Bounces the current named script to the expected version of this module","keywords":""},{"title":"Blend","type":0,"sectionRef":"#","url":"api/Blend","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Blend","url":"api/Blend#functions","content":" "},{"title":"New​","type":1,"pageTitle":"Blend","url":"api/Blend#New","content":"&lt;/&gt; Blend.New(className: string) → (props: {[string]: any;}) → Observable&lt;Instance &gt; Creates a new function which will return an observable that, given the props in question, will construct a new instance and assign all props. This is the equivalent of a pipe-able Rx command. Blend.New &quot;ScreenGui&quot; { Parent = game.Players.LocalPlayer.PlayerGui; [Blend.Children] = { Blend.New &quot;Frame&quot; { Size = UDim2.new(1, 0, 1, 0); BackgroundTransparency = 0.5; }; }; };   "},{"title":"State​","type":1,"pageTitle":"Blend","url":"api/Blend#State","content":"&lt;/&gt; Blend.State(defaultValue: T) → ValueObject&lt;T&gt; Creates a new Blend State which is actually just a ValueObject underneath.  "},{"title":"Computed​","type":1,"pageTitle":"Blend","url":"api/Blend#Computed","content":"&lt;/&gt; Blend.Computed(...: Aseriesofconvertablestates,followedbyafunctionattheend.) → Observable&lt;T&gt; Takes a list of variables and uses them to compute an observable that will combine into any value. These variables can be any value, and if they can be converted into an Observable, they will be, which will be used to compute the value. local verbState = Blend.State(&quot;hi&quot;) local nameState = Blend.State(&quot;alice&quot;) local computed = Blend.Computed(verbState, nameState, function(verb, name) return verb .. &quot; &quot; .. name end) maid:GiveTask(computed:Subscribe(function(sentence) print(sentence) end)) --&gt; &quot;hi alice&quot; nameState.Value = &quot;bob&quot; --&gt; &quot;hi bob&quot; verbState.Value = &quot;bye&quot; --&gt; &quot;bye bob&quot; nameState.Value = &quot;alice&quot; --&gt; &quot;bye alice&quot;   "},{"title":"OnChange​","type":1,"pageTitle":"Blend","url":"api/Blend#OnChange","content":"&lt;/&gt; Blend.OnChange(propertyName: string) → (instance: Instance ) → Observable Short hand to register a propertyEvent changing Blend.mount(workspace, { [Blend.OnChange &quot;Name&quot;] = function(name) print(name) end; }) --&gt; Immediately will print &quot;Workspace&quot; workspace.Name = &quot;Hello&quot; --&gt; Prints &quot;Hello&quot;   "},{"title":"OnEvent​","type":1,"pageTitle":"Blend","url":"api/Blend#OnEvent","content":"&lt;/&gt; Blend.OnEvent(eventName: string) → (instance: Instance ) → Observable Short hand to register an event from the instance Blend.mount(workspace, { [Blend.OnEvent &quot;ChildAdded&quot;] = function(child) print(&quot;Child added&quot;, child) end; }) local folder = Instance.new(&quot;Folder&quot;) folder.Name = &quot;Hi&quot; folder.Parent = workspace --&gt; prints &quot;Child added Hi&quot;   "},{"title":"Attached​","type":1,"pageTitle":"Blend","url":"api/Blend#Attached","content":"&lt;/&gt; Blend.Attached(constructor: T) → (parent: Instance ) → Observable&lt;T&gt; Uses the constructor to attach a class or resource to the actual object for the lifetime of the subscription of that object.  "},{"title":"ComputedPairs​","type":1,"pageTitle":"Blend","url":"api/Blend#ComputedPairs","content":"&lt;/&gt; Blend.ComputedPairs( source: Observable&lt;T&gt; | any, compute: ( key: any, value: any, innerMaid: Maid ) → Instance | Observable&lt;Instance &gt; ) → Observable&lt;Brio&lt;Instance &gt;&gt; Similiar to Fusion's ComputedPairs, where the changes are cached, and the lifetime limited.  "},{"title":"AccelTween​","type":1,"pageTitle":"Blend","url":"api/Blend#AccelTween","content":"&lt;/&gt; Blend.AccelTween( source: any,-- Source observable (or convertable) acceleration: any-- Source acceleration (or convertable) ) → Observable Like Blend.Spring, but for AccelTween  "},{"title":"Spring​","type":1,"pageTitle":"Blend","url":"api/Blend#Spring","content":"&lt;/&gt; Blend.Spring( source: any, speed: any, damper: any ) → Observable? Converts this arbitrary value into an observable that will initialize a spring and interpolate it between values upon subscription. local percentVisible = Blend.State(0) local visibleSpring = Blend.Spring(percentVisible, 30) local transparency = Blend.Computed(visibleSpring, function(percent) return 1 - percent end); Blend.mount(frame, { BackgroundTransparency = visibleSpring; })   "},{"title":"toPropertyObservable​","type":1,"pageTitle":"Blend","url":"api/Blend#toPropertyObservable","content":"&lt;/&gt; Blend.toPropertyObservable(value: any) → Observable? Converts this arbitrary value into an observable suitable for use in properties.  "},{"title":"toNumberObservable​","type":1,"pageTitle":"Blend","url":"api/Blend#toNumberObservable","content":"&lt;/&gt; Blend.toNumberObservable(value: number | any) → Observable&lt;number&gt;? Converts this arbitrary value into an observable that emits numbers.  "},{"title":"toEventObservable​","type":1,"pageTitle":"Blend","url":"api/Blend#toEventObservable","content":"&lt;/&gt; Blend.toEventObservable(value: any) → Observable? Converts this arbitrary value into an observable that can be used to emit events.  "},{"title":"toEventHandler​","type":1,"pageTitle":"Blend","url":"api/Blend#toEventHandler","content":"&lt;/&gt; Blend.toEventHandler(value: any) → function? Converts this arbitrary value into an event handler, which can be subscribed to  "},{"title":"Children​","type":1,"pageTitle":"Blend","url":"api/Blend#Children","content":"&lt;/&gt; Blend.Children( parent: Instance , value: any ) → MaidTask Mounts children to the parent and returns an object which will cleanup and delete all children when removed. Note that this effectively recursively mounts children and their values, which is the heart of the reactive tree. Blend.New &quot;ScreenGui&quot; { Parent = game.Players.LocalPlayer.PlayerGui; [Blend.Children] = { Blend.New &quot;Frame&quot; { Size = UDim2.new(1, 0, 1, 0); BackgroundTransparency = 0.5; }; }; }; Rules: { Instance } -Tables of instances are all parented to the parent Brio will last for the lifetime of the brio Brio&lt;Observable&gt; will last for the lifetime of the brio Brio&lt;Signal&gt; will also act as above Brio&lt;Promise&gt; will also act as above Brio&lt;{ Instance } will also act as above Observable will parent to the parent Signal will act as Observable ValueObject will act as an Observable Promise will act as an Observable will parent all instances to the parent Observables may emit non-observables (in form of Computed/Dynamic) Observable&lt;Brio&gt; will last for the lifetime of the brio, and parent the instance. Observable&lt;Observable&gt; occurs when computed returns a value. ValueObject will switch to the current value Cleanup: Instances will be cleaned up on unsubscribe  "},{"title":"Instance​","type":1,"pageTitle":"Blend","url":"api/Blend#Instance","content":"&lt;/&gt; Blend.Instance(parent: Instance ) → Observable&lt;Instance &gt; An event emitter that emits the instance that was actually created. This is useful for a variety of things. Using this to track an instance local currentCamera = Blend.State() return Blend.New &quot;ViewportFrame&quot; { CurrentCamera = currentCamera; [Blend.Children] = { self._current; Blend.New &quot;Camera&quot; { [Blend.Instance] = currentCamera; }; }; }; You can also use this to execute code against an instance. return Blend.New &quot;Frame&quot; { [Blend.Instance] = function(frame) print(&quot;We got a new frame!&quot;) end; }; Note that if you subscribe twice to the resulting observable, the internal function will execute twice.  "},{"title":"Single​","type":1,"pageTitle":"Blend","url":"api/Blend#Single","content":"&lt;/&gt; Blend.Single(Observable&lt;Instance: | Brio&lt;Instance &gt;&gt;) → Observable&lt;Brio&lt;Instance &gt;&gt; Ensures the computed version of a value is limited by lifetime instead of multiple. Used in conjunction with Blend.Children and Blend.Computed. warning In general, cosntructing new instances like this is a bad idea, so it's recommended against it. Blend.New &quot;ScreenGui&quot; { Parent = game.Players.LocalPlayer.PlayerGui; [Blend.Children] = { Blend.Single(Blend.Computed(percentVisible, function() -- you generally would not want to do this anyway because this reconstructs a new frame -- every frame. Blend.New &quot;Frame&quot; { Size = UDim2.new(1, 0, 1, 0); BackgroundTransparency = 0.5; }; end) }; };   "},{"title":"_observeChildren​","type":1,"pageTitle":"Blend","url":"api/Blend#_observeChildren","content":"&lt;/&gt; Blend._observeChildren(value: any) → Observable&lt;Instance &gt; Observes children and ensures that the value is cleaned up afterwards.  "},{"title":"mount​","type":1,"pageTitle":"Blend","url":"api/Blend#mount","content":"&lt;/&gt; Blend.mount( instance: Instance , props: table ) → Maid Mounts the instance to the props. This handles mounting children, and events. The contract is that the props table is turned into observables. Note the following. Keys of strings are turned into properties If this can be turned into an observable, it will be used to subscribe to this event Otherwise, we assign directly Keys of functions are invoked on the instance in question `(instance, value) -&gt; Observable If this returns an observable (or can be turned into one), we subscribe the event immediately If the key is Blend.Children then we invoke mountChildren on it "},{"title":"BounceTemplateUtils","type":0,"sectionRef":"#","url":"api/BounceTemplateUtils","content":"On this page BounceTemplateUtils This item is only intended to be used by the module's authors. Private","keywords":""},{"title":"BoundChildCollection","type":0,"sectionRef":"#","url":"api/BoundChildCollection","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"BoundChildCollection","url":"api/BoundChildCollection#properties","content":" "},{"title":"ClassAdded​","type":1,"pageTitle":"BoundChildCollection","url":"api/BoundChildCollection#ClassAdded","content":"&lt;/&gt; BoundChildCollection.ClassAdded: Signal&lt;T&gt; Fires on class addition  "},{"title":"ClassRemoved​","type":1,"pageTitle":"BoundChildCollection","url":"api/BoundChildCollection#ClassRemoved","content":"&lt;/&gt; BoundChildCollection.ClassRemoved: Signal&lt;T&gt; Fires on class removal "},{"title":"Functions​","type":1,"pageTitle":"BoundChildCollection","url":"api/BoundChildCollection#functions","content":" "},{"title":"new​","type":1,"pageTitle":"BoundChildCollection","url":"api/BoundChildCollection#new","content":"&lt;/&gt; BoundChildCollection.new( binder: Binder&lt;T&gt;, parent: Instance ) → BoundChildCollection&lt;T&gt; Constructcs a new BoundChildCollection.  "},{"title":"HasClass​","type":1,"pageTitle":"BoundChildCollection","url":"api/BoundChildCollection#HasClass","content":"&lt;/&gt; BoundChildCollection:HasClass(class: T) → boolean?-- true if the class exists, nil otherwise Returns whether the track has the class  "},{"title":"GetSize​","type":1,"pageTitle":"BoundChildCollection","url":"api/BoundChildCollection#GetSize","content":"&lt;/&gt; BoundChildCollection:GetSize() → number Gets the size  "},{"title":"GetSet​","type":1,"pageTitle":"BoundChildCollection","url":"api/BoundChildCollection#GetSet","content":"&lt;/&gt; BoundChildCollection:GetSet() → {[T]=true}-- The set Returns the raw classes variable as [class] = true. warning Do not modify the set  "},{"title":"GetClasses​","type":1,"pageTitle":"BoundChildCollection","url":"api/BoundChildCollection#GetClasses","content":"&lt;/&gt; BoundChildCollection:GetClasses() → {T} Slow than :GetSet(), but adds them in an ordered list "},{"title":"BoundAncestorTracker","type":0,"sectionRef":"#","url":"api/BoundAncestorTracker","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"BoundAncestorTracker","url":"api/BoundAncestorTracker#properties","content":" "},{"title":"Class​","type":1,"pageTitle":"BoundAncestorTracker","url":"api/BoundAncestorTracker#Class","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; BoundAncestorTracker.Class: ValueObject&lt;T&gt; Bound value "},{"title":"Functions​","type":1,"pageTitle":"BoundAncestorTracker","url":"api/BoundAncestorTracker#functions","content":" "},{"title":"new​","type":1,"pageTitle":"BoundAncestorTracker","url":"api/BoundAncestorTracker#new","content":"&lt;/&gt; BoundAncestorTracker.new( binder: Binder&lt;T&gt;, child: Instance ) → BoundAncestorTracker Constructs a new BoundAncestorTracker "},{"title":"BoundLinkCollection","type":0,"sectionRef":"#","url":"api/BoundLinkCollection","content":"On this page BoundLinkCollection Handles searching for bound objects following links (object values) under a parent with a specific name.","keywords":""},{"title":"BoundLinkUtils","type":0,"sectionRef":"#","url":"api/BoundLinkUtils","content":"On this page BoundLinkUtils Utility functions involving binders and links","keywords":""},{"title":"BoundingBoxUtils","type":0,"sectionRef":"#","url":"api/BoundingBoxUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"BoundingBoxUtils","url":"api/BoundingBoxUtils#functions","content":" "},{"title":"getPartsBoundingBox​","type":1,"pageTitle":"BoundingBoxUtils","url":"api/BoundingBoxUtils#getPartsBoundingBox","content":"&lt;/&gt; BoundingBoxUtils.getPartsBoundingBox( parts: {Instance | {{ CFrame: CFrame , Size: Vector3 }}}, relativeTo: CFrame? ) → ( Vector3 ,-- size Vector3 -- position ) Retrieves a bounding box for a given set of parts  "},{"title":"clampPointToBoundingBox​","type":1,"pageTitle":"BoundingBoxUtils","url":"api/BoundingBoxUtils#clampPointToBoundingBox","content":"&lt;/&gt; BoundingBoxUtils.clampPointToBoundingBox( cframe: CFrame ,-- CFrame of bounding box size: Vector3 ,-- Size of bounding box point: Vector3 -- Point to transform ) → ( Vector3 ,-- Clamped point Vector3 -- Center of bounding box ) Clamps a point inside of a given bounding box See: https://devforum.roblox.com/t/finding-the-closest-vector3-point-on-a-part-from-the-character/130679/2  "},{"title":"pushPointToLieOnBoundingBox​","type":1,"pageTitle":"BoundingBoxUtils","url":"api/BoundingBoxUtils#pushPointToLieOnBoundingBox","content":"&lt;/&gt; BoundingBoxUtils.pushPointToLieOnBoundingBox( cframe: CFrame ,-- CFrame of bounding box size: Vector3 ,-- Size of bounding box point: Vector3 -- Point to transform ) → Vector3  Pushes a point to lie within the bounding box  "},{"title":"getChildrenBoundingBox​","type":1,"pageTitle":"BoundingBoxUtils","url":"api/BoundingBoxUtils#getChildrenBoundingBox","content":"&lt;/&gt; BoundingBoxUtils.getChildrenBoundingBox( parent: Instance , relativeTo: CFrame? ) → ( Vector3? ,-- size Vector3? -- position ) Given a parent, retrieve the bounding box for this parent  "},{"title":"axisAlignedBoxSize​","type":1,"pageTitle":"BoundingBoxUtils","url":"api/BoundingBoxUtils#axisAlignedBoxSize","content":"&lt;/&gt; BoundingBoxUtils.axisAlignedBoxSize( cframe: CFrame , size: Vector3 ) → () Returns the size of an axis aligned bounding box for a given CFrame  "},{"title":"getBoundingBox​","type":1,"pageTitle":"BoundingBoxUtils","url":"api/BoundingBoxUtils#getBoundingBox","content":"&lt;/&gt; BoundingBoxUtils.getBoundingBox( data: Instance | {{CFrame: CFrame; Size: Vector3 }},-- List of things with both Size and CFrame relativeTo: CFrame? ) → ( Vector3 ,-- size Vector3 -- position ) Gets a boundingBox for the given data. See: https://gist.github.com/zeux/1a67e8930df782d5474276e218831e22  "},{"title":"inBoundingBox​","type":1,"pageTitle":"BoundingBoxUtils","url":"api/BoundingBoxUtils#inBoundingBox","content":"&lt;/&gt; BoundingBoxUtils.inBoundingBox( cframe: CFrame , size: Vector3 , testPosition: Vector3 ) → boolean Returns if a point is in a bounding box "},{"title":"BoundParentTracker","type":0,"sectionRef":"#","url":"api/BoundParentTracker","content":"On this page BoundParentTracker Tracks a parent bound to a specific binder","keywords":""},{"title":"BrioUtils","type":0,"sectionRef":"#","url":"api/BrioUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"BrioUtils","url":"api/BrioUtils#functions","content":" "},{"title":"clone​","type":1,"pageTitle":"BrioUtils","url":"api/BrioUtils#clone","content":"&lt;/&gt; BrioUtils.clone(brio: Brio&lt;T&gt;) → Brio&lt;T&gt; Clones a brio, such that it may be killed without affecting the original brio.  "},{"title":"aliveOnly​","type":1,"pageTitle":"BrioUtils","url":"api/BrioUtils#aliveOnly","content":"&lt;/&gt; BrioUtils.aliveOnly(brios: {Brio&lt;T&gt;}) → {Brio&lt;T&gt;} Returns a list of alive Brios only  "},{"title":"firstAlive​","type":1,"pageTitle":"BrioUtils","url":"api/BrioUtils#firstAlive","content":"&lt;/&gt; BrioUtils.firstAlive(brios: {Brio&lt;T&gt;}) → Brio&lt;T&gt; Returns the first alive Brio in a list  "},{"title":"flatten​","type":1,"pageTitle":"BrioUtils","url":"api/BrioUtils#flatten","content":"&lt;/&gt; BrioUtils.flatten(brioTable: {any: Brio&lt;Brio&lt;T&gt; | T&gt;}) → Brio&lt;{T}&gt; Given a list of brios of brios, flattens that list into a brio with just one T value.  "},{"title":"first​","type":1,"pageTitle":"BrioUtils","url":"api/BrioUtils#first","content":"&lt;/&gt; BrioUtils.first( brios: {Brio&lt;T&gt;}, ...: U ) → Brio&lt;U&gt; Returns a brio that dies whenever the first Brio in the list dies. The value of the Brio is the ... value.  "},{"title":"withOtherValues​","type":1,"pageTitle":"BrioUtils","url":"api/BrioUtils#withOtherValues","content":"since 3.6.0 &lt;/&gt; BrioUtils.withOtherValues( brio: Brio&lt;T&gt;, ...: U ) → Brio&lt;U&gt; Clones a brio, such that it may be killed without affecting the original brio.  "},{"title":"extend​","type":1,"pageTitle":"BrioUtils","url":"api/BrioUtils#extend","content":"&lt;/&gt; BrioUtils.extend( brio: Brio&lt;U&gt;, ...: T ) → Brio&lt;T&gt; Makes a brio that is limited by the lifetime of its parent (but could be shorter) and has the new values given.  "},{"title":"prepend​","type":1,"pageTitle":"BrioUtils","url":"api/BrioUtils#prepend","content":"since 3.6.0 &lt;/&gt; BrioUtils.prepend( brio: Brio&lt;U&gt;, ...: T ) → Brio&lt;T&gt; Makes a brio that is limited by the lifetime of its parent (but could be shorter) and has the new values given at the beginning of the result  "},{"title":"merge​","type":1,"pageTitle":"BrioUtils","url":"api/BrioUtils#merge","content":"&lt;/&gt; BrioUtils.merge( brio: Brio&lt;{T}&gt;, otherBrio: Brio&lt;{U}&gt; ) → Brio&lt;{T | U}&gt; Merges the existing brio value with the other brio "},{"title":"Brio","type":0,"sectionRef":"#","url":"api/Brio","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Brio","url":"api/Brio#properties","content":" "},{"title":"DEAD​","type":1,"pageTitle":"Brio","url":"api/Brio#DEAD","content":"&lt;/&gt; Brio.DEAD: Brio An already dead brio which may be used for identity purposes. print(Brio.DEAD:IsDead()) --&gt; true  "},{"title":"Functions​","type":1,"pageTitle":"Brio","url":"api/Brio#functions","content":" "},{"title":"isBrio​","type":1,"pageTitle":"Brio","url":"api/Brio#isBrio","content":"&lt;/&gt; Brio.isBrio(value: any) → boolean Returns whether a value is a Brio. print(Brio.isBrio(&quot;yolo&quot;)) --&gt; false   "},{"title":"new​","type":1,"pageTitle":"Brio","url":"api/Brio#new","content":"&lt;/&gt; Brio.new( ...: any-- Brio values ) → Brio Constructs a new Brio. local brio = Brio.new(&quot;a&quot;, &quot;b&quot;) print(brio:GetValue()) --&gt; a b   "},{"title":"delayed​","type":1,"pageTitle":"Brio","url":"api/Brio#delayed","content":"since 3.6.0 &lt;/&gt; Brio.delayed( time: number, ...: any-- Brio values ) → Brio Constructs a new brio that will cleanup afer the set amount of time  "},{"title":"GetDiedSignal​","type":1,"pageTitle":"Brio","url":"api/Brio#GetDiedSignal","content":"&lt;/&gt; Brio:GetDiedSignal() → Signal Gets a signal that will fire when the Brio dies. If the brio is already dead calling this method will error. info Calling this while the brio is already dead will throw a error. local brio = Brio.new(&quot;a&quot;, &quot;b&quot;) brio:GetDiedSignal():Connect(function() print(&quot;Brio died&quot;) end) brio:Kill() --&gt; Brio died brio:Kill() -- no output   "},{"title":"IsDead​","type":1,"pageTitle":"Brio","url":"api/Brio#IsDead","content":"&lt;/&gt; Brio:IsDead() → boolean Returns true is the brio is dead. local brio = Brio.new(&quot;a&quot;, &quot;b&quot;) print(brio:IsDead()) --&gt; false brio:Kill() print(brio:IsDead()) --&gt; true   "},{"title":"ErrorIfDead​","type":1,"pageTitle":"Brio","url":"api/Brio#ErrorIfDead","content":"&lt;/&gt; Brio:ErrorIfDead() → () Throws an error if the Brio is dead. brio.DEAD:ErrorIfDead() --&gt; ERROR: [Brio.ErrorIfDead] - Brio is dead   "},{"title":"ToMaid​","type":1,"pageTitle":"Brio","url":"api/Brio#ToMaid","content":"&lt;/&gt; Brio:ToMaid() → Maid Constructs a new Maid which will clean up when the brio dies. Will error if the Brio is dead. info Calling this while the brio is already dead will throw a error. local brio = Brio.new(&quot;a&quot;) local maid = brio:ToMaid() maid:GiveTask(function() print(&quot;Cleaning up!&quot;) end) brio:Kill() --&gt; Cleaning up!   "},{"title":"GetValue​","type":1,"pageTitle":"Brio","url":"api/Brio#GetValue","content":"&lt;/&gt; Brio:GetValue() → any If the brio is not dead, will return the values unpacked from the brio. info Calling this while the brio is already dead will throw a error. Values should not be used past the lifetime of the brio, and can be considered invalid. local brio = Brio.new(&quot;a&quot;, 1, 2) print(brio:GetValue()) --&gt; &quot;a&quot; 1 2 brio:Kill() print(brio:GetValue()) --&gt; ERROR: Brio is dead   "},{"title":"GetPackedValues​","type":1,"pageTitle":"Brio","url":"api/Brio#GetPackedValues","content":"since 3.6.0 &lt;/&gt; Brio:GetPackedValues() → { n: number, ...T } Returns the packed values from table.pack() format  "},{"title":"Destroy​","type":1,"pageTitle":"Brio","url":"api/Brio#Destroy","content":"&lt;/&gt; Brio:Destroy() → () Kills the Brio. info You can call this multiple times and it will not error if the brio is dead. local brio = Brio.new(&quot;hi&quot;) print(brio:GetValue()) --&gt; &quot;hi&quot; brio:Kill() print(brio:GetValue()) --&gt; ERROR: Brio is dead   "},{"title":"Kill​","type":1,"pageTitle":"Brio","url":"api/Brio#Kill","content":"&lt;/&gt; Brio:Kill() → () Alias for Destroy. "},{"title":"ButtonUtils","type":0,"sectionRef":"#","url":"api/ButtonUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ButtonUtils","url":"api/ButtonUtils#functions","content":" "},{"title":"getMouseOverColor​","type":1,"pageTitle":"ButtonUtils","url":"api/ButtonUtils#getMouseOverColor","content":"&lt;/&gt; ButtonUtils.getMouseOverColor( originalColor: Color3 , factor: number?-- Defaults to 1 ) → Color3  Gets a tinted mouse over color "},{"title":"ButtonHighlightModel","type":0,"sectionRef":"#","url":"api/ButtonHighlightModel","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"ButtonHighlightModel","url":"api/ButtonHighlightModel#properties","content":" "},{"title":"InteractionEnabled​","type":1,"pageTitle":"ButtonHighlightModel","url":"api/ButtonHighlightModel#InteractionEnabled","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ButtonHighlightModel.InteractionEnabled: BoolValue    "},{"title":"IsSelected​","type":1,"pageTitle":"ButtonHighlightModel","url":"api/ButtonHighlightModel#IsSelected","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ButtonHighlightModel.IsSelected: BoolValue    "},{"title":"IsMouseOrTouchOver​","type":1,"pageTitle":"ButtonHighlightModel","url":"api/ButtonHighlightModel#IsMouseOrTouchOver","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ButtonHighlightModel.IsMouseOrTouchOver: BoolValue    "},{"title":"IsChoosen​","type":1,"pageTitle":"ButtonHighlightModel","url":"api/ButtonHighlightModel#IsChoosen","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ButtonHighlightModel.IsChoosen: BoolValue    "},{"title":"IsHighlighted​","type":1,"pageTitle":"ButtonHighlightModel","url":"api/ButtonHighlightModel#IsHighlighted","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ButtonHighlightModel.IsHighlighted: BoolValue    "},{"title":"IsPressed​","type":1,"pageTitle":"ButtonHighlightModel","url":"api/ButtonHighlightModel#IsPressed","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ButtonHighlightModel.IsPressed: BoolValue   "},{"title":"Functions​","type":1,"pageTitle":"ButtonHighlightModel","url":"api/ButtonHighlightModel#functions","content":" "},{"title":"new​","type":1,"pageTitle":"ButtonHighlightModel","url":"api/ButtonHighlightModel#new","content":"&lt;/&gt; ButtonHighlightModel.new( button?: GuiBase , onUpdate: function? ) → ButtonHighlightModel A model that dictates the current state of a button.  "},{"title":"SetButton​","type":1,"pageTitle":"ButtonHighlightModel","url":"api/ButtonHighlightModel#SetButton","content":"&lt;/&gt; ButtonHighlightModel:SetButton(button: Instance ) → () Sets the button for the highlight model.  "},{"title":"ObservePercentPressed​","type":1,"pageTitle":"ButtonHighlightModel","url":"api/ButtonHighlightModel#ObservePercentPressed","content":"&lt;/&gt; ButtonHighlightModel:ObservePercentPressed() → Observable&lt;number&gt; Observes how pressed down the button is  "},{"title":"ObservePercentHighlighted​","type":1,"pageTitle":"ButtonHighlightModel","url":"api/ButtonHighlightModel#ObservePercentHighlighted","content":"&lt;/&gt; ButtonHighlightModel:ObservePercentHighlighted() → Observable&lt;number&gt; Observes how highlighted the button is  "},{"title":"ObservePercentHighlightedTarget​","type":1,"pageTitle":"ButtonHighlightModel","url":"api/ButtonHighlightModel#ObservePercentHighlightedTarget","content":"&lt;/&gt; ButtonHighlightModel:ObservePercentHighlightedTarget() → Observable&lt;number&gt; Observes target for how highlighted the button is  "},{"title":"ObservePercentChoosen​","type":1,"pageTitle":"ButtonHighlightModel","url":"api/ButtonHighlightModel#ObservePercentChoosen","content":"&lt;/&gt; ButtonHighlightModel:ObservePercentChoosen() → Observable&lt;number&gt; Observes how choosen the button is  "},{"title":"IsInteractionEnabled​","type":1,"pageTitle":"ButtonHighlightModel","url":"api/ButtonHighlightModel#IsInteractionEnabled","content":"&lt;/&gt; ButtonHighlightModel:IsInteractionEnabled() → booloean Observes interaction enabled  "},{"title":"SetKeyDown​","type":1,"pageTitle":"ButtonHighlightModel","url":"api/ButtonHighlightModel#SetKeyDown","content":"&lt;/&gt; ButtonHighlightModel:SetKeyDown(isKeyDown: boolean) → () Sets whether a key is down  "},{"title":"SetInteractionEnabled​","type":1,"pageTitle":"ButtonHighlightModel","url":"api/ButtonHighlightModel#SetInteractionEnabled","content":"&lt;/&gt; ButtonHighlightModel:SetInteractionEnabled(interactionEnabled: boolean) → () Sets whether interaction is enabled  "},{"title":"SetIsChoosen​","type":1,"pageTitle":"ButtonHighlightModel","url":"api/ButtonHighlightModel#SetIsChoosen","content":"&lt;/&gt; ButtonHighlightModel:SetIsChoosen(isChoosen: boolean) → () Sets whether the model is choosen "},{"title":"CameraControls","type":0,"sectionRef":"#","url":"api/CameraControls","content":"On this page CameraControls Interface between user input and camera controls","keywords":""},{"title":"CameraEffectUtils","type":0,"sectionRef":"#","url":"api/CameraEffectUtils","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"CameraEffectUtils","url":"api/CameraEffectUtils#types","content":" "},{"title":"CameraEffect​","type":1,"pageTitle":"CameraEffectUtils","url":"api/CameraEffectUtils#CameraEffect","content":"&lt;/&gt; interface CameraEffect { CameraState: CameraState } Represents an effect that can be used in combination with other effects.  "},{"title":"CameraLike​","type":1,"pageTitle":"CameraEffectUtils","url":"api/CameraEffectUtils#CameraLike","content":"&lt;/&gt; type CameraLike = CameraEffect | CameraState Something that is like a camera "},{"title":"CameraGamepadInputUtils","type":0,"sectionRef":"#","url":"api/CameraGamepadInputUtils","content":"On this page CameraGamepadInputUtils","keywords":""},{"title":"CameraFrame","type":0,"sectionRef":"#","url":"api/CameraFrame","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"CameraFrame","url":"api/CameraFrame#properties","content":" "},{"title":"CFrame​","type":1,"pageTitle":"CameraFrame","url":"api/CameraFrame#CFrame","content":"&lt;/&gt; CameraFrame.CFrame: CFrame    "},{"title":"Position​","type":1,"pageTitle":"CameraFrame","url":"api/CameraFrame#Position","content":"&lt;/&gt; CameraFrame.Position: Vector3    "},{"title":"FieldOfView​","type":1,"pageTitle":"CameraFrame","url":"api/CameraFrame#FieldOfView","content":"&lt;/&gt; CameraFrame.FieldOfView: number   "},{"title":"QFrame​","type":1,"pageTitle":"CameraFrame","url":"api/CameraFrame#QFrame","content":"&lt;/&gt; CameraFrame.QFrame: QFrame   "},{"title":"QFrame​","type":1,"pageTitle":"CameraFrame","url":"api/CameraFrame#QFrame","content":"&lt;/&gt; CameraFrame.QFrame: QFrame  "},{"title":"Functions​","type":1,"pageTitle":"CameraFrame","url":"api/CameraFrame#functions","content":" "},{"title":"new​","type":1,"pageTitle":"CameraFrame","url":"api/CameraFrame#new","content":"&lt;/&gt; CameraFrame.new( qFrame: QFrame, fieldOfView: number ) → CameraFrame Constructs a new CameraFrame  "},{"title":"isCameraFrame​","type":1,"pageTitle":"CameraFrame","url":"api/CameraFrame#isCameraFrame","content":"&lt;/&gt; CameraFrame.isCameraFrame(value: any) → boolean Returns whether a value is a CameraFrame  "},{"title":"__add​","type":1,"pageTitle":"CameraFrame","url":"api/CameraFrame#__add","content":"&lt;/&gt; CameraFrame.__add( a: CameraFrame, b: CameraFrame ) → CameraFrame Linearly adds the camera frames together.  "},{"title":"__sub​","type":1,"pageTitle":"CameraFrame","url":"api/CameraFrame#__sub","content":"&lt;/&gt; CameraFrame.__sub( a: CameraFrame, b: CameraFrame ) → CameraFrame Linearly subtractions the camera frames together.  "},{"title":"__unm​","type":1,"pageTitle":"CameraFrame","url":"api/CameraFrame#__unm","content":"&lt;/&gt; CameraFrame.__unm(a: CameraFrame) → CameraFrame Inverts the QFrame and the field of view.  "},{"title":"__mul​","type":1,"pageTitle":"CameraFrame","url":"api/CameraFrame#__mul","content":"&lt;/&gt; CameraFrame.__mul( a: CameraFrame | number, b: CameraFrame | number ) → CameraFrame Multiplies the camera frame with the given value  "},{"title":"__div​","type":1,"pageTitle":"CameraFrame","url":"api/CameraFrame#__div","content":"&lt;/&gt; CameraFrame.__div( a: CameraFrame, b: number ) → CameraFrame Divides the camera frame by the value  "},{"title":"__pow​","type":1,"pageTitle":"CameraFrame","url":"api/CameraFrame#__pow","content":"&lt;/&gt; CameraFrame.__pow( a: CameraFrame, b: number ) → CameraFrame Takes the camera frame to the Nth power  "},{"title":"__eq​","type":1,"pageTitle":"CameraFrame","url":"api/CameraFrame#__eq","content":"&lt;/&gt; CameraFrame.__eq( a: CameraFrame, b: CameraFrame ) → boolean Compares the camera frame to make sure they're equal "},{"title":"CameraInputUtils","type":0,"sectionRef":"#","url":"api/CameraInputUtils","content":"On this page CameraInputUtils","keywords":""},{"title":"CameraStackService","type":0,"sectionRef":"#","url":"api/CameraStackService","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"CameraStackService","url":"api/CameraStackService#functions","content":" "},{"title":"Init​","type":1,"pageTitle":"CameraStackService","url":"api/CameraStackService#Init","content":"&lt;/&gt; CameraStackService:Init(serviceBag: ServiceBag) → () Initializes a new camera stack. Should be done via the ServiceBag.  "},{"title":"SetDoNotUseDefaultCamera​","type":1,"pageTitle":"CameraStackService","url":"api/CameraStackService#SetDoNotUseDefaultCamera","content":"&lt;/&gt; CameraStackService:SetDoNotUseDefaultCamera(doNotUseDefaultCamera: boolean) → () Prevents the default camera from being used  "},{"title":"PushDisable​","type":1,"pageTitle":"CameraStackService","url":"api/CameraStackService#PushDisable","content":"&lt;/&gt; CameraStackService:PushDisable() → function-- Function to cancel disable Pushes a disable state onto the camera stack  "},{"title":"PrintCameraStack​","type":1,"pageTitle":"CameraStackService","url":"api/CameraStackService#PrintCameraStack","content":"&lt;/&gt; CameraStackService:PrintCameraStack() → () Outputs the camera stack. Intended for diagnostics.  "},{"title":"GetDefaultCamera​","type":1,"pageTitle":"CameraStackService","url":"api/CameraStackService#GetDefaultCamera","content":"&lt;/&gt; CameraStackService:GetDefaultCamera() → SummedCamera-- DefaultCamera + ImpulseCamera Returns the default camera  "},{"title":"GetImpulseCamera​","type":1,"pageTitle":"CameraStackService","url":"api/CameraStackService#GetImpulseCamera","content":"&lt;/&gt; CameraStackService:GetImpulseCamera() → ImpulseCamera Returns the impulse camera. Useful for adding camera shake. Shaking the camera: self._cameraStackService:GetImpulseCamera():Impulse(Vector3.new(0.25, 0, 0.25*(math.random()-0.5))) You can also sum the impulse camera into another effect to layer the shake on top of the effect as desired. -- Adding global custom camera shake to a custom camera effect local customCameraEffect = ... return (customCameraEffect + self._cameraStackService:GetImpulseCamera()):SetMode(&quot;Relative&quot;)   "},{"title":"GetRawDefaultCamera​","type":1,"pageTitle":"CameraStackService","url":"api/CameraStackService#GetRawDefaultCamera","content":"&lt;/&gt; CameraStackService:GetRawDefaultCamera() → DefaultCamera Returns the default camera without any impulse cameras  "},{"title":"GetTopCamera​","type":1,"pageTitle":"CameraStackService","url":"api/CameraStackService#GetTopCamera","content":"&lt;/&gt; CameraStackService:GetTopCamera() → CameraEffect Gets the camera current on the top of the stack  "},{"title":"GetTopState​","type":1,"pageTitle":"CameraStackService","url":"api/CameraStackService#GetTopState","content":"&lt;/&gt; CameraStackService:GetTopState() → CameraState? Retrieves the top state off the stack at this time  "},{"title":"GetNewStateBelow​","type":1,"pageTitle":"CameraStackService","url":"api/CameraStackService#GetNewStateBelow","content":"&lt;/&gt; CameraStackService:GetNewStateBelow() → ( CustomCameraEffect,-- Effect below (CameraState) → ()-- Function to set the state ) Returns a new camera state that retrieves the state below its set state.  "},{"title":"GetIndex​","type":1,"pageTitle":"CameraStackService","url":"api/CameraStackService#GetIndex","content":"&lt;/&gt; CameraStackService:GetIndex(state: CameraEffect) → number?-- index Retrieves the index of a state  "},{"title":"GetStack​","type":1,"pageTitle":"CameraStackService","url":"api/CameraStackService#GetStack","content":"&lt;/&gt; CameraStackService:GetStack() → {CameraState&lt;T&gt;} Returns the current stack. warning Do not modify this stack, this is the raw memory of the stack  "},{"title":"Remove​","type":1,"pageTitle":"CameraStackService","url":"api/CameraStackService#Remove","content":"&lt;/&gt; CameraStackService:Remove(state: CameraState) → () Removes the state from the stack  "},{"title":"Add​","type":1,"pageTitle":"CameraStackService","url":"api/CameraStackService#Add","content":"&lt;/&gt; CameraStackService:Add(state: CameraState) → () Adds the state from the stack "},{"title":"CameraState","type":0,"sectionRef":"#","url":"api/CameraState","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"CameraState","url":"api/CameraState#properties","content":" "},{"title":"cframe​","type":1,"pageTitle":"CameraState","url":"api/CameraState#cframe","content":"&lt;/&gt; CameraState.cframe: CFrame   "},{"title":"Functions​","type":1,"pageTitle":"CameraState","url":"api/CameraState#functions","content":" "},{"title":"isCameraState​","type":1,"pageTitle":"CameraState","url":"api/CameraState#isCameraState","content":"&lt;/&gt; CameraState.isCameraState(value: any) → boolean Returns true if the result is a camera state  "},{"title":"new​","type":1,"pageTitle":"CameraState","url":"api/CameraState#new","content":"&lt;/&gt; CameraState.new( cameraFrame: CameraFrame | Camera , cameraFrameDerivative: CameraFrame? ) → CameraState Constructs a new CameraState  "},{"title":"Set​","type":1,"pageTitle":"CameraState","url":"api/CameraState#Set","content":"&lt;/&gt; CameraState:Set( camera: Camera -- A CameraState to set, also accepts a Roblox Camera ) → () Set another camera state. Typically used to set Workspace.CurrentCamera's state to match this camera's state "},{"title":"CameraStateTweener","type":0,"sectionRef":"#","url":"api/CameraStateTweener","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"CameraStateTweener","url":"api/CameraStateTweener#functions","content":" "},{"title":"new​","type":1,"pageTitle":"CameraStateTweener","url":"api/CameraStateTweener#new","content":"&lt;/&gt; CameraStateTweener.new( serviceBag: ServiceBag,-- Service bag to find the CameraStackService in cameraEffect: CameraLike,-- A camera effect speed: number?-- Speed that the camera tweener tweens at. Defaults to 20 ) → CameraStateTweener Constructs a new camera state tweener  "},{"title":"GetPercentVisible​","type":1,"pageTitle":"CameraStateTweener","url":"api/CameraStateTweener#GetPercentVisible","content":"&lt;/&gt; CameraStateTweener:GetPercentVisible() → number Returns percent visible, from 0 to 1.  "},{"title":"Show​","type":1,"pageTitle":"CameraStateTweener","url":"api/CameraStateTweener#Show","content":"&lt;/&gt; CameraStateTweener:Show( doNotAnimate?: boolean-- Optional, defaults to animating ) → () Shows the camera to fade in.  "},{"title":"Hide​","type":1,"pageTitle":"CameraStateTweener","url":"api/CameraStateTweener#Hide","content":"&lt;/&gt; CameraStateTweener:Hide( doNotAnimate?: boolean-- Optional, defaults to animating ) → () Hides the camera to fade in.  "},{"title":"IsFinishedHiding​","type":1,"pageTitle":"CameraStateTweener","url":"api/CameraStateTweener#IsFinishedHiding","content":"&lt;/&gt; CameraStateTweener:IsFinishedHiding() → boolean Returns true if we're done hiding  "},{"title":"Finish​","type":1,"pageTitle":"CameraStateTweener","url":"api/CameraStateTweener#Finish","content":"&lt;/&gt; CameraStateTweener:Finish( doNotAnimate: boolean?,-- Optional, defaults to animating callback: function ) → () Hides the tweener, and invokes the callback once the tweener is finished hiding.  "},{"title":"GetCameraEffect​","type":1,"pageTitle":"CameraStateTweener","url":"api/CameraStateTweener#GetCameraEffect","content":"&lt;/&gt; CameraStateTweener:GetCameraEffect() → CameraEffect Gets the current effect we're tweening  "},{"title":"GetCameraBelow​","type":1,"pageTitle":"CameraStateTweener","url":"api/CameraStateTweener#GetCameraBelow","content":"&lt;/&gt; CameraStateTweener:GetCameraBelow() → CameraEffect Gets the camera below this camera on the camera stack  "},{"title":"SetTarget​","type":1,"pageTitle":"CameraStateTweener","url":"api/CameraStateTweener#SetTarget","content":"&lt;/&gt; CameraStateTweener:SetTarget( target: number, doNotAnimate: boolean?-- Optional, defaults to animating ) → CameraStateTweener-- self Sets the percent visible target  "},{"title":"SetSpeed​","type":1,"pageTitle":"CameraStateTweener","url":"api/CameraStateTweener#SetSpeed","content":"&lt;/&gt; CameraStateTweener:SetSpeed(speed: number) → CameraStateTweener-- self Sets the speed of transition  "},{"title":"SetVisible​","type":1,"pageTitle":"CameraStateTweener","url":"api/CameraStateTweener#SetVisible","content":"&lt;/&gt; CameraStateTweener:SetVisible( isVisible: boolean, doNotAnimate: boolean?-- Optional, defaults to animating ) → () Sets whether the tweener is visible  "},{"title":"GetFader​","type":1,"pageTitle":"CameraStateTweener","url":"api/CameraStateTweener#GetFader","content":"&lt;/&gt; CameraStateTweener:GetFader() → CameraEffect Retrieves the fading camera being used to interpolate.  "},{"title":"Destroy​","type":1,"pageTitle":"CameraStateTweener","url":"api/CameraStateTweener#Destroy","content":"&lt;/&gt; CameraStateTweener:Destroy() → () Cleans up the fader, preventing any animation at all "},{"title":"CameraStoryUtils","type":0,"sectionRef":"#","url":"api/CameraStoryUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"CameraStoryUtils","url":"api/CameraStoryUtils#functions","content":" "},{"title":"reflectCamera​","type":1,"pageTitle":"CameraStoryUtils","url":"api/CameraStoryUtils#reflectCamera","content":"&lt;/&gt; CameraStoryUtils.reflectCamera( maid: Maid, topCamera: Camera ) → Camera  Reflects the camera state to the original camera  "},{"title":"setupViewportFrame​","type":1,"pageTitle":"CameraStoryUtils","url":"api/CameraStoryUtils#setupViewportFrame","content":"&lt;/&gt; CameraStoryUtils.setupViewportFrame( maid: Maid, target: GuiBase ) → ViewportFrame  Sets up a viewport frame  "},{"title":"promiseCrate​","type":1,"pageTitle":"CameraStoryUtils","url":"api/CameraStoryUtils#promiseCrate","content":"&lt;/&gt; CameraStoryUtils.promiseCrate( maid: Maid, viewportFrame: ViewportFrame , properties: {[string]}: any} ) → Promise&lt;Instance &gt; REturns a promise that resolves to a crate in front of the camera.  "},{"title":"getInterpolationFactory​","type":1,"pageTitle":"CameraStoryUtils","url":"api/CameraStoryUtils#getInterpolationFactory","content":"&lt;/&gt; CameraStoryUtils.getInterpolationFactory( maid: Maid, viewportFrame: ViewportFrame , low: number, high: number, period: number, toCFrame: CFrame ) → ( interpolate: function, color: Color3 , label: string?, labelOffset: Vector2? ) → () Retrieves the interpolation "},{"title":"CameraTouchInputUtils","type":0,"sectionRef":"#","url":"api/CameraTouchInputUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"CameraTouchInputUtils","url":"api/CameraTouchInputUtils#functions","content":" "},{"title":"adjustTouchSensitivity​","type":1,"pageTitle":"CameraTouchInputUtils","url":"api/CameraTouchInputUtils#adjustTouchSensitivity","content":"&lt;/&gt; CameraTouchInputUtils.adjustTouchSensitivity( currPitchAngle: number, sensitivity: Vector2 , delta: Vector2 ) → () Adjusts the camera Y touch Sensitivity when moving away from the center and in the TOUCH_SENSITIVTY_ADJUST_AREA Straight from Roblox's code Return Vector2 "},{"title":"CameraUtils","type":0,"sectionRef":"#","url":"api/CameraUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"CameraUtils","url":"api/CameraUtils#functions","content":" "},{"title":"getCubeoidDiameter​","type":1,"pageTitle":"CameraUtils","url":"api/CameraUtils#getCubeoidDiameter","content":"&lt;/&gt; CameraUtils.getCubeoidDiameter(size: Vector3 ) → number Computes the diameter of a cubeid  "},{"title":"fitBoundingBoxToCamera​","type":1,"pageTitle":"CameraUtils","url":"api/CameraUtils#fitBoundingBoxToCamera","content":"&lt;/&gt; CameraUtils.fitBoundingBoxToCamera( size: Vector3 ,-- Size of the bounding box fovDeg: number,-- Field of view in degrees (vertical) aspectRatio: number-- Aspect ratio of the screen ) → number-- Distance to move the camera back from the bounding box Use spherical bounding box to calculate how far back to move a camera See: https://community.khronos.org/t/zoom-to-fit-screen/59857/12  "},{"title":"fitSphereToCamera​","type":1,"pageTitle":"CameraUtils","url":"api/CameraUtils#fitSphereToCamera","content":"&lt;/&gt; CameraUtils.fitSphereToCamera( radius: number,-- Radius of the sphere fovDeg: number,-- Field of view in degrees (vertical) aspectRatio: number-- Aspect ratio of the screen ) → number-- Distance to move the camera back from the bounding box Fits a sphere to the camera, computing how far back to zoom the camera from the center of the sphere.  "},{"title":"isOnScreen​","type":1,"pageTitle":"CameraUtils","url":"api/CameraUtils#isOnScreen","content":"&lt;/&gt; CameraUtils.isOnScreen( camera: Camera , position: Vector3 ) → boolean Checks if a position is on screen on a camera "},{"title":"cancellableDelay","type":0,"sectionRef":"#","url":"api/cancellableDelay","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"cancellableDelay","url":"api/cancellableDelay#functions","content":" "},{"title":"cancellableDelay​","type":1,"pageTitle":"cancellableDelay","url":"api/cancellableDelay#cancellableDelay","content":"&lt;/&gt; cancellableDelay.cancellableDelay( timeoutInSeconds: number, func: function, ...: any-- Args to pass into the function ) → function?-- Can be used to cancel  "},{"title":"CFrameSerializer","type":0,"sectionRef":"#","url":"api/CFrameSerializer","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"CFrameSerializer","url":"api/CFrameSerializer#functions","content":" "},{"title":"outputRotationAzure​","type":1,"pageTitle":"CFrameSerializer","url":"api/CFrameSerializer#outputRotationAzure","content":"&lt;/&gt; CFrameSerializer.outputRotationAzure(cf: CFrame ) → { number, number, number, number, number, number } Outputs the rotation  "},{"title":"readPosition​","type":1,"pageTitle":"CFrameSerializer","url":"api/CFrameSerializer#readPosition","content":"&lt;/&gt; CFrameSerializer.readPosition(data: { number, number, number, number, number, number }) → Vector3  Returns the position  "},{"title":"readRotationAzure​","type":1,"pageTitle":"CFrameSerializer","url":"api/CFrameSerializer#readRotationAzure","content":"&lt;/&gt; CFrameSerializer.readRotationAzure(data: { number, number, number, number, number, number }) → Vector3  Returns the CFrame "},{"title":"CancelToken","type":0,"sectionRef":"#","url":"api/CancelToken","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"CancelToken","url":"api/CancelToken#functions","content":" "},{"title":"new​","type":1,"pageTitle":"CancelToken","url":"api/CancelToken#new","content":"&lt;/&gt; CancelToken.new(executor: (cancel: () → ()) → ()) → CancelToken Constructs a new CancelToken  "},{"title":"fromMaid​","type":1,"pageTitle":"CancelToken","url":"api/CancelToken#fromMaid","content":"&lt;/&gt; CancelToken.fromMaid(maid: Maid) → CancelToken Constructs a new CancelToken that cancels whenever the maid does.  "},{"title":"ErrorIfCancelled​","type":1,"pageTitle":"CancelToken","url":"api/CancelToken#ErrorIfCancelled","content":"&lt;/&gt; CancelToken:ErrorIfCancelled() → () Errors if cancelled  "},{"title":"IsCancelled​","type":1,"pageTitle":"CancelToken","url":"api/CancelToken#IsCancelled","content":"&lt;/&gt; CancelToken:IsCancelled() → boolean Returns true if cancelled "},{"title":"CharacterPromiseUtils","type":0,"sectionRef":"#","url":"api/CharacterPromiseUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"CharacterPromiseUtils","url":"api/CharacterPromiseUtils#functions","content":" "},{"title":"promiseCharacter​","type":1,"pageTitle":"CharacterPromiseUtils","url":"api/CharacterPromiseUtils#promiseCharacter","content":"&lt;/&gt; CharacterPromiseUtils.promiseCharacter(player: Player ) → Promise&lt;Model &gt; Returns a promise that will resolve once a character exists. "},{"title":"CFrameUtils","type":0,"sectionRef":"#","url":"api/CFrameUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"CFrameUtils","url":"api/CFrameUtils#functions","content":" "},{"title":"lookAt​","type":1,"pageTitle":"CFrameUtils","url":"api/CFrameUtils#lookAt","content":"&lt;/&gt; CFrameUtils.lookAt( position: Vector3 , target: Vector3 , upVector: Vector3? -- Optional, defaults to (0, 1, 0) ) → CFrame  Makes a CFrame look at a position and target with bias towards the upVector. -- orient a hypothetical gun such that it's relative to the root part's upVector local gunCFrame = CFrameUtils.lookAt(gunPos, gunTarget, rootPart.CFrame.upVector)   "},{"title":"redirectLocalAxis​","type":1,"pageTitle":"CFrameUtils","url":"api/CFrameUtils#redirectLocalAxis","content":"&lt;/&gt; CFrameUtils.redirectLocalAxis( cframe: CFrame , localAxis: Vector3 , worldGoal: Vector3 ) → CFrame  Returns a CFrame which is minimally rotated from cframe such that the following condition is true: returnedCFrame:VectorToWorldSpace(localAxis) = worldGoal -- Redirects an axis from world space up, to a spawn block's up vector -- so we could spawn something there. cframe = CFrameUtils.redirectLocalAxis(cframe, Vector3.new(0, 1, 0), spawnBlock.CFrame.upVector)   "},{"title":"fromUpRight​","type":1,"pageTitle":"CFrameUtils","url":"api/CFrameUtils#fromUpRight","content":"&lt;/&gt; CFrameUtils.fromUpRight( position: Vector3 , upVector: Vector3 , rightVector: Vector3 ) → CFrame?  Constructs a CFrame from a position, upVector, and rightVector even if these upVector and rightVectors are not orthogonal to each other. note upVector and rightVector do not need to be orthogonal. However, if they are parallel, this function returns nil. Always check to ensure that the value returned is reasonable before continuing.  "},{"title":"scalePosition​","type":1,"pageTitle":"CFrameUtils","url":"api/CFrameUtils#scalePosition","content":"&lt;/&gt; CFrameUtils.scalePosition( cframe: CFrame , scale: number ) → CFrame  Scales just the positional part of a CFrame. "},{"title":"CharacterUtils","type":0,"sectionRef":"#","url":"api/CharacterUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"CharacterUtils","url":"api/CharacterUtils#functions","content":" "},{"title":"getPlayerHumanoid​","type":1,"pageTitle":"CharacterUtils","url":"api/CharacterUtils#getPlayerHumanoid","content":"&lt;/&gt; CharacterUtils.getPlayerHumanoid(player: Player ) → Humanoid? -- Nil if not found Gets a player's humanoid, if it exists  "},{"title":"getAlivePlayerHumanoid​","type":1,"pageTitle":"CharacterUtils","url":"api/CharacterUtils#getAlivePlayerHumanoid","content":"&lt;/&gt; CharacterUtils.getAlivePlayerHumanoid(player: Player ) → Humanoid? -- Nil if not found Gets a player's humanoid, and ensures it is alive, otherwise returns nil  "},{"title":"getAlivePlayerRootPart​","type":1,"pageTitle":"CharacterUtils","url":"api/CharacterUtils#getAlivePlayerRootPart","content":"&lt;/&gt; CharacterUtils.getAlivePlayerRootPart(player: Player ) → BasePart? -- Nil if not found Gets a player's humanoid's rootPart, and ensures the humanoid is alive, otherwise returns nil  "},{"title":"getPlayerRootPart​","type":1,"pageTitle":"CharacterUtils","url":"api/CharacterUtils#getPlayerRootPart","content":"&lt;/&gt; CharacterUtils.getPlayerRootPart(player: Player ) → BasePart? -- Nil if not found Gets a player's humanoid's rootPart otherwise returns nil  "},{"title":"unequipTools​","type":1,"pageTitle":"CharacterUtils","url":"api/CharacterUtils#unequipTools","content":"&lt;/&gt; CharacterUtils.unequipTools(player: Player ) → () Unequips all tools for a give player's humanomid, if the humanoid exists local Players = game:GetService(&quot;Players&quot;) for _, player in pairs(Players:GetPlayers()) do CharacterUtils.unequipTools(player) end   "},{"title":"getPlayerFromCharacter​","type":1,"pageTitle":"CharacterUtils","url":"api/CharacterUtils#getPlayerFromCharacter","content":"&lt;/&gt; CharacterUtils.getPlayerFromCharacter( descendant: Instance -- A child of the potential character. ) → Player? -- Nil if not found Returns the player that a descendent is part of, if it is part of one. script.Parent.Touched:Connect(function(inst) local player = CharacterUtils.getPlayerFromCharacter(inst) if player then -- activate button! end end) tip This method is useful in a ton of different situations. For example, you can use it on classes bound to a humanoid, to determine the player. You can also use it to determine, upon touched events, if a part is part of a character. "},{"title":"CircleUtils","type":0,"sectionRef":"#","url":"api/CircleUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"CircleUtils","url":"api/CircleUtils#functions","content":" "},{"title":"updatePositionToSmallestDistOnCircle​","type":1,"pageTitle":"CircleUtils","url":"api/CircleUtils#updatePositionToSmallestDistOnCircle","content":"&lt;/&gt; CircleUtils.updatePositionToSmallestDistOnCircle( position: number, target: number, circumference: number ) → number https://math.stackexchange.com/questions/110080/shortest-way-to-achieve-target-angle Note: target should be within 0 and circumference "},{"title":"ClipCharacters","type":0,"sectionRef":"#","url":"api/ClipCharacters","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ClipCharacters","url":"api/ClipCharacters#functions","content":" "},{"title":"initServer​","type":1,"pageTitle":"ClipCharacters","url":"api/ClipCharacters#initServer","content":"This item only works when running on the server. Server &lt;/&gt; ClipCharacters.initServer() → () Initialize on server  "},{"title":"new​","type":1,"pageTitle":"ClipCharacters","url":"api/ClipCharacters#new","content":"This item only works when running on the client. Client &lt;/&gt; ClipCharacters.new() → ClipCharacters Initialize clipping on the client. Returns a new inst  "},{"title":"Destroy​","type":1,"pageTitle":"ClipCharacters","url":"api/ClipCharacters#Destroy","content":"&lt;/&gt; ClipCharacters:Destroy() → () Stop clipping on client "},{"title":"CmdrCommandDefinitionTemplate","type":0,"sectionRef":"#","url":"api/CmdrCommandDefinitionTemplate","content":"On this page CmdrCommandDefinitionTemplate Generic command definition template which we can use to","keywords":""},{"title":"CmdrServiceClient","type":0,"sectionRef":"#","url":"api/CmdrServiceClient","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"CmdrServiceClient","url":"api/CmdrServiceClient#functions","content":" "},{"title":"Init​","type":1,"pageTitle":"CmdrServiceClient","url":"api/CmdrServiceClient#Init","content":"&lt;/&gt; CmdrServiceClient:Init(serviceBag: ServiceBag) → () Starts the cmdr service on the client. Should be done via ServiceBag.  "},{"title":"Start​","type":1,"pageTitle":"CmdrServiceClient","url":"api/CmdrServiceClient#Start","content":"&lt;/&gt; CmdrServiceClient:Start() → () Starts the service. Should be done via ServiceBag.  "},{"title":"PromiseCmdr​","type":1,"pageTitle":"CmdrServiceClient","url":"api/CmdrServiceClient#PromiseCmdr","content":"&lt;/&gt; CmdrServiceClient:PromiseCmdr() → Promise&lt;CmdrClient&gt; Retrieves the cmdr for the client. "},{"title":"CmdrService","type":0,"sectionRef":"#","url":"api/CmdrService","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"CmdrService","url":"api/CmdrService#functions","content":" "},{"title":"Init​","type":1,"pageTitle":"CmdrService","url":"api/CmdrService#Init","content":"&lt;/&gt; CmdrService:Init(serviceBag: ServiceBag) → () Initializes the CmdrService. Should be done via ServiceBag.  "},{"title":"Start​","type":1,"pageTitle":"CmdrService","url":"api/CmdrService#Start","content":"&lt;/&gt; CmdrService:Start() → () Starts the service. Should be done via ServiceBag  "},{"title":"PromiseCmdr​","type":1,"pageTitle":"CmdrService","url":"api/CmdrService#PromiseCmdr","content":"&lt;/&gt; CmdrService:PromiseCmdr() → Promise&lt;Cmdr&gt; Returns cmdr  "},{"title":"RegisterCommand​","type":1,"pageTitle":"CmdrService","url":"api/CmdrService#RegisterCommand","content":"&lt;/&gt; CmdrService:RegisterCommand( commandData: table, execute: ( context: table, ...T ) ) → () Registers a command into cmdr. "},{"title":"CmdrTemplateProviderServer","type":0,"sectionRef":"#","url":"api/CmdrTemplateProviderServer","content":"On this page CmdrTemplateProviderServer Retrieves CmdrTemplateProviderServer","keywords":""},{"title":"CollectionServiceUtils","type":0,"sectionRef":"#","url":"api/CollectionServiceUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"CollectionServiceUtils","url":"api/CollectionServiceUtils#functions","content":" "},{"title":"findFirstAncestor​","type":1,"pageTitle":"CollectionServiceUtils","url":"api/CollectionServiceUtils#findFirstAncestor","content":"&lt;/&gt; CollectionServiceUtils.findFirstAncestor( tagName: string, child: Instance ) → Instance?  Finds the first ancestor with the given tagName.  "},{"title":"removeAllTags​","type":1,"pageTitle":"CollectionServiceUtils","url":"api/CollectionServiceUtils#removeAllTags","content":"&lt;/&gt; CollectionServiceUtils.removeAllTags(instance: Instance ) → () Removes all tags from an instance. "},{"title":"Color3SerializationUtils","type":0,"sectionRef":"#","url":"api/Color3SerializationUtils","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Color3SerializationUtils","url":"api/Color3SerializationUtils#types","content":" "},{"title":"SerializedColor3​","type":1,"pageTitle":"Color3SerializationUtils","url":"api/Color3SerializationUtils#SerializedColor3","content":"&lt;/&gt; type SerializedColor3 = { [1]: number, [2]: number, [3]: number }  "},{"title":"Functions​","type":1,"pageTitle":"Color3SerializationUtils","url":"api/Color3SerializationUtils#functions","content":" "},{"title":"serialize​","type":1,"pageTitle":"Color3SerializationUtils","url":"api/Color3SerializationUtils#serialize","content":"&lt;/&gt; Color3SerializationUtils.serialize(color3: Color3 ) → SerializedColor3 Serializes a Color3 into a JSON or DataStore safe value.  "},{"title":"isSerializedColor3​","type":1,"pageTitle":"Color3SerializationUtils","url":"api/Color3SerializationUtils#isSerializedColor3","content":"&lt;/&gt; Color3SerializationUtils.isSerializedColor3(color3: any) → boolean Returns whether a value is a serialized Color3  "},{"title":"fromRGB​","type":1,"pageTitle":"Color3SerializationUtils","url":"api/Color3SerializationUtils#fromRGB","content":"&lt;/&gt; Color3SerializationUtils.fromRGB( r: number, g: number, b: number ) → SerializedColor3 Creates a SerializedColor3 from r g b (0, 255)  "},{"title":"deserialize​","type":1,"pageTitle":"Color3SerializationUtils","url":"api/Color3SerializationUtils#deserialize","content":"&lt;/&gt; Color3SerializationUtils.deserialize(color3: Color3 ) → SerializedColor3 Deserializes the color into a Color3 "},{"title":"Color3Utils","type":0,"sectionRef":"#","url":"api/Color3Utils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Color3Utils","url":"api/Color3Utils#functions","content":" "},{"title":"getRelativeLuminance​","type":1,"pageTitle":"Color3Utils","url":"api/Color3Utils#getRelativeLuminance","content":"&lt;/&gt; Color3Utils.getRelativeLuminance( color: Color3 -- The Color3 to check ) → number-- A scalar from 0 to 1 with 0 as the darkest dark, and 1 as the whitest white Luminance as per W3 per sRGB colorspace normalized with 0 as the darkest dark, and 1 as the whitest white. See https://www.w3.org/TR/WCAG20/#relativeluminancedef  "},{"title":"textShouldBeBlack​","type":1,"pageTitle":"Color3Utils","url":"api/Color3Utils#textShouldBeBlack","content":"&lt;/&gt; Color3Utils.textShouldBeBlack( color: Color3 -- The Color3 to check ) → boolean-- True if the text should be black, false if it should be good Returns whether or not the text should be black using relative luminance as a metric. See https://stackoverflow.com/questions/3942878/  "},{"title":"scaleValue​","type":1,"pageTitle":"Color3Utils","url":"api/Color3Utils#scaleValue","content":"&lt;/&gt; Color3Utils.scaleValue( color3: Color3 , percent: number-- Percent scaling ) → Color3  Scales the value component of hsv  "},{"title":"setValue​","type":1,"pageTitle":"Color3Utils","url":"api/Color3Utils#setValue","content":"&lt;/&gt; Color3Utils.setValue( color3: Color3 , value: number ) → Color3  Sets the value component of hsv  "},{"title":"setHue​","type":1,"pageTitle":"Color3Utils","url":"api/Color3Utils#setHue","content":"&lt;/&gt; Color3Utils.setHue( color3: Color3 , hue: number ) → Color3  Sets the hue component of hsv  "},{"title":"scaleSaturation​","type":1,"pageTitle":"Color3Utils","url":"api/Color3Utils#scaleSaturation","content":"&lt;/&gt; Color3Utils.scaleSaturation( color3: Color3 , percent: number-- Percent scaling ) → Color3  Scales the saturation component of hsv  "},{"title":"setSaturation​","type":1,"pageTitle":"Color3Utils","url":"api/Color3Utils#setSaturation","content":"&lt;/&gt; Color3Utils.setSaturation( color3: Color3 , saturation: number ) → Color3  Sets the saturation component of hsv "},{"title":"ColorSequenceUtils","type":0,"sectionRef":"#","url":"api/ColorSequenceUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ColorSequenceUtils","url":"api/ColorSequenceUtils#functions","content":" "},{"title":"stripe​","type":1,"pageTitle":"ColorSequenceUtils","url":"api/ColorSequenceUtils#stripe","content":"&lt;/&gt; ColorSequenceUtils.stripe( stripes: number, backgroundColor3: Color3 , stripeColor3: Color3 , percentStripeThickness: number, percentOffset: number ) → ColorSequence  Makes stripes for color sequences. "},{"title":"CompiledBoundingBoxUtils","type":0,"sectionRef":"#","url":"api/CompiledBoundingBoxUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"CompiledBoundingBoxUtils","url":"api/CompiledBoundingBoxUtils#functions","content":" "},{"title":"compileBBox​","type":1,"pageTitle":"CompiledBoundingBoxUtils","url":"api/CompiledBoundingBoxUtils#compileBBox","content":"&lt;/&gt; CompiledBoundingBoxUtils.compileBBox( cframe: CFrame , size: Vector3 ) → CFrame  Compiles a bounding box into a CFrame rotation matrix for easy usage.  "},{"title":"testPointBBox​","type":1,"pageTitle":"CompiledBoundingBoxUtils","url":"api/CompiledBoundingBoxUtils#testPointBBox","content":"&lt;/&gt; CompiledBoundingBoxUtils.testPointBBox( pt: Vector3 , bbox: CFrame ) → boolean Point-obb occupancy test "},{"title":"ContentProviderUtils","type":0,"sectionRef":"#","url":"api/ContentProviderUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ContentProviderUtils","url":"api/ContentProviderUtils#functions","content":" "},{"title":"promisePreload​","type":1,"pageTitle":"ContentProviderUtils","url":"api/ContentProviderUtils#promisePreload","content":"&lt;/&gt; ContentProviderUtils.promisePreload(contentIdList: {Instance | string}) → Promise Preloads assets note If strings are passed in, it only preloads textures, and will preload meshes, but only to http client. "},{"title":"Cooldown","type":0,"sectionRef":"#","url":"api/Cooldown","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Cooldown","url":"api/Cooldown#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Cooldown","url":"api/Cooldown#new","content":"&lt;/&gt; Cooldown.new( obj: NumberValue , serviceBag: ServiceBag ) → Cooldown Constructs a new cooldown. Should be done via CooldownBindersServer. To create an instance of this in Roblox, see CooldownUtils.create. "},{"title":"CooldownBindersClient","type":0,"sectionRef":"#","url":"api/CooldownBindersClient","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"CooldownBindersClient","url":"api/CooldownBindersClient#properties","content":" "},{"title":"Cooldown​","type":1,"pageTitle":"CooldownBindersClient","url":"api/CooldownBindersClient#Cooldown","content":"&lt;/&gt; CooldownBindersClient.Cooldown: Binder&lt;CooldownClient&gt;  "},{"title":"CooldownBase","type":0,"sectionRef":"#","url":"api/CooldownBase","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"CooldownBase","url":"api/CooldownBase#functions","content":" "},{"title":"new​","type":1,"pageTitle":"CooldownBase","url":"api/CooldownBase#new","content":"&lt;/&gt; CooldownBase.new( obj: NumberValue , serviceBag: ServiceBag ) → CooldownBase Constructs a new Cooldown.  "},{"title":"GetObject​","type":1,"pageTitle":"CooldownBase","url":"api/CooldownBase#GetObject","content":"&lt;/&gt; CooldownBase:GetObject() → Instance  Gets the Roblox instance of the cooldown.  "},{"title":"GetTimePassed​","type":1,"pageTitle":"CooldownBase","url":"api/CooldownBase#GetTimePassed","content":"&lt;/&gt; CooldownBase:GetTimePassed() → number? Gets the time passed  "},{"title":"GetTimeRemaining​","type":1,"pageTitle":"CooldownBase","url":"api/CooldownBase#GetTimeRemaining","content":"&lt;/&gt; CooldownBase:GetTimeRemaining() → number? Gets the time remaining  "},{"title":"GetEndTime​","type":1,"pageTitle":"CooldownBase","url":"api/CooldownBase#GetEndTime","content":"&lt;/&gt; CooldownBase:GetEndTime() → number? Gets the syncronized time stamp the cooldown is ending at  "},{"title":"GetStartTime​","type":1,"pageTitle":"CooldownBase","url":"api/CooldownBase#GetStartTime","content":"&lt;/&gt; CooldownBase:GetStartTime() → number? Gets the syncronized time stamp the cooldown is starting at  "},{"title":"GetLength​","type":1,"pageTitle":"CooldownBase","url":"api/CooldownBase#GetLength","content":"&lt;/&gt; CooldownBase:GetLength() → number Gets the length of the cooldown "},{"title":"CooldownBindersServer","type":0,"sectionRef":"#","url":"api/CooldownBindersServer","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"CooldownBindersServer","url":"api/CooldownBindersServer#properties","content":" "},{"title":"Cooldown​","type":1,"pageTitle":"CooldownBindersServer","url":"api/CooldownBindersServer#Cooldown","content":"&lt;/&gt; CooldownBindersServer.Cooldown: Binder&lt;Cooldown&gt;  "},{"title":"CooldownClient","type":0,"sectionRef":"#","url":"api/CooldownClient","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"CooldownClient","url":"api/CooldownClient#properties","content":" "},{"title":"Done​","type":1,"pageTitle":"CooldownClient","url":"api/CooldownClient#Done","content":"&lt;/&gt; CooldownClient.Done: Signal&lt;()&gt; Event that fires when the cooldown is done. "},{"title":"Functions​","type":1,"pageTitle":"CooldownClient","url":"api/CooldownClient#functions","content":" "},{"title":"new​","type":1,"pageTitle":"CooldownClient","url":"api/CooldownClient#new","content":"&lt;/&gt; CooldownClient.new( obj: NumberValue , serviceBag: ServiceBag ) → Cooldown Constructs a new cooldown. Should be done via CooldownBindersClient. To create an instance of this in Roblox, see CooldownUtils.create. "},{"title":"CooldownConstants","type":0,"sectionRef":"#","url":"api/CooldownConstants","content":"On this page CooldownConstants Holds constants for the cooldown.","keywords":""},{"title":"CooldownTracker","type":0,"sectionRef":"#","url":"api/CooldownTracker","content":"On this page CooldownTracker Tracks current cooldown on an object","keywords":""},{"title":"CoreGuiEnabler","type":0,"sectionRef":"#","url":"api/CoreGuiEnabler","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"CoreGuiEnabler","url":"api/CoreGuiEnabler#functions","content":" "},{"title":"AddState​","type":1,"pageTitle":"CoreGuiEnabler","url":"api/CoreGuiEnabler#AddState","content":"&lt;/&gt; CoreGuiEnabler:AddState( coreGuiState: string | CoreGuiType , coreGuiStateChangeFunc: (isEnabled: boolean) ) → () Adds a state that can be disabled or enabled.  "},{"title":"Disable​","type":1,"pageTitle":"CoreGuiEnabler","url":"api/CoreGuiEnabler#Disable","content":"&lt;/&gt; CoreGuiEnabler:Disable( key: any, coreGuiState: string | CoreGuiType ) → function-- Callback function to re-enable the state Disables a CoreGuiState  "},{"title":"Enable​","type":1,"pageTitle":"CoreGuiEnabler","url":"api/CoreGuiEnabler#Enable","content":"&lt;/&gt; CoreGuiEnabler:Enable( key: any, coreGuiState: string | CoreGuiType ) → () Enables a state for a given key "},{"title":"CooldownUtils","type":0,"sectionRef":"#","url":"api/CooldownUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"CooldownUtils","url":"api/CooldownUtils#functions","content":" "},{"title":"create​","type":1,"pageTitle":"CooldownUtils","url":"api/CooldownUtils#create","content":"&lt;/&gt; CooldownUtils.create( cooldownBinder: Binder&lt;Cooldown | CooldownClient&gt;, parent: Instance , length: number ) → Instance  Creates a new Roblox instance representing a cooldown.  "},{"title":"findCooldown​","type":1,"pageTitle":"CooldownUtils","url":"api/CooldownUtils#findCooldown","content":"&lt;/&gt; CooldownUtils.findCooldown( cooldownBinder: Binder&lt;Cooldown | CooldownClient&gt;, parent: Instance ) → Cooldown? | CooldownClient? Finds a cooldown in a parent.  "},{"title":"clone​","type":1,"pageTitle":"CooldownUtils","url":"api/CooldownUtils#clone","content":"&lt;/&gt; CooldownUtils.clone(cooldown: Instance ) → Instance  Makes a copy of the cooldown "},{"title":"CoreGuiUtils","type":0,"sectionRef":"#","url":"api/CoreGuiUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"CoreGuiUtils","url":"api/CoreGuiUtils#functions","content":" "},{"title":"promiseRetrySetCore​","type":1,"pageTitle":"CoreGuiUtils","url":"api/CoreGuiUtils#promiseRetrySetCore","content":"&lt;/&gt; CoreGuiUtils.promiseRetrySetCore( tries: number, initialWaitTime: number, ...: any-- parameters to set core with ) → Promise&lt;()&gt; Retries setting the the core. This is required because sometimes the Core scripts are not initialized by the time that client code executes.  "},{"title":"tryToSetCore​","type":1,"pageTitle":"CoreGuiUtils","url":"api/CoreGuiUtils#tryToSetCore","content":"&lt;/&gt; CoreGuiUtils.tryToSetCore( ...: any-- Args to try to call SetCore with ) → ( boolean,-- false if failed string?-- error, if there was one ) Tries to invoke StarterGui:SetCore with the arguments specified "},{"title":"CreatorPermissionProvider","type":0,"sectionRef":"#","url":"api/CreatorPermissionProvider","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"CreatorPermissionProvider","url":"api/CreatorPermissionProvider#functions","content":" "},{"title":"new​","type":1,"pageTitle":"CreatorPermissionProvider","url":"api/CreatorPermissionProvider#new","content":"&lt;/&gt; CreatorPermissionProvider.new(config: table) → CreatorPermissionProvider   "},{"title":"PromiseIsCreator​","type":1,"pageTitle":"CreatorPermissionProvider","url":"api/CreatorPermissionProvider#PromiseIsCreator","content":"&lt;/&gt; CreatorPermissionProvider:PromiseIsCreator(player: Player ) → Promise&lt;boolean&gt; Returns whether the player is a creator.  "},{"title":"PromiseIsAdmin​","type":1,"pageTitle":"CreatorPermissionProvider","url":"api/CreatorPermissionProvider#PromiseIsAdmin","content":"&lt;/&gt; CreatorPermissionProvider:PromiseIsAdmin(player: Player ) → Promise&lt;boolean&gt; Returns whether the player is an admin. "},{"title":"CubicSplineUtils","type":0,"sectionRef":"#","url":"api/CubicSplineUtils","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"CubicSplineUtils","url":"api/CubicSplineUtils#types","content":" "},{"title":"CubicSplineNode​","type":1,"pageTitle":"CubicSplineUtils","url":"api/CubicSplineUtils#CubicSplineNode","content":"&lt;/&gt; interface CubicSplineNode { t: number p: T v: T } A node that can be used as part of a cubic spline. "},{"title":"Functions​","type":1,"pageTitle":"CubicSplineUtils","url":"api/CubicSplineUtils#functions","content":" "},{"title":"newSplineNode​","type":1,"pageTitle":"CubicSplineUtils","url":"api/CubicSplineUtils#newSplineNode","content":"&lt;/&gt; CubicSplineUtils.newSplineNode( t: number, position: T, velocity: T ) → CubicSplineNode&lt;T&gt; Creates a new spline node.  "},{"title":"tween​","type":1,"pageTitle":"CubicSplineUtils","url":"api/CubicSplineUtils#tween","content":"&lt;/&gt; CubicSplineUtils.tween( nodeList: {CubicSplineNode&lt;T&gt;},-- Should be sorted. t: number ) → CubicSplineNode&lt;T&gt; Interpolates between the nodes at a given point.  "},{"title":"cloneSplineNode​","type":1,"pageTitle":"CubicSplineUtils","url":"api/CubicSplineUtils#cloneSplineNode","content":"&lt;/&gt; CubicSplineUtils.cloneSplineNode(node: CubicSplineNode&lt;T&gt;) → CubicSplineNode&lt;T&gt; Clones a cubic spline.  "},{"title":"tweenSplineNodes​","type":1,"pageTitle":"CubicSplineUtils","url":"api/CubicSplineUtils#tweenSplineNodes","content":"&lt;/&gt; CubicSplineUtils.tweenSplineNodes( node0: CubicSplineNode&lt;T&gt;, node1: CubicSplineNode&lt;T&gt;, t: number ) → CubicSplineNode&lt;T&gt; Interpolates between 2 cubic spline nodes.  "},{"title":"sort​","type":1,"pageTitle":"CubicSplineUtils","url":"api/CubicSplineUtils#sort","content":"&lt;/&gt; CubicSplineUtils.sort(nodeList: {CubicSplineNode&lt;T&gt;}) → () Sorts a cubic spline nodme based upon the time stamp  "},{"title":"populateVelocities​","type":1,"pageTitle":"CubicSplineUtils","url":"api/CubicSplineUtils#populateVelocities","content":"&lt;/&gt; CubicSplineUtils.populateVelocities( nodeList: {CubicSplineNode&lt;T&gt;}, i0: number?, i1: number? ) → () For a given node list, populates the velocity values of the nodes. "},{"title":"CubicTweenUtils","type":0,"sectionRef":"#","url":"api/CubicTweenUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"CubicTweenUtils","url":"api/CubicTweenUtils#functions","content":" "},{"title":"getConstants​","type":1,"pageTitle":"CubicTweenUtils","url":"api/CubicTweenUtils#getConstants","content":"&lt;/&gt; CubicTweenUtils.getConstants( l: number, t: number ) → ( number,-- a0 number,-- a1 number,-- a2 number-- a3 ) Constants to be multiplied as p0a0 + v0a1 + p1a2 + v1a3  "},{"title":"getDerivativeConstants​","type":1,"pageTitle":"CubicTweenUtils","url":"api/CubicTweenUtils#getDerivativeConstants","content":"&lt;/&gt; CubicTweenUtils.getDerivativeConstants( l: number, t: number ) → ( number,-- a0 number,-- a1 number,-- a2 number-- a3 )   "},{"title":"applyConstants​","type":1,"pageTitle":"CubicTweenUtils","url":"api/CubicTweenUtils#applyConstants","content":"&lt;/&gt; CubicTweenUtils.applyConstants( c0: number, c1: number, c2: number, c3: number, a: T, u: T, b: T, v: T ) → T Applies the constants for the given nodes  "},{"title":"tween​","type":1,"pageTitle":"CubicTweenUtils","url":"api/CubicTweenUtils#tween","content":"&lt;/&gt; CubicTweenUtils.tween( a: T, u: T, b: T, v: T, l: number, t: number ) → T Tweens betweeen nodes  "},{"title":"getAcceleration​","type":1,"pageTitle":"CubicTweenUtils","url":"api/CubicTweenUtils#getAcceleration","content":"&lt;/&gt; CubicTweenUtils.getAcceleration( a: T, u: T, b: T, v: T, l: number ) → T Computes acceleration "},{"title":"CustomCameraEffect","type":0,"sectionRef":"#","url":"api/CustomCameraEffect","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"CustomCameraEffect","url":"api/CustomCameraEffect#properties","content":" "},{"title":"CameraState​","type":1,"pageTitle":"CustomCameraEffect","url":"api/CustomCameraEffect#CameraState","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; CustomCameraEffect.CameraState: CameraState The current state. "},{"title":"Functions​","type":1,"pageTitle":"CustomCameraEffect","url":"api/CustomCameraEffect#functions","content":" "},{"title":"new​","type":1,"pageTitle":"CustomCameraEffect","url":"api/CustomCameraEffect#new","content":"&lt;/&gt; CustomCameraEffect.new( getCurrentStateFunc: () → CameraState-- Custom effect generator ) → CustomCameraEffect Constructs a new custom camera effect "},{"title":"DataStore","type":0,"sectionRef":"#","url":"api/DataStore","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"DataStore","url":"api/DataStore#properties","content":" "},{"title":"Saving​","type":1,"pageTitle":"DataStore","url":"api/DataStore#Saving","content":"&lt;/&gt; DataStore.Saving: Signal&lt;Promise&gt; Prop that fires when saving. Promise will resolve once saving is complete. "},{"title":"Functions​","type":1,"pageTitle":"DataStore","url":"api/DataStore#functions","content":" "},{"title":"new​","type":1,"pageTitle":"DataStore","url":"api/DataStore#new","content":"&lt;/&gt; DataStore.new( robloxDataStore: DataStore, key: string ) → () Constructs a new DataStore. See DataStoreStage for more API.  "},{"title":"GetFullPath​","type":1,"pageTitle":"DataStore","url":"api/DataStore#GetFullPath","content":"&lt;/&gt; DataStore:GetFullPath() → string Returns the full path for the datastore  "},{"title":"DidLoadFail​","type":1,"pageTitle":"DataStore","url":"api/DataStore#DidLoadFail","content":"&lt;/&gt; DataStore:DidLoadFail() → boolean Returns whether the datastore failed.  "},{"title":"Save​","type":1,"pageTitle":"DataStore","url":"api/DataStore#Save","content":"&lt;/&gt; DataStore:Save() → Promise Saves all stored data.  "},{"title":"Load​","type":1,"pageTitle":"DataStore","url":"api/DataStore#Load","content":"&lt;/&gt; DataStore:Load( keyName: string, defaultValue: any? ) → any? Loads data. This returns the originally loaded data. "},{"title":"DataStoreDeleteToken","type":0,"sectionRef":"#","url":"api/DataStoreDeleteToken","content":"On this page DataStoreDeleteToken This item only works when running on the server. Server Token to use for deleting.","keywords":""},{"title":"DataStoreStage","type":0,"sectionRef":"#","url":"api/DataStoreStage","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"DataStoreStage","url":"api/DataStoreStage#functions","content":" "},{"title":"new​","type":1,"pageTitle":"DataStoreStage","url":"api/DataStoreStage#new","content":"&lt;/&gt; DataStoreStage.new( loadName: string, loadParent: DataStoreStage? ) → DataStoreStage Constructs a new DataStoreStage to load from. Prefer to use DataStore because this doesn't have any way to retrieve this.  "},{"title":"AddSavingCallback​","type":1,"pageTitle":"DataStoreStage","url":"api/DataStoreStage#AddSavingCallback","content":"&lt;/&gt; DataStoreStage:AddSavingCallback( callback: function-- May return a promise ) → function-- Call to remove Adds a callback to be called before save. This may return a promise.  "},{"title":"RemoveSavingCallback​","type":1,"pageTitle":"DataStoreStage","url":"api/DataStoreStage#RemoveSavingCallback","content":"&lt;/&gt; DataStoreStage:RemoveSavingCallback(callback: function) → () Removes a saving callback from the data store stage  "},{"title":"GetTopLevelDataStoredSignal​","type":1,"pageTitle":"DataStoreStage","url":"api/DataStoreStage#GetTopLevelDataStoredSignal","content":"&lt;/&gt; DataStoreStage:GetTopLevelDataStoredSignal() → Signal Gets an event that will fire off whenever something is stored at this level  "},{"title":"GetFullPath​","type":1,"pageTitle":"DataStoreStage","url":"api/DataStoreStage#GetFullPath","content":"&lt;/&gt; DataStoreStage:GetFullPath() → string Retrieves the full path of this datastore stage for diagnostic purposes.  "},{"title":"Load​","type":1,"pageTitle":"DataStoreStage","url":"api/DataStoreStage#Load","content":"&lt;/&gt; DataStoreStage:Load( name: string, defaultValue: T? ) → Promise&lt;T&gt; Loads the data at the name.  "},{"title":"Delete​","type":1,"pageTitle":"DataStoreStage","url":"api/DataStoreStage#Delete","content":"&lt;/&gt; DataStoreStage:Delete(name: string) → () Explicitely deletes data at the key  "},{"title":"Wipe​","type":1,"pageTitle":"DataStoreStage","url":"api/DataStoreStage#Wipe","content":"&lt;/&gt; DataStoreStage:Wipe() → () Queues up a wipe of all values. Data must load before it can be wiped.  "},{"title":"GetSubStore​","type":1,"pageTitle":"DataStoreStage","url":"api/DataStoreStage#GetSubStore","content":"&lt;/&gt; DataStoreStage:GetSubStore(name: string) → DataStoreStage Gets a sub-datastore that will write at the given name point  "},{"title":"StoreOnValueChange​","type":1,"pageTitle":"DataStoreStage","url":"api/DataStoreStage#StoreOnValueChange","content":"&lt;/&gt; DataStoreStage:StoreOnValueChange( name: string, valueObj: Instance -- ValueBase object to store on ) → MaidTask Whenever the ValueObject changes, stores the resulting value in that entry.  "},{"title":"HasWritableData​","type":1,"pageTitle":"DataStoreStage","url":"api/DataStoreStage#HasWritableData","content":"&lt;/&gt; DataStoreStage:HasWritableData() → boolean If these is data not yet written then this will return true  "},{"title":"GetNewWriter​","type":1,"pageTitle":"DataStoreStage","url":"api/DataStoreStage#GetNewWriter","content":"&lt;/&gt; DataStoreStage:GetNewWriter() → DataStoreWriter Constructs a writer which provides a snapshot of the current data state to write "},{"title":"DataStorePromises","type":0,"sectionRef":"#","url":"api/DataStorePromises","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"DataStorePromises","url":"api/DataStorePromises#functions","content":" "},{"title":"promiseDataStore​","type":1,"pageTitle":"DataStorePromises","url":"api/DataStorePromises#promiseDataStore","content":"&lt;/&gt; DataStorePromises.promiseDataStore( name: string, scope: string ) → Promise&lt;DataStore&gt; Promises a Roblox datastore object with the name and scope. Generally only fails when you haven't published the place.  "},{"title":"getAsync​","type":1,"pageTitle":"DataStorePromises","url":"api/DataStorePromises#getAsync","content":"&lt;/&gt; DataStorePromises.getAsync( robloxDataStore: DataStore, key: string ) → Promise&lt;T&gt; Wraps :GetAsync() in a promise  "},{"title":"updateAsync​","type":1,"pageTitle":"DataStorePromises","url":"api/DataStorePromises#updateAsync","content":"&lt;/&gt; DataStorePromises.updateAsync( robloxDataStore: DataStore, key: string, updateFunc: (T) → T? ) → Promise&lt;boolean&gt; Wraps :UpdateAsync() in a promise  "},{"title":"setAsync​","type":1,"pageTitle":"DataStorePromises","url":"api/DataStorePromises#setAsync","content":"&lt;/&gt; DataStorePromises.setAsync( robloxDataStore: DataStore, key: string, value: string ) → Promise&lt;boolean&gt; Wraps :SetAsync() in a promise  "},{"title":"promiseIncrementAsync​","type":1,"pageTitle":"DataStorePromises","url":"api/DataStorePromises#promiseIncrementAsync","content":"&lt;/&gt; DataStorePromises.promiseIncrementAsync( robloxDataStore: DataStore, key: string, delta: number ) → Promise&lt;boolean&gt; Wraps :IncrementAsync() in a promise  "},{"title":"removeAsync​","type":1,"pageTitle":"DataStorePromises","url":"api/DataStorePromises#removeAsync","content":"&lt;/&gt; DataStorePromises.removeAsync( robloxDataStore: DataStore, key: string ) → Promise&lt;boolean&gt; Wraps :RemoveAsync() in a promise "},{"title":"debounce","type":0,"sectionRef":"#","url":"api/debounce","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"debounce","url":"api/debounce#functions","content":" "},{"title":"debounce​","type":1,"pageTitle":"debounce","url":"api/debounce#debounce","content":"&lt;/&gt; debounce.debounce( timeoutInSeconds: number, func: function ) → (...) → () Provides a debounce function call on an operation "},{"title":"DataStoreWriter","type":0,"sectionRef":"#","url":"api/DataStoreWriter","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"DataStoreWriter","url":"api/DataStoreWriter#functions","content":" "},{"title":"new​","type":1,"pageTitle":"DataStoreWriter","url":"api/DataStoreWriter#new","content":"&lt;/&gt; DataStoreWriter.new() → DataStoreWriter Constructs a new DataStoreWriter. In general, you will not use this API directly.  "},{"title":"SetRawData​","type":1,"pageTitle":"DataStoreWriter","url":"api/DataStoreWriter#SetRawData","content":"&lt;/&gt; DataStoreWriter:SetRawData(data: table) → () Sets the ray data to write  "},{"title":"AddWriter​","type":1,"pageTitle":"DataStoreWriter","url":"api/DataStoreWriter#AddWriter","content":"&lt;/&gt; DataStoreWriter:AddWriter( name: string, writer: DataStoreWriter ) → () Adds a recursive child writer to use at the key name  "},{"title":"WriteMerge​","type":1,"pageTitle":"DataStoreWriter","url":"api/DataStoreWriter#WriteMerge","content":"&lt;/&gt; DataStoreWriter:WriteMerge(original: table?) → table-- The original table Merges the new data into the original value "},{"title":"DefaultCamera","type":0,"sectionRef":"#","url":"api/DefaultCamera","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"DefaultCamera","url":"api/DefaultCamera#properties","content":" "},{"title":"CameraState​","type":1,"pageTitle":"DefaultCamera","url":"api/DefaultCamera#CameraState","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; DefaultCamera.CameraState: CameraState The current state.  "},{"title":"CameraState​","type":1,"pageTitle":"DefaultCamera","url":"api/DefaultCamera#CameraState","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; DefaultCamera.CameraState: CameraState The current state.  "},{"title":"CameraState​","type":1,"pageTitle":"DefaultCamera","url":"api/DefaultCamera#CameraState","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; DefaultCamera.CameraState: CameraState The current state. "},{"title":"Functions​","type":1,"pageTitle":"DefaultCamera","url":"api/DefaultCamera#functions","content":" "},{"title":"new​","type":1,"pageTitle":"DefaultCamera","url":"api/DefaultCamera#new","content":"&lt;/&gt; DefaultCamera.new() → DefaultCamera Constructs a new DefaultCamera  "},{"title":"OverrideGlobalFieldOfView​","type":1,"pageTitle":"DefaultCamera","url":"api/DefaultCamera#OverrideGlobalFieldOfView","content":"&lt;/&gt; DefaultCamera:OverrideGlobalFieldOfView(fieldOfView: number) → () Overrides the global field of view in the cached camera state  "},{"title":"BindToRenderStep​","type":1,"pageTitle":"DefaultCamera","url":"api/DefaultCamera#BindToRenderStep","content":"&lt;/&gt; DefaultCamera:BindToRenderStep() → () Binds the camera to RunService RenderStepped event. tip Be sure to call UnbindFromRenderStep when using this.  "},{"title":"UnbindFromRenderStep​","type":1,"pageTitle":"DefaultCamera","url":"api/DefaultCamera#UnbindFromRenderStep","content":"&lt;/&gt; DefaultCamera:UnbindFromRenderStep() → () Unbinds the camera from the RunService "},{"title":"DebounceTimer","type":0,"sectionRef":"#","url":"api/DebounceTimer","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"DebounceTimer","url":"api/DebounceTimer#functions","content":" "},{"title":"new​","type":1,"pageTitle":"DebounceTimer","url":"api/DebounceTimer#new","content":"&lt;/&gt; DebounceTimer.new(length: number) → DebounceTimer   "},{"title":"SetLength​","type":1,"pageTitle":"DebounceTimer","url":"api/DebounceTimer#SetLength","content":"&lt;/&gt; DebounceTimer:SetLength(length: number) → () Gets the length  "},{"title":"Restart​","type":1,"pageTitle":"DebounceTimer","url":"api/DebounceTimer#Restart","content":"&lt;/&gt; DebounceTimer:Restart() → () Restarts the timer  "},{"title":"IsRunning​","type":1,"pageTitle":"DebounceTimer","url":"api/DebounceTimer#IsRunning","content":"&lt;/&gt; DebounceTimer:IsRunning() → boolean Returns whether or not the timer is running.  "},{"title":"IsDone​","type":1,"pageTitle":"DebounceTimer","url":"api/DebounceTimer#IsDone","content":"&lt;/&gt; DebounceTimer:IsDone() → boolean Returns if the timer is done "},{"title":"deferred","type":0,"sectionRef":"#","url":"api/deferred","content":"On this page deferred This was deprecated in 2.0.1 This item is deprecated. Do not use it for new work. An expensive way to spawn a function. However, unlike spawn(), it executes on the same frame, and unlike coroutines, does not obscure errors","keywords":""},{"title":"DepthOfFieldModifier","type":0,"sectionRef":"#","url":"api/DepthOfFieldModifier","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"DepthOfFieldModifier","url":"api/DepthOfFieldModifier#properties","content":" "},{"title":"Removing​","type":1,"pageTitle":"DepthOfFieldModifier","url":"api/DepthOfFieldModifier#Removing","content":"&lt;/&gt; DepthOfFieldModifier.Removing: Signal Fires when the modifier is removing.  "},{"title":"DistanceChanged​","type":1,"pageTitle":"DepthOfFieldModifier","url":"api/DepthOfFieldModifier#DistanceChanged","content":"&lt;/&gt; DepthOfFieldModifier.DistanceChanged: Signal Fires when the distance changes.  "},{"title":"RadiusChanged​","type":1,"pageTitle":"DepthOfFieldModifier","url":"api/DepthOfFieldModifier#RadiusChanged","content":"&lt;/&gt; DepthOfFieldModifier.RadiusChanged: Signal Fires when the radius changes. "},{"title":"Functions​","type":1,"pageTitle":"DepthOfFieldModifier","url":"api/DepthOfFieldModifier#functions","content":" "},{"title":"SetDistance​","type":1,"pageTitle":"DepthOfFieldModifier","url":"api/DepthOfFieldModifier#SetDistance","content":"&lt;/&gt; DepthOfFieldModifier:SetDistance( distance: number, doNotAnimate: boolean ) → () Sets the target depth of field distance  "},{"title":"SetRadius​","type":1,"pageTitle":"DepthOfFieldModifier","url":"api/DepthOfFieldModifier#SetRadius","content":"&lt;/&gt; DepthOfFieldModifier:SetRadius( radius: number, doNotAnimate: boolean ) → () Sets the target depth of field distance  "},{"title":"GetDistance​","type":1,"pageTitle":"DepthOfFieldModifier","url":"api/DepthOfFieldModifier#GetDistance","content":"&lt;/&gt; DepthOfFieldModifier:GetDistance() → number Retrieves the distance  "},{"title":"GetRadius​","type":1,"pageTitle":"DepthOfFieldModifier","url":"api/DepthOfFieldModifier#GetRadius","content":"&lt;/&gt; DepthOfFieldModifier:GetRadius() → number Retrieves the radius  "},{"title":"Reset​","type":1,"pageTitle":"DepthOfFieldModifier","url":"api/DepthOfFieldModifier#Reset","content":"&lt;/&gt; DepthOfFieldModifier:Reset(doNotAnimate: boolean) → () Resets the radius "},{"title":"DepthOfFieldService","type":0,"sectionRef":"#","url":"api/DepthOfFieldService","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"DepthOfFieldService","url":"api/DepthOfFieldService#functions","content":" "},{"title":"Init​","type":1,"pageTitle":"DepthOfFieldService","url":"api/DepthOfFieldService#Init","content":"&lt;/&gt; DepthOfFieldService:Init(_serviceBag: ServiceBag) → () Initializes the DepthOfFieldService. Should be done via ServiceBag.  "},{"title":"CreateModifier​","type":1,"pageTitle":"DepthOfFieldService","url":"api/DepthOfFieldService#CreateModifier","content":"&lt;/&gt; DepthOfFieldService:CreateModifier() → DepthOfFieldModifier Creates a new depth of field modifier "},{"title":"DepthOfFieldTweener","type":0,"sectionRef":"#","url":"api/DepthOfFieldTweener","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"DepthOfFieldTweener","url":"api/DepthOfFieldTweener#functions","content":" "},{"title":"new​","type":1,"pageTitle":"DepthOfFieldTweener","url":"api/DepthOfFieldTweener#new","content":"&lt;/&gt; DepthOfFieldTweener.new( depthOfField: number, speed: number? ) → DepthOfFieldTweener Create a new DepthOfFieldTweener.  "},{"title":"SetRadius​","type":1,"pageTitle":"DepthOfFieldTweener","url":"api/DepthOfFieldTweener#SetRadius","content":"&lt;/&gt; DepthOfFieldTweener:SetRadius( radius: number, doNotAnimate: boolean ) → () Sets the radius and starts any animation  "},{"title":"GetRadius​","type":1,"pageTitle":"DepthOfFieldTweener","url":"api/DepthOfFieldTweener#GetRadius","content":"&lt;/&gt; DepthOfFieldTweener:GetRadius() → number Gets the current radius being rendered  "},{"title":"GetDistance​","type":1,"pageTitle":"DepthOfFieldTweener","url":"api/DepthOfFieldTweener#GetDistance","content":"&lt;/&gt; DepthOfFieldTweener:GetDistance() → number Gets the current distance being set  "},{"title":"SetDistance​","type":1,"pageTitle":"DepthOfFieldTweener","url":"api/DepthOfFieldTweener#SetDistance","content":"&lt;/&gt; DepthOfFieldTweener:SetDistance( distance: number, doNotAnimate: boolean ) → () Sets the distance to render  "},{"title":"Reset​","type":1,"pageTitle":"DepthOfFieldTweener","url":"api/DepthOfFieldTweener#Reset","content":"&lt;/&gt; DepthOfFieldTweener:Reset(doNotAnimate: boolean) → () Resets the depth of field to the original distance  "},{"title":"ResetRadius​","type":1,"pageTitle":"DepthOfFieldTweener","url":"api/DepthOfFieldTweener#ResetRadius","content":"&lt;/&gt; DepthOfFieldTweener:ResetRadius(doNotAnimate: boolean) → () Resets the radius  "},{"title":"ResetDistance​","type":1,"pageTitle":"DepthOfFieldTweener","url":"api/DepthOfFieldTweener#ResetDistance","content":"&lt;/&gt; DepthOfFieldTweener:ResetDistance(doNotAnimate: boolean) → () Resets the distance "},{"title":"DraggableSnackbar","type":0,"sectionRef":"#","url":"api/DraggableSnackbar","content":"On this page DraggableSnackbar Snackbar, but draggable","keywords":""},{"title":"EloUtils","type":0,"sectionRef":"#","url":"api/EloUtils","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"EloUtils","url":"api/EloUtils#types","content":" "},{"title":"EloConfig​","type":1,"pageTitle":"EloUtils","url":"api/EloUtils#EloConfig","content":"&lt;/&gt; interface EloConfig { factor: number kfactor: number | function initial: number ratingFloor: number }  "},{"title":"Functions​","type":1,"pageTitle":"EloUtils","url":"api/EloUtils#functions","content":" "},{"title":"createConfig​","type":1,"pageTitle":"EloUtils","url":"api/EloUtils#createConfig","content":"&lt;/&gt; EloUtils.createConfig( config: table?-- Optional table with defaults ) → EloConfig Creates a new elo config.  "},{"title":"isEloConfig​","type":1,"pageTitle":"EloUtils","url":"api/EloUtils#isEloConfig","content":"&lt;/&gt; EloUtils.isEloConfig(config: any) → boolean Returns whether an object is an elo config  "},{"title":"getNewScores​","type":1,"pageTitle":"EloUtils","url":"api/EloUtils#getNewScores","content":"&lt;/&gt; EloUtils.getNewScores( config: EloConfig, playerRating: number, opponentRating: number, matchScores: {number}-- 0 for loss, 1 for win, 0.5 for draw. ) → ( number,-- playerRating number-- opponentRating ) Gets the new score for the player and opponent after a series of matches.  "},{"title":"getNewScore​","type":1,"pageTitle":"EloUtils","url":"api/EloUtils#getNewScore","content":"&lt;/&gt; EloUtils.getNewScore( config: EloConfig, playerRating: number, opponentRating: number, matchScores: {number}-- 0 for loss, 1 for win, 0.5 for draw. ) → () Gets the new score for the player after a series of matches.  "},{"title":"getExpected​","type":1,"pageTitle":"EloUtils","url":"api/EloUtils#getExpected","content":"&lt;/&gt; EloUtils.getExpected( config: EloConfig, playerRating: number, opponentRating: number ) → number Compute expected score for a player vs. player given the rating. info A player's expected score is their probability of winning plus half their probability of drawing. Thus, an expected score of 0.75 could represent a 75% chance of winning, 25% chance of losing, and 0% chance of drawing  "},{"title":"getScoreAdjustment​","type":1,"pageTitle":"EloUtils","url":"api/EloUtils#getScoreAdjustment","content":"&lt;/&gt; EloUtils.getScoreAdjustment( config: EloConfig, playerRating: number, opponentRating: number, matchScores: {number}-- 0 for loss, 1 for win, 0.5 for draw. ) → number Gets the score adjustment for a given player's base.  "},{"title":"fromOpponentPerspective​","type":1,"pageTitle":"EloUtils","url":"api/EloUtils#fromOpponentPerspective","content":"&lt;/&gt; EloUtils.fromOpponentPerspective( matchScores: {number}-- 0 for loss, 1 for win, 0.5 for draw. ) → {number} Flips the scores for the opponent  "},{"title":"standardKFactorFormula​","type":1,"pageTitle":"EloUtils","url":"api/EloUtils#standardKFactorFormula","content":"&lt;/&gt; EloUtils.standardKFactorFormula(rating: number) → number Standard kfactor formula for use in the elo config.  "},{"title":"extractKFactor​","type":1,"pageTitle":"EloUtils","url":"api/EloUtils#extractKFactor","content":"&lt;/&gt; EloUtils.extractKFactor( config: EloConfig, rating: number ) → number Computes the kfactor for the given player from the rating "},{"title":"EnabledMixin","type":0,"sectionRef":"#","url":"api/EnabledMixin","content":"On this page EnabledMixin Adds Enabled/Disabled state to class","keywords":""},{"title":"EquippedTracker","type":0,"sectionRef":"#","url":"api/EquippedTracker","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"EquippedTracker","url":"api/EquippedTracker#properties","content":" "},{"title":"Player​","type":1,"pageTitle":"EquippedTracker","url":"api/EquippedTracker#Player","content":"&lt;/&gt; EquippedTracker.Player: ValueObject&lt;Player &gt; Tracks current equipped player who has an alive humanoid "},{"title":"Functions​","type":1,"pageTitle":"EquippedTracker","url":"api/EquippedTracker#functions","content":" "},{"title":"new​","type":1,"pageTitle":"EquippedTracker","url":"api/EquippedTracker#new","content":"&lt;/&gt; EquippedTracker.new(tool: Tool ) → EquippedTracker Tracks the state of a tool being equipped  "},{"title":"Destroy​","type":1,"pageTitle":"EquippedTracker","url":"api/EquippedTracker#Destroy","content":"&lt;/&gt; EquippedTracker:Destroy() → () Cleans up the EquippedTracker "},{"title":"Draw","type":0,"sectionRef":"#","url":"api/Draw","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Draw","url":"api/Draw#functions","content":" "},{"title":"setColor​","type":1,"pageTitle":"Draw","url":"api/Draw#setColor","content":"&lt;/&gt; Draw.setColor( color: Color3 -- The color to set ) → () Sets the Draw's drawing color.  "},{"title":"resetColor​","type":1,"pageTitle":"Draw","url":"api/Draw#resetColor","content":"&lt;/&gt; Draw.resetColor() → () Resets the drawing color.  "},{"title":"setRandomColor​","type":1,"pageTitle":"Draw","url":"api/Draw#setRandomColor","content":"&lt;/&gt; Draw.setRandomColor() → () Sets the Draw library to use a random color.  "},{"title":"ray​","type":1,"pageTitle":"Draw","url":"api/Draw#ray","content":"&lt;/&gt; Draw.ray( ray: Ray , color: Color3? ,-- Optional color to draw in parent: Instance? ,-- Optional parent meshDiameter: number?,-- Optional mesh diameter diameter: number?-- Optional diameter ) → BasePart  Draws a ray for debugging. local ray = Ray.new(Vector3.new(0, 0, 0), Vector3.new(0, 10, 0)) Draw.ray(ray)   "},{"title":"updateRay​","type":1,"pageTitle":"Draw","url":"api/Draw#updateRay","content":"&lt;/&gt; Draw.updateRay( part: Ray part, ray: Ray , color: Color3 ) → () Updates the rendered ray to the new color and position. Used for certain scenarios when updating a ray on renderstepped would impact performance, even in debug mode. local ray = Ray.new(Vector3.new(0, 0, 0), Vector3.new(0, 10, 0)) local drawn = Draw.ray(ray) RunService.RenderStepped:Connect(function() local newRay = Ray.new(Vector3.new(0, 0, 0), Vector3.new(0, 10*math.sin(os.clock()), 0)) Draw.updateRay(drawn, newRay Color3.new(1, 0.5, 0.5)) end)   "},{"title":"text​","type":1,"pageTitle":"Draw","url":"api/Draw#text","content":"&lt;/&gt; Draw.text( adornee: Instance | Vector3 ,-- Adornee to rener on text: string,-- Text to render color: Color3? -- Optional color to render ) → Instance  Render text in 3D for debugging. The text container will be sized to fit the text. Draw.text(Vector3.new(0, 10, 0), &quot;Point&quot;)   "},{"title":"sphere​","type":1,"pageTitle":"Draw","url":"api/Draw#sphere","content":"&lt;/&gt; Draw.sphere( position: Vector3 ,-- Position of the sphere radius: number,-- Radius of the sphere color: Color3? ,-- Optional color parent: Instance? -- Optional parent ) → BasePart  Renders a sphere at the given point in 3D space. Draw.sphere(Vector3.new(0, 10, 0), 10) Great for debugging explosions and stuff.  "},{"title":"point​","type":1,"pageTitle":"Draw","url":"api/Draw#point","content":"&lt;/&gt; Draw.point( position: Vector3 | CFrame ,-- Point to Draw color: Color3? ,-- Optional color parent: Instance? ,-- Optional parent diameter: number?-- Optional diameter ) → BasePart  Draws a point for debugging in 3D space. Draw.point(Vector3.new(0, 25, 0), Color3.new(0.5, 1, 0.5))   "},{"title":"labelledPoint​","type":1,"pageTitle":"Draw","url":"api/Draw#labelledPoint","content":"&lt;/&gt; Draw.labelledPoint( position: Vector3 | CFrame ,-- Position to render label: string,-- Label to render on the point color: Color3? ,-- Optional color parent: Instance? -- Optional parent ) → BasePart  Renders a point with a label in 3D space. Draw.labelledPoint(Vector3.new(0, 10, 0), &quot;AI target&quot;)   "},{"title":"cframe​","type":1,"pageTitle":"Draw","url":"api/Draw#cframe","content":"&lt;/&gt; Draw.cframe(cframe: CFrame ) → Model  Renders a CFrame in 3D space. Includes each axis. Draw.cframe(CFrame.Angles(0, math.pi/8, 0))   "},{"title":"box​","type":1,"pageTitle":"Draw","url":"api/Draw#box","content":"&lt;/&gt; Draw.box( cframe: CFrame | Vector3 ,-- CFrame of the box size: Vector3 ,-- Size of the box color: Color3 -- Optional Color3 ) → BasePart  Renders a box in 3D space. Great for debugging bounding boxes. Draw.box(Vector3.new(0, 5, 0), Vector3.new(10, 10, 10))   "},{"title":"region3​","type":1,"pageTitle":"Draw","url":"api/Draw#region3","content":"&lt;/&gt; Draw.region3( region3: Region3 ,-- Region3 to render color: Color3? -- Optional color3 ) → BasePart  Renders a region3 in 3D space. Draw.region3(Region3.new(Vector3.new(0, 0, 0), Vector3.new(10, 10, 10)))   "},{"title":"terrainCell​","type":1,"pageTitle":"Draw","url":"api/Draw#terrainCell","content":"&lt;/&gt; Draw.terrainCell( position: Vector3 ,-- World space position color: Color3? -- Optional color to render ) → BasePart  Renders a terrain cell in 3D space. Snaps the position to the nearest position. Draw.terrainCell(Vector3.new(0, 0, 0))   "},{"title":"vector​","type":1,"pageTitle":"Draw","url":"api/Draw#vector","content":"&lt;/&gt; Draw.vector( position: Vector3 ,-- Position of the vector direction: Vector3 ,-- Direction of the vector. Determines length. color: Color3? ,-- Optional color parent: Instance? ,-- Optional instance meshDiameter: number?-- Optional diameter ) → BasePart  Draws a vector in 3D space. Draw.vector(Vector3.new(0, 0, 0), Vector3.new(0, 1, 0))   "},{"title":"getDefaultParent​","type":1,"pageTitle":"Draw","url":"api/Draw#getDefaultParent","content":"&lt;/&gt; Draw.getDefaultParent() → Instance  Retrieves the default parent for the current execution context. "},{"title":"FadeBetweenCamera","type":0,"sectionRef":"#","url":"api/FadeBetweenCamera","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"FadeBetweenCamera","url":"api/FadeBetweenCamera#properties","content":" "},{"title":"CameraState​","type":1,"pageTitle":"FadeBetweenCamera","url":"api/FadeBetweenCamera#CameraState","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; FadeBetweenCamera.CameraState: CameraState The current state. "},{"title":"Functions​","type":1,"pageTitle":"FadeBetweenCamera","url":"api/FadeBetweenCamera#functions","content":" "},{"title":"new​","type":1,"pageTitle":"FadeBetweenCamera","url":"api/FadeBetweenCamera#new","content":"&lt;/&gt; FadeBetweenCamera.new( cameraA: CameraLike, cameraB: CameraLike ) → FadeBetweenCamera  "},{"title":"ExperienceCalculator","type":0,"sectionRef":"#","url":"api/ExperienceCalculator","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ExperienceCalculator","url":"api/ExperienceCalculator#functions","content":" "},{"title":"setExperienceFactor​","type":1,"pageTitle":"ExperienceCalculator","url":"api/ExperienceCalculator#setExperienceFactor","content":"&lt;/&gt; ExperienceCalculator.setExperienceFactor(factor: number) → () Sets the global experience factor to be used across this library. tip This API is global, poorly designed and will be refactored at some point.  "},{"title":"getLevel​","type":1,"pageTitle":"ExperienceCalculator","url":"api/ExperienceCalculator#getLevel","content":"&lt;/&gt; ExperienceCalculator.getLevel( experience: number-- Current experience ) → number-- The level the player should be Gets the current level from experience.  "},{"title":"getExperienceRequiredForNextLevel​","type":1,"pageTitle":"ExperienceCalculator","url":"api/ExperienceCalculator#getExperienceRequiredForNextLevel","content":"&lt;/&gt; ExperienceCalculator.getExperienceRequiredForNextLevel( currentLevel: number-- The current level the player is ) → number-- Experience required for next level Given a current level, return the experience required for the next one.  "},{"title":"getExperienceRequiredForLevel​","type":1,"pageTitle":"ExperienceCalculator","url":"api/ExperienceCalculator#getExperienceRequiredForLevel","content":"&lt;/&gt; ExperienceCalculator.getExperienceRequiredForLevel(level: number) → number-- Total experience required for a level Gets experience required for a current level.  "},{"title":"getExperienceForNextLevel​","type":1,"pageTitle":"ExperienceCalculator","url":"api/ExperienceCalculator#getExperienceForNextLevel","content":"&lt;/&gt; ExperienceCalculator.getExperienceForNextLevel( currentExperience: number-- Current experience of player ) → number-- Experience points left to earn for the player Gets experience left to earn required for next level.  "},{"title":"getSubExperience​","type":1,"pageTitle":"ExperienceCalculator","url":"api/ExperienceCalculator#getSubExperience","content":"&lt;/&gt; ExperienceCalculator.getSubExperience( currentExperience: number-- Current experience of player ) → ( number,-- Achieved of next level number-- Total required for next level ) Calculates subtotal experience. "},{"title":"FadeBetweenCamera3","type":0,"sectionRef":"#","url":"api/FadeBetweenCamera3","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"FadeBetweenCamera3","url":"api/FadeBetweenCamera3#properties","content":" "},{"title":"CameraState​","type":1,"pageTitle":"FadeBetweenCamera3","url":"api/FadeBetweenCamera3#CameraState","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; FadeBetweenCamera3.CameraState: CameraState The current state. "},{"title":"Functions​","type":1,"pageTitle":"FadeBetweenCamera3","url":"api/FadeBetweenCamera3#functions","content":" "},{"title":"new​","type":1,"pageTitle":"FadeBetweenCamera3","url":"api/FadeBetweenCamera3#new","content":"&lt;/&gt; FadeBetweenCamera3.new( cameraA: CameraLike, cameraB: CameraLike ) → FadeBetweenCamera3  "},{"title":"FadeBetweenCamera2","type":0,"sectionRef":"#","url":"api/FadeBetweenCamera2","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"FadeBetweenCamera2","url":"api/FadeBetweenCamera2#properties","content":" "},{"title":"CameraState​","type":1,"pageTitle":"FadeBetweenCamera2","url":"api/FadeBetweenCamera2#CameraState","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; FadeBetweenCamera2.CameraState: CameraState The current state. "},{"title":"Functions​","type":1,"pageTitle":"FadeBetweenCamera2","url":"api/FadeBetweenCamera2#functions","content":" "},{"title":"new​","type":1,"pageTitle":"FadeBetweenCamera2","url":"api/FadeBetweenCamera2#new","content":"&lt;/&gt; FadeBetweenCamera2.new( cameraA: CameraLike, cameraB: CameraLike ) → FadeBetweenCamera2  "},{"title":"FadeBetweenCamera4","type":0,"sectionRef":"#","url":"api/FadeBetweenCamera4","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"FadeBetweenCamera4","url":"api/FadeBetweenCamera4#properties","content":" "},{"title":"CameraState​","type":1,"pageTitle":"FadeBetweenCamera4","url":"api/FadeBetweenCamera4#CameraState","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; FadeBetweenCamera4.CameraState: CameraState The current state. "},{"title":"Functions​","type":1,"pageTitle":"FadeBetweenCamera4","url":"api/FadeBetweenCamera4#functions","content":" "},{"title":"new​","type":1,"pageTitle":"FadeBetweenCamera4","url":"api/FadeBetweenCamera4#new","content":"&lt;/&gt; FadeBetweenCamera4.new( cameraA: CameraLike, cameraB: CameraLike ) → FadeBetweenCamera4  "},{"title":"FadingCamera","type":0,"sectionRef":"#","url":"api/FadingCamera","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"FadingCamera","url":"api/FadingCamera#properties","content":" "},{"title":"CameraState​","type":1,"pageTitle":"FadingCamera","url":"api/FadingCamera#CameraState","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; FadingCamera.CameraState: CameraState The current state. "},{"title":"Functions​","type":1,"pageTitle":"FadingCamera","url":"api/FadingCamera#functions","content":" "},{"title":"new​","type":1,"pageTitle":"FadingCamera","url":"api/FadingCamera#new","content":"&lt;/&gt; FadingCamera.new(camera: CameraEffect) → ()  "},{"title":"FakeSkyboxSide","type":0,"sectionRef":"#","url":"api/FakeSkyboxSide","content":"On this page FakeSkyboxSide","keywords":""},{"title":"FieldOfViewUtils","type":0,"sectionRef":"#","url":"api/FieldOfViewUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"FieldOfViewUtils","url":"api/FieldOfViewUtils#functions","content":" "},{"title":"fovToHeight​","type":1,"pageTitle":"FieldOfViewUtils","url":"api/FieldOfViewUtils#fovToHeight","content":"&lt;/&gt; FieldOfViewUtils.fovToHeight(fov: number) → number Converts field of view to height  "},{"title":"heightToFov​","type":1,"pageTitle":"FieldOfViewUtils","url":"api/FieldOfViewUtils#heightToFov","content":"&lt;/&gt; FieldOfViewUtils.heightToFov(height: number) → number Converts height to field of view  "},{"title":"safeLog​","type":1,"pageTitle":"FieldOfViewUtils","url":"api/FieldOfViewUtils#safeLog","content":"&lt;/&gt; FieldOfViewUtils.safeLog( height: number, linearAt: number ) → number Linear way to log a value so we don't get floating point errors or infinite values  "},{"title":"safeExp​","type":1,"pageTitle":"FieldOfViewUtils","url":"api/FieldOfViewUtils#safeExp","content":"&lt;/&gt; FieldOfViewUtils.safeExp( logHeight: number, linearAt: number ) → number Linear way to exponentiate field of view so we don't get floating point errors or infinite values.  "},{"title":"lerpInHeightSpace​","type":1,"pageTitle":"FieldOfViewUtils","url":"api/FieldOfViewUtils#lerpInHeightSpace","content":"&lt;/&gt; FieldOfViewUtils.lerpInHeightSpace( fov0: number, fov1: number, percent: number ) → number-- Fov in degrees Interpolates field of view in height space, instead of degrees. "},{"title":"FakeSkybox","type":0,"sectionRef":"#","url":"api/FakeSkybox","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"FakeSkybox","url":"api/FakeSkybox#functions","content":" "},{"title":"new​","type":1,"pageTitle":"FakeSkybox","url":"api/FakeSkybox#new","content":"&lt;/&gt; FakeSkybox.new(skybox: Skybox) → FakeSkybox Creates a new FakeSkybox  "},{"title":"SetPartSize​","type":1,"pageTitle":"FakeSkybox","url":"api/FakeSkybox#SetPartSize","content":"&lt;/&gt; FakeSkybox:SetPartSize(partSize: number) → FakeSkybox-- self   "},{"title":"Show​","type":1,"pageTitle":"FakeSkybox","url":"api/FakeSkybox#Show","content":"&lt;/&gt; FakeSkybox:Show(doNotAnimate: boolean) → ()   "},{"title":"Hide​","type":1,"pageTitle":"FakeSkybox","url":"api/FakeSkybox#Hide","content":"&lt;/&gt; FakeSkybox:Hide(doNotAnimate: boolean) → ()   "},{"title":"SetSkybox​","type":1,"pageTitle":"FakeSkybox","url":"api/FakeSkybox#SetSkybox","content":"&lt;/&gt; FakeSkybox:SetSkybox(skybox: Skybox) → FakeSkybox-- self   "},{"title":"IsVisible​","type":1,"pageTitle":"FakeSkybox","url":"api/FakeSkybox#IsVisible","content":"&lt;/&gt; FakeSkybox:IsVisible() → boolean Returns whether the skybox is visible.  "},{"title":"UpdateRender​","type":1,"pageTitle":"FakeSkybox","url":"api/FakeSkybox#UpdateRender","content":"&lt;/&gt; FakeSkybox:UpdateRender(baseCFrame: CFrame ) → () Updates the rendering  "},{"title":"Destroy​","type":1,"pageTitle":"FakeSkybox","url":"api/FakeSkybox#Destroy","content":"&lt;/&gt; FakeSkybox:Destroy() → () Cleans up the fake skybox "},{"title":"FirstPersonCharacterTransparency","type":0,"sectionRef":"#","url":"api/FirstPersonCharacterTransparency","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"FirstPersonCharacterTransparency","url":"api/FirstPersonCharacterTransparency#functions","content":" "},{"title":"new​","type":1,"pageTitle":"FirstPersonCharacterTransparency","url":"api/FirstPersonCharacterTransparency#new","content":"&lt;/&gt; FirstPersonCharacterTransparency.new( humanoid: Humanoid , serviceBag: ServiceBag ) → FirstPersonCharacterTransparency Creates a new FirstPersonCharacterTransparency  "},{"title":"SetShowBodyParts​","type":1,"pageTitle":"FirstPersonCharacterTransparency","url":"api/FirstPersonCharacterTransparency#SetShowBodyParts","content":"&lt;/&gt; FirstPersonCharacterTransparency:SetShowBodyParts(shouldShowBodyParts: boolean) → () Sets whether body parts should be shown.  "},{"title":"SetTransparency​","type":1,"pageTitle":"FirstPersonCharacterTransparency","url":"api/FirstPersonCharacterTransparency#SetTransparency","content":"&lt;/&gt; FirstPersonCharacterTransparency:SetTransparency(transparency: number) → () Sets the transparency "},{"title":"FriendUtils","type":0,"sectionRef":"#","url":"api/FriendUtils","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"FriendUtils","url":"api/FriendUtils#types","content":" "},{"title":"FriendData​","type":1,"pageTitle":"FriendUtils","url":"api/FriendUtils#FriendData","content":"&lt;/&gt; interface FriendData { Id: number-- The friend's UserId Username: string-- The friend's username DisplayName: string-- The display name of the friend. IsOnline: bool-- If the friend is currently online }  "},{"title":"Functions​","type":1,"pageTitle":"FriendUtils","url":"api/FriendUtils#functions","content":" "},{"title":"promiseAllStudioFriends​","type":1,"pageTitle":"FriendUtils","url":"api/FriendUtils#promiseAllStudioFriends","content":"&lt;/&gt; FriendUtils.promiseAllStudioFriends() → Promise&lt;{FriendData}&gt; Returns the current studio users friends FriendUtils.promiseAllStudioFriends() :Then(function(studioFriends) print(studioFriends) end)   "},{"title":"onlineFriends​","type":1,"pageTitle":"FriendUtils","url":"api/FriendUtils#onlineFriends","content":"&lt;/&gt; FriendUtils.onlineFriends(friends: {FriendData}) → {FriendData} Outputs a list of only online friends  "},{"title":"friendsNotInGame​","type":1,"pageTitle":"FriendUtils","url":"api/FriendUtils#friendsNotInGame","content":"&lt;/&gt; FriendUtils.friendsNotInGame(friends: {FriendData}) → {FriendData} Outputs a list of only friends not in game  "},{"title":"promiseAllFriends​","type":1,"pageTitle":"FriendUtils","url":"api/FriendUtils#promiseAllFriends","content":"&lt;/&gt; FriendUtils.promiseAllFriends( userId: number, limitMaxFriends: number?-- Optional max friends ) → Promise&lt;{FriendData}&gt; Retrieves all friends.  "},{"title":"promiseFriendPages​","type":1,"pageTitle":"FriendUtils","url":"api/FriendUtils#promiseFriendPages","content":"&lt;/&gt; FriendUtils.promiseFriendPages(userId: number) → Promise&lt;FriendPages &gt; Wraps Players.GetFriendsAsync  "},{"title":"iterateFriendsYielding​","type":1,"pageTitle":"FriendUtils","url":"api/FriendUtils#iterateFriendsYielding","content":"&lt;/&gt; FriendUtils.iterateFriendsYielding(pages: FriendPages ) → ()=&gt;FrienData?-- Iterator Iterates over the current FriendPage and returns the next page  "},{"title":"promiseStudioServiceUserId​","type":1,"pageTitle":"FriendUtils","url":"api/FriendUtils#promiseStudioServiceUserId","content":"&lt;/&gt; FriendUtils.promiseStudioServiceUserId() → Promise&lt;number&gt; Gets the current studio user's user id. tip Consider using FriendUtils.promiseCurrentStudioUserId if you want this code to work while the game is running or in team create. This is specific to StudioService.  "},{"title":"promiseCurrentStudioUserId​","type":1,"pageTitle":"FriendUtils","url":"api/FriendUtils#promiseCurrentStudioUserId","content":"&lt;/&gt; FriendUtils.promiseCurrentStudioUserId() → Promise&lt;number&gt; Gets the current studio user's user id. "},{"title":"FunctionUtils","type":0,"sectionRef":"#","url":"api/FunctionUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"FunctionUtils","url":"api/FunctionUtils#functions","content":" "},{"title":"bind​","type":1,"pageTitle":"FunctionUtils","url":"api/FunctionUtils#bind","content":"&lt;/&gt; FunctionUtils.bind( self: table, func: function ) → function Binds the &quot;self&quot; variable to the function as the first argument "},{"title":"GameConfig","type":0,"sectionRef":"#","url":"api/GameConfig","content":"On this page GameConfig This item only works when running on the server. Server See GameConfigBase for API and GameConfigService for usage.","keywords":""},{"title":"GameConfigAsset","type":0,"sectionRef":"#","url":"api/GameConfigAsset","content":"On this page GameConfigAsset","keywords":""},{"title":"GameConfigAssetClient","type":0,"sectionRef":"#","url":"api/GameConfigAssetClient","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"GameConfigAssetClient","url":"api/GameConfigAssetClient#functions","content":" "},{"title":"new​","type":1,"pageTitle":"GameConfigAssetClient","url":"api/GameConfigAssetClient#new","content":"&lt;/&gt; GameConfigAssetClient.new( obj: Instance , serviceBag: ServiceBag ) → GameConfigAssetClient Constructs a new GameConfigAssetClient.  "},{"title":"ObserveTranslatedName​","type":1,"pageTitle":"GameConfigAssetClient","url":"api/GameConfigAssetClient#ObserveTranslatedName","content":"&lt;/&gt; GameConfigAssetClient:ObserveTranslatedName() → Observable&lt;string&gt; Observes the translated name  "},{"title":"ObserveTranslatedDescription​","type":1,"pageTitle":"GameConfigAssetClient","url":"api/GameConfigAssetClient#ObserveTranslatedDescription","content":"&lt;/&gt; GameConfigAssetClient:ObserveTranslatedDescription() → Observable&lt;string&gt; Observes the translated description "},{"title":"GameConfigAssetBase","type":0,"sectionRef":"#","url":"api/GameConfigAssetBase","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"GameConfigAssetBase","url":"api/GameConfigAssetBase#functions","content":" "},{"title":"new​","type":1,"pageTitle":"GameConfigAssetBase","url":"api/GameConfigAssetBase#new","content":"&lt;/&gt; GameConfigAssetBase.new(obj: Folder ) → GameConfigAssetBase Constructs a new GameConfigAssetBase. Should be done via binder. This is a base class.  "},{"title":"GetAssetId​","type":1,"pageTitle":"GameConfigAssetBase","url":"api/GameConfigAssetBase#GetAssetId","content":"&lt;/&gt; GameConfigAssetBase:GetAssetId() → number Gets the asset id  "},{"title":"ObserveAssetId​","type":1,"pageTitle":"GameConfigAssetBase","url":"api/GameConfigAssetBase#ObserveAssetId","content":"&lt;/&gt; GameConfigAssetBase:ObserveAssetId() → Observable&lt;number&gt; Observes the assetId  "},{"title":"GetAssetType​","type":1,"pageTitle":"GameConfigAssetBase","url":"api/GameConfigAssetBase#GetAssetType","content":"&lt;/&gt; GameConfigAssetBase:GetAssetType() → string? Gets the asset type  "},{"title":"ObserveAssetType​","type":1,"pageTitle":"GameConfigAssetBase","url":"api/GameConfigAssetBase#ObserveAssetType","content":"&lt;/&gt; GameConfigAssetBase:ObserveAssetType() → Observable&lt;string?&gt; Observes the asset type  "},{"title":"ObserveAssetKey​","type":1,"pageTitle":"GameConfigAssetBase","url":"api/GameConfigAssetBase#ObserveAssetKey","content":"&lt;/&gt; GameConfigAssetBase:ObserveAssetKey() → Observable&lt;string&gt; Observes the asset key  "},{"title":"GetAssetKey​","type":1,"pageTitle":"GameConfigAssetBase","url":"api/GameConfigAssetBase#GetAssetKey","content":"&lt;/&gt; GameConfigAssetBase:GetAssetKey() → string Gets the asset key  "},{"title":"ObserveState​","type":1,"pageTitle":"GameConfigAssetBase","url":"api/GameConfigAssetBase#ObserveState","content":"&lt;/&gt; GameConfigAssetBase:ObserveState() → any Observes the asset state  "},{"title":"PromiseCloudPriceInRobux​","type":1,"pageTitle":"GameConfigAssetBase","url":"api/GameConfigAssetBase#PromiseCloudPriceInRobux","content":"&lt;/&gt; GameConfigAssetBase:PromiseCloudPriceInRobux(cancelToken: CancelToken) → Promise&lt;string?&gt; Promises the cloud price in Robux  "},{"title":"PromiseColor​","type":1,"pageTitle":"GameConfigAssetBase","url":"api/GameConfigAssetBase#PromiseColor","content":"&lt;/&gt; GameConfigAssetBase:PromiseColor(_cancelToken: CancelToken) → Promise&lt;Color3 &gt; Promises the color of the game asset (for dialog and other systems)  "},{"title":"PromiseNameTranslationKey​","type":1,"pageTitle":"GameConfigAssetBase","url":"api/GameConfigAssetBase#PromiseNameTranslationKey","content":"&lt;/&gt; GameConfigAssetBase:PromiseNameTranslationKey(cancelToken: CancelToken) → Promise&lt;string?&gt; Promises the name translation key  "},{"title":"ObserveNameTranslationKey​","type":1,"pageTitle":"GameConfigAssetBase","url":"api/GameConfigAssetBase#ObserveNameTranslationKey","content":"&lt;/&gt; GameConfigAssetBase:ObserveNameTranslationKey() → Observable&lt;string?&gt; Observes the name translation key.  "},{"title":"ObserveDescriptionTranslationKey​","type":1,"pageTitle":"GameConfigAssetBase","url":"api/GameConfigAssetBase#ObserveDescriptionTranslationKey","content":"&lt;/&gt; GameConfigAssetBase:ObserveDescriptionTranslationKey() → Observable&lt;string?&gt; Observes the description translation key.  "},{"title":"ObserveCloudName​","type":1,"pageTitle":"GameConfigAssetBase","url":"api/GameConfigAssetBase#ObserveCloudName","content":"&lt;/&gt; GameConfigAssetBase:ObserveCloudName() → Observable&lt;string?&gt; Observes the cloud name. See GameConfigAssetBase.ObserveNameTranslationKey for translation keys.  "},{"title":"ObserveCloudDescription​","type":1,"pageTitle":"GameConfigAssetBase","url":"api/GameConfigAssetBase#ObserveCloudDescription","content":"&lt;/&gt; GameConfigAssetBase:ObserveCloudDescription() → Observable&lt;string?&gt; Observes the cloud name. See GameConfigAssetBase.ObserveDescriptionTranslationKey for translation keys.  "},{"title":"ObserveCloudPriceInRobux​","type":1,"pageTitle":"GameConfigAssetBase","url":"api/GameConfigAssetBase#ObserveCloudPriceInRobux","content":"&lt;/&gt; GameConfigAssetBase:ObserveCloudPriceInRobux() → Observable&lt;number?&gt; Observes the cost in Robux.  "},{"title":"ObserveCloudIconImageAssetId​","type":1,"pageTitle":"GameConfigAssetBase","url":"api/GameConfigAssetBase#ObserveCloudIconImageAssetId","content":"&lt;/&gt; GameConfigAssetBase:ObserveCloudIconImageAssetId() → Observable&lt;number?&gt;  "},{"title":"GameConfigAssetTypes","type":0,"sectionRef":"#","url":"api/GameConfigAssetTypes","content":"On this page GameConfigAssetTypes","keywords":""},{"title":"GameConfigAssetConstants","type":0,"sectionRef":"#","url":"api/GameConfigAssetConstants","content":"On this page GameConfigAssetConstants","keywords":""},{"title":"GameConfigAssetTypeUtils","type":0,"sectionRef":"#","url":"api/GameConfigAssetTypeUtils","content":"On this page GameConfigAssetTypeUtils","keywords":""},{"title":"GameConfigAssetUtils","type":0,"sectionRef":"#","url":"api/GameConfigAssetUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"GameConfigAssetUtils","url":"api/GameConfigAssetUtils#functions","content":" "},{"title":"create​","type":1,"pageTitle":"GameConfigAssetUtils","url":"api/GameConfigAssetUtils#create","content":"&lt;/&gt; GameConfigAssetUtils.create( binder: Binder&lt;GameConfigAssetBase&gt;, assetType: GameConfigAssetType, assetKey: string, assetId: number ) → Instance  Creates a new game configuration "},{"title":"GameConfigBindersClient","type":0,"sectionRef":"#","url":"api/GameConfigBindersClient","content":"On this page GameConfigBindersClient","keywords":""},{"title":"GameConfigBase","type":0,"sectionRef":"#","url":"api/GameConfigBase","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"GameConfigBase","url":"api/GameConfigBase#functions","content":" "},{"title":"new​","type":1,"pageTitle":"GameConfigBase","url":"api/GameConfigBase#new","content":"&lt;/&gt; GameConfigBase.new(folder: Instance ) → GameConfigBase Constructs a new game config.  "},{"title":"GetFolder​","type":1,"pageTitle":"GameConfigBase","url":"api/GameConfigBase#GetFolder","content":"&lt;/&gt; GameConfigBase:GetFolder() → Instance  Gets the current folder  "},{"title":"GetAssetsOfType​","type":1,"pageTitle":"GameConfigBase","url":"api/GameConfigBase#GetAssetsOfType","content":"&lt;/&gt; GameConfigBase:GetAssetsOfType(assetType: string) → {GameConfigAssetBase} Returns an array of all the assets of that type underneath this config  "},{"title":"GetAssetsOfTypeAndKey​","type":1,"pageTitle":"GameConfigBase","url":"api/GameConfigBase#GetAssetsOfTypeAndKey","content":"&lt;/&gt; GameConfigBase:GetAssetsOfTypeAndKey( assetType: string, assetKey: string ) → {GameConfigAssetBase} Returns an array of all the assets of that type underneath this config  "},{"title":"GetAssetsOfTypeAndId​","type":1,"pageTitle":"GameConfigBase","url":"api/GameConfigBase#GetAssetsOfTypeAndId","content":"&lt;/&gt; GameConfigBase:GetAssetsOfTypeAndId( assetType: string, assetId: number ) → {GameConfigAssetBase} Returns an array of all the assets of that type underneath this config  "},{"title":"ObserveAssetByTypeAndKeyBrio​","type":1,"pageTitle":"GameConfigBase","url":"api/GameConfigBase#ObserveAssetByTypeAndKeyBrio","content":"&lt;/&gt; GameConfigBase:ObserveAssetByTypeAndKeyBrio( assetType: string, assetKey: string ) → Observable&lt;Brio&lt;GameConfigAssetBase&gt;&gt; Returns an observable matching these types and the key  "},{"title":"ObserveAssetByTypeAndIdBrio​","type":1,"pageTitle":"GameConfigBase","url":"api/GameConfigBase#ObserveAssetByTypeAndIdBrio","content":"&lt;/&gt; GameConfigBase:ObserveAssetByTypeAndIdBrio( assetType: string, assetId: number ) → Observable&lt;Brio&lt;GameConfigAssetBase&gt;&gt; Returns an observable matching these types and the id  "},{"title":"ObserveAssetByIdBrio​","type":1,"pageTitle":"GameConfigBase","url":"api/GameConfigBase#ObserveAssetByIdBrio","content":"&lt;/&gt; GameConfigBase:ObserveAssetByIdBrio(assetId: number) → Observable&lt;Brio&lt;GameConfigAssetBase&gt;&gt; Observes all matching assets of this id  "},{"title":"ObserveAssetByKeyBrio​","type":1,"pageTitle":"GameConfigBase","url":"api/GameConfigBase#ObserveAssetByKeyBrio","content":"&lt;/&gt; GameConfigBase:ObserveAssetByKeyBrio(assetKey: string) → Observable&lt;Brio&lt;GameConfigAssetBase&gt;&gt; Observes all matching assets of this key  "},{"title":"ObserveAssetByTypeBrio​","type":1,"pageTitle":"GameConfigBase","url":"api/GameConfigBase#ObserveAssetByTypeBrio","content":"&lt;/&gt; GameConfigBase:ObserveAssetByTypeBrio(assetType: string) → Observable&lt;Brio&lt;GameConfigAssetBase&gt;&gt; Observes all matching assets of this type  "},{"title":"InitObservation​","type":1,"pageTitle":"GameConfigBase","url":"api/GameConfigBase#InitObservation","content":"&lt;/&gt; GameConfigBase:InitObservation() → () Initializes the observation. Should be called by the class inheriting this object.  "},{"title":"ObserveGameId​","type":1,"pageTitle":"GameConfigBase","url":"api/GameConfigBase#ObserveGameId","content":"&lt;/&gt; GameConfigBase:ObserveGameId() → Observable&lt;number&gt; Returns the game id for this profile.  "},{"title":"GetGameId​","type":1,"pageTitle":"GameConfigBase","url":"api/GameConfigBase#GetGameId","content":"&lt;/&gt; GameConfigBase:GetGameId() → number Returns the game id  "},{"title":"GetConfigName​","type":1,"pageTitle":"GameConfigBase","url":"api/GameConfigBase#GetConfigName","content":"&lt;/&gt; GameConfigBase:GetConfigName() → string Returns this configuration's name  "},{"title":"ObserveConfigName​","type":1,"pageTitle":"GameConfigBase","url":"api/GameConfigBase#ObserveConfigName","content":"&lt;/&gt; GameConfigBase:ObserveConfigName() → Observable&lt;string&gt; Observes this configs name "},{"title":"GameConfigBindersServer","type":0,"sectionRef":"#","url":"api/GameConfigBindersServer","content":"On this page GameConfigBindersServer","keywords":""},{"title":"GameConfigClient","type":0,"sectionRef":"#","url":"api/GameConfigClient","content":"On this page GameConfigClient This item only works when running on the client. Client See GameConfigBase for API and GameConfigService for usage.","keywords":""},{"title":"GameConfigCmdrUtils","type":0,"sectionRef":"#","url":"api/GameConfigCmdrUtils","content":"On this page GameConfigCmdrUtils","keywords":""},{"title":"GameConfigCommandService","type":0,"sectionRef":"#","url":"api/GameConfigCommandService","content":"On this page GameConfigCommandService","keywords":""},{"title":"GameConfigCommandServiceClient","type":0,"sectionRef":"#","url":"api/GameConfigCommandServiceClient","content":"On this page GameConfigCommandServiceClient","keywords":""},{"title":"GameConfigConstants","type":0,"sectionRef":"#","url":"api/GameConfigConstants","content":"On this page GameConfigConstants","keywords":""},{"title":"GameConfigPicker","type":0,"sectionRef":"#","url":"api/GameConfigPicker","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"GameConfigPicker","url":"api/GameConfigPicker#functions","content":" "},{"title":"ObserveActiveAssetOfTypeBrio​","type":1,"pageTitle":"GameConfigPicker","url":"api/GameConfigPicker#ObserveActiveAssetOfTypeBrio","content":"&lt;/&gt; GameConfigPicker:ObserveActiveAssetOfTypeBrio(assetType: string) → Observable&lt;Brio&lt;GameConfigAssetBase&gt;&gt; Observes active assets of a given type. Great for badge views or other things.  "},{"title":"ObserveActiveAssetOfAssetTypeAndKeyBrio​","type":1,"pageTitle":"GameConfigPicker","url":"api/GameConfigPicker#ObserveActiveAssetOfAssetTypeAndKeyBrio","content":"&lt;/&gt; GameConfigPicker:ObserveActiveAssetOfAssetTypeAndKeyBrio( assetType: string, assetKey: string ) → Observable&lt;Brio&lt;GameConfigAssetBase&gt;&gt; Observes all active assets of a type and key. maid:GiveTask(picker:ObserveActiveAssetOfAssetTypeAndKeyBrio(GameConfigAssetType.BADGE, &quot;myBadge&quot;) :Pipe({ RxStateStackUtils.topOfStack(); }):Subscribe(function(activeBadge) print(activeBadge:GetId()) end)   "},{"title":"ObserveActiveAssetOfAssetTypeAndIdBrio​","type":1,"pageTitle":"GameConfigPicker","url":"api/GameConfigPicker#ObserveActiveAssetOfAssetTypeAndIdBrio","content":"&lt;/&gt; GameConfigPicker:ObserveActiveAssetOfAssetTypeAndIdBrio( assetType: string, assetId: number ) → Observable&lt;Brio&lt;GameConfigAssetBase&gt;&gt; Observes all active assets of a type and an id.  "},{"title":"ObserveActiveAssetOfAssetIdBrio​","type":1,"pageTitle":"GameConfigPicker","url":"api/GameConfigPicker#ObserveActiveAssetOfAssetIdBrio","content":"&lt;/&gt; GameConfigPicker:ObserveActiveAssetOfAssetIdBrio(assetId: number) → Observable&lt;Brio&lt;GameConfigAssetBase&gt;&gt; Observes all active assets of an id  "},{"title":"ObserveActiveAssetOfKeyBrio​","type":1,"pageTitle":"GameConfigPicker","url":"api/GameConfigPicker#ObserveActiveAssetOfKeyBrio","content":"&lt;/&gt; GameConfigPicker:ObserveActiveAssetOfKeyBrio(assetKey: string) → Observable&lt;Brio&lt;GameConfigAssetBase&gt;&gt; Observes all active assets of a key  "},{"title":"ObserveActiveConfigsBrio​","type":1,"pageTitle":"GameConfigPicker","url":"api/GameConfigPicker#ObserveActiveConfigsBrio","content":"&lt;/&gt; GameConfigPicker:ObserveActiveConfigsBrio() → Observable&lt;Brio&lt;GameConfigAssetBase&gt;&gt; Observes all active active assets  "},{"title":"GetActiveConfigs​","type":1,"pageTitle":"GameConfigPicker","url":"api/GameConfigPicker#GetActiveConfigs","content":"&lt;/&gt; GameConfigPicker:GetActiveConfigs() → {GameConfigAssetBase} Gets all active configs that exist  "},{"title":"FindFirstActiveAssetOfId​","type":1,"pageTitle":"GameConfigPicker","url":"api/GameConfigPicker#FindFirstActiveAssetOfId","content":"&lt;/&gt; GameConfigPicker:FindFirstActiveAssetOfId( assetType: string, assetId: number ) → GameConfigAssetBase Find the first asset of a given id  "},{"title":"FindFirstActiveAssetOfKey​","type":1,"pageTitle":"GameConfigPicker","url":"api/GameConfigPicker#FindFirstActiveAssetOfKey","content":"&lt;/&gt; GameConfigPicker:FindFirstActiveAssetOfKey( assetType: string, assetKey: string ) → GameConfigAssetBase Find the first asset of a given key  "},{"title":"GetAllActiveAssetsOfType​","type":1,"pageTitle":"GameConfigPicker","url":"api/GameConfigPicker#GetAllActiveAssetsOfType","content":"&lt;/&gt; GameConfigPicker:GetAllActiveAssetsOfType(assetType: string) → {GameConfigAssetBase} Gets all assets of a given type "},{"title":"GameConfigService","type":0,"sectionRef":"#","url":"api/GameConfigService","content":"On this page GameConfigService","keywords":""},{"title":"GameConfigServiceConstants","type":0,"sectionRef":"#","url":"api/GameConfigServiceConstants","content":"On this page GameConfigServiceConstants","keywords":""},{"title":"GameConfigServiceClient","type":0,"sectionRef":"#","url":"api/GameConfigServiceClient","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"GameConfigServiceClient","url":"api/GameConfigServiceClient#functions","content":" "},{"title":"GetConfigPicker​","type":1,"pageTitle":"GameConfigServiceClient","url":"api/GameConfigServiceClient#GetConfigPicker","content":"&lt;/&gt; GameConfigServiceClient:GetConfigPicker() → GameConfigPicker Retrieves the game configuration picker for the config service. "},{"title":"GamepadRotateModel","type":0,"sectionRef":"#","url":"api/GamepadRotateModel","content":"On this page GamepadRotateModel Rotation model for gamepad controls","keywords":""},{"title":"GameConfigUtils","type":0,"sectionRef":"#","url":"api/GameConfigUtils","content":"On this page GameConfigUtils","keywords":""},{"title":"GameProductBindersClient","type":0,"sectionRef":"#","url":"api/GameProductBindersClient","content":"On this page GameProductBindersClient","keywords":""},{"title":"GameProductBindersServer","type":0,"sectionRef":"#","url":"api/GameProductBindersServer","content":"On this page GameProductBindersServer","keywords":""},{"title":"GameProductService","type":0,"sectionRef":"#","url":"api/GameProductService","content":"On this page GameProductService","keywords":""},{"title":"GameProductServiceBase","type":0,"sectionRef":"#","url":"api/GameProductServiceBase","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"GameProductServiceBase","url":"api/GameProductServiceBase#functions","content":" "},{"title":"ObserveLocalPlayerOwnsPass​","type":1,"pageTitle":"GameProductServiceBase","url":"api/GameProductServiceBase#ObserveLocalPlayerOwnsPass","content":"&lt;/&gt; GameProductServiceBase:ObserveLocalPlayerOwnsPass(passIdOrKey: string | number) → Observable&lt;boolean&gt; Observes whether the local player owns the pass or not "},{"title":"GameProductServiceClient","type":0,"sectionRef":"#","url":"api/GameProductServiceClient","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"GameProductServiceClient","url":"api/GameProductServiceClient#functions","content":" "},{"title":"PromiseLocalPlayerOwnsPass​","type":1,"pageTitle":"GameProductServiceClient","url":"api/GameProductServiceClient#PromiseLocalPlayerOwnsPass","content":"&lt;/&gt; GameProductServiceClient:PromiseLocalPlayerOwnsPass(passIdOrKey: string | number) → Promise&lt;boolean&gt; Promises whether the local player owns the pass or not "},{"title":"GameProductServiceUtilsClient","type":0,"sectionRef":"#","url":"api/GameProductServiceUtilsClient","content":"On this page GameProductServiceUtilsClient","keywords":""},{"title":"GameScalingUtils","type":0,"sectionRef":"#","url":"api/GameScalingUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"GameScalingUtils","url":"api/GameScalingUtils#functions","content":" "},{"title":"getUIScale​","type":1,"pageTitle":"GameScalingUtils","url":"api/GameScalingUtils#getUIScale","content":"&lt;/&gt; GameScalingUtils.getUIScale(screenAbsoluteSize: Vector2 ) → number Given an screenAbsoluteSize, get a good UI scale to use for fixed offset assuming general UI scales built for 720p monitors.  "},{"title":"observeUIScale​","type":1,"pageTitle":"GameScalingUtils","url":"api/GameScalingUtils#observeUIScale","content":"&lt;/&gt; GameScalingUtils.observeUIScale(screenGui: ScreenGui ) → Observable&lt;number&gt; Observes a smoothed out UI scale for a given screenGui  "},{"title":"getDialogPadding​","type":1,"pageTitle":"GameScalingUtils","url":"api/GameScalingUtils#getDialogPadding","content":"&lt;/&gt; GameScalingUtils.getDialogPadding(screenAbsoluteSize: Vector2 ) → number Computes a reasonable dialog padding for a given absolute screen size "},{"title":"GenerateWithMixin","type":0,"sectionRef":"#","url":"api/GenerateWithMixin","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"GenerateWithMixin","url":"api/GenerateWithMixin#functions","content":" "},{"title":"Add​","type":1,"pageTitle":"GenerateWithMixin","url":"api/GenerateWithMixin#Add","content":"&lt;/&gt; GenerateWithMixin:Add( class: table, staticResources: table-- These resources are added to the class automatically ) → () Adds the GenerateWith API to the class "},{"title":"GameVersionUtils","type":0,"sectionRef":"#","url":"api/GameVersionUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"GameVersionUtils","url":"api/GameVersionUtils#functions","content":" "},{"title":"getBuild​","type":1,"pageTitle":"GameVersionUtils","url":"api/GameVersionUtils#getBuild","content":"&lt;/&gt; GameVersionUtils.getBuild() → string Gets the game build  "},{"title":"getBuildWithServerType​","type":1,"pageTitle":"GameVersionUtils","url":"api/GameVersionUtils#getBuildWithServerType","content":"&lt;/&gt; GameVersionUtils.getBuildWithServerType() → string Gets the game build with a server type specified for debugging  "},{"title":"getServerType​","type":1,"pageTitle":"GameVersionUtils","url":"api/GameVersionUtils#getServerType","content":"&lt;/&gt; GameVersionUtils.getServerType() → string Gets a string label for the current server type "},{"title":"getGroundPlane","type":0,"sectionRef":"#","url":"api/getGroundPlane","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"getGroundPlane","url":"api/getGroundPlane#functions","content":" "},{"title":"getGroundPlane​","type":1,"pageTitle":"getGroundPlane","url":"api/getGroundPlane#getGroundPlane","content":"&lt;/&gt; getGroundPlane.getGroundPlane( basis: Vector3 , radius: number, length: number, sampleCount: number, ignoreFunc: (Instance ) → boolean ) → ( Vector3 ,-- position Vector3 -- normal ) Uses -y as the direction Searchs for a groundPlane given a basis. Useful for planting a object in 3D space on terrain. warning ignoreFunc REALLY SHOULD NOT YIELD "},{"title":"GenericScreenGuiProvider","type":0,"sectionRef":"#","url":"api/GenericScreenGuiProvider","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"GenericScreenGuiProvider","url":"api/GenericScreenGuiProvider#functions","content":" "},{"title":"new​","type":1,"pageTitle":"GenericScreenGuiProvider","url":"api/GenericScreenGuiProvider#new","content":"&lt;/&gt; GenericScreenGuiProvider.new(orders: {[string]: number}) → GenericScreenGuiProvider Constructs a new screen gui provider.  "},{"title":"ObserveScreenGui​","type":1,"pageTitle":"GenericScreenGuiProvider","url":"api/GenericScreenGuiProvider#ObserveScreenGui","content":"&lt;/&gt; GenericScreenGuiProvider:ObserveScreenGui(orderName: string) → Observable&lt;Instance &gt; Returns a blend ScreenGui.  "},{"title":"Get​","type":1,"pageTitle":"GenericScreenGuiProvider","url":"api/GenericScreenGuiProvider#Get","content":"&lt;/&gt; GenericScreenGuiProvider:Get( orderName: string-- Order name of display order ) → ScreenGui  Returns a new ScreenGui at DisplayOrder specified  "},{"title":"GetDisplayOrder​","type":1,"pageTitle":"GenericScreenGuiProvider","url":"api/GenericScreenGuiProvider#GetDisplayOrder","content":"&lt;/&gt; GenericScreenGuiProvider:GetDisplayOrder( orderName: string-- Order name of display order ) → number Retrieve the display order for a given order.  "},{"title":"SetupMockParent​","type":1,"pageTitle":"GenericScreenGuiProvider","url":"api/GenericScreenGuiProvider#SetupMockParent","content":"&lt;/&gt; GenericScreenGuiProvider:SetupMockParent(target: GuiBase ) → function-- Cleanup function to reset mock parent Sets up a mock parent for the given target during test mode. "},{"title":"getMechanismParts","type":0,"sectionRef":"#","url":"api/getMechanismParts","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"getMechanismParts","url":"api/getMechanismParts#functions","content":" "},{"title":"getMechanismParts​","type":1,"pageTitle":"getMechanismParts","url":"api/getMechanismParts#getMechanismParts","content":"&lt;/&gt; getMechanismParts.getMechanismParts(originParts: {BasePart }) → {BasePart } Gets all parts in a mechanisms. A mechanism in Roblox is anything connected by joints, constraints, and are all owned by network ownership. info Calling this class can be quite expensive. print(getMechanismParts({ workspace.Part })) --&gt; &quot;Part&quot;, &quot;Blah&quot; See: https://devforum.roblox.com/t/getting-all-parts-in-a-mechanism-one-part-in-each-assembly/101344/4 "},{"title":"GetPercentExposedUtils","type":0,"sectionRef":"#","url":"api/GetPercentExposedUtils","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"GetPercentExposedUtils","url":"api/GetPercentExposedUtils#properties","content":" "},{"title":"RAY_COUNT​","type":1,"pageTitle":"GetPercentExposedUtils","url":"api/GetPercentExposedUtils#RAY_COUNT","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; GetPercentExposedUtils.RAY_COUNT: number Number of rays to use when searching "},{"title":"Functions​","type":1,"pageTitle":"GetPercentExposedUtils","url":"api/GetPercentExposedUtils#functions","content":" "},{"title":"search​","type":1,"pageTitle":"GetPercentExposedUtils","url":"api/GetPercentExposedUtils#search","content":"&lt;/&gt; GetPercentExposedUtils.search( point: Vector3 ,-- Point to search radius: number, raycaster: Raycaster? ) → {[BasePart ]: number}-- A table mapping parts to to percent exposure Searches for percent exposure of all parts given. "},{"title":"GetRemoteEvent","type":0,"sectionRef":"#","url":"api/GetRemoteEvent","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"GetRemoteEvent","url":"api/GetRemoteEvent#functions","content":" "},{"title":"GetRemoteEvent​","type":1,"pageTitle":"GetRemoteEvent","url":"api/GetRemoteEvent#GetRemoteEvent","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; GetRemoteEvent.GetRemoteEvent(name: string) → RemoteEvent  Retrieves a global remote event from the store. On the server, it constructs a new one, and on the client, it waits for it to exist. tip Consider using PromiseGetRemoteEvent for a non-yielding version -- server.lua local GetRemoteEvent = require(&quot;GetRemoteEvent&quot;) local remoteEvent = GetRemoteEvent(&quot;testing&quot;) remoteEvent.OnServerEvent:Connect(print) -- client.lua local GetRemoteEvent = require(&quot;GetRemoteEvent&quot;) local remoteEvent = GetRemoteEvent(&quot;testing&quot;) remoteEvent:FireServer(&quot;Hello&quot;) --&gt; Hello (on the server) info If the game is not running, then a mock remote event will be created for use in testing. "},{"title":"GetRemoteFunction","type":0,"sectionRef":"#","url":"api/GetRemoteFunction","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"GetRemoteFunction","url":"api/GetRemoteFunction#functions","content":" "},{"title":"GetRemoteFunction​","type":1,"pageTitle":"GetRemoteFunction","url":"api/GetRemoteFunction#GetRemoteFunction","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; GetRemoteFunction.GetRemoteFunction(name: string) → RemoteFunction  Retrieves a global remote function from the store. On the server, it constructs a new one, and on the client, it waits for it to exist. tip Consider using PromiseGetRemoteFunction for a non-yielding version -- server.lua local GetRemoteFunction = require(&quot;GetRemoteFunction&quot;) local remoteFunction = GetRemoteFunction(&quot;testing&quot;) remoteFunction.OnServerInvoke = function(_player, text) return &quot;HI &quot; .. tostring(text) end -- client.lua local GetRemoteFunction = require(&quot;GetRemoteFunction&quot;) local remoteFunction = GetRemoteFunction(&quot;testing&quot;) print(remoteFunction:InvokeServer(&quot;Bob&quot;)) --&gt; HI Bob info If the game is not running, then a mock remote event will be created for use in testing. "},{"title":"getRotationInXZPlane","type":0,"sectionRef":"#","url":"api/getRotationInXZPlane","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"getRotationInXZPlane","url":"api/getRotationInXZPlane#functions","content":" "},{"title":"getRotationInXZPlane​","type":1,"pageTitle":"getRotationInXZPlane","url":"api/getRotationInXZPlane#getRotationInXZPlane","content":"&lt;/&gt; getRotationInXZPlane.getRotationInXZPlane(cframe: CFrame ) → CFrame -- The CFrame in the XZ plane Computes the rotation in the XZ plane relative to the origin. tip This function can be used to &quot;flatten&quot; a rotation so we just get the XZ rotation, which is the rotation you would see if we are looking directly top-down on the object. "},{"title":"GripPointer","type":0,"sectionRef":"#","url":"api/GripPointer","content":"On this page GripPointer This item only works when running on the client. Client Simple rig component to point at attachments given","keywords":""},{"title":"GroupInfoUtils","type":0,"sectionRef":"#","url":"api/GroupInfoUtils","content":"On this page GroupInfoUtils This item is only intended to be used by the module's authors. Private Nevermore loader utility library","keywords":""},{"title":"GroupPermissionProvider","type":0,"sectionRef":"#","url":"api/GroupPermissionProvider","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"GroupPermissionProvider","url":"api/GroupPermissionProvider#functions","content":" "},{"title":"new​","type":1,"pageTitle":"GroupPermissionProvider","url":"api/GroupPermissionProvider#new","content":"&lt;/&gt; GroupPermissionProvider.new(config: table) → GroupPermissionProvider   "},{"title":"Start​","type":1,"pageTitle":"GroupPermissionProvider","url":"api/GroupPermissionProvider#Start","content":"&lt;/&gt; GroupPermissionProvider:Start() → () Starts the permission provider. Should be done via ServiceBag.  "},{"title":"PromiseIsCreator​","type":1,"pageTitle":"GroupPermissionProvider","url":"api/GroupPermissionProvider#PromiseIsCreator","content":"&lt;/&gt; GroupPermissionProvider:PromiseIsCreator(player: Player ) → Promise&lt;boolean&gt; Returns whether the player is a creator.  "},{"title":"PromiseIsAdmin​","type":1,"pageTitle":"GroupPermissionProvider","url":"api/GroupPermissionProvider#PromiseIsAdmin","content":"&lt;/&gt; GroupPermissionProvider:PromiseIsAdmin(player: Player ) → Promise&lt;boolean&gt; Returns whether the player is an admin. "},{"title":"GroupUtils","type":0,"sectionRef":"#","url":"api/GroupUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"GroupUtils","url":"api/GroupUtils#functions","content":" "},{"title":"promiseRankInGroup​","type":1,"pageTitle":"GroupUtils","url":"api/GroupUtils#promiseRankInGroup","content":"&lt;/&gt; GroupUtils.promiseRankInGroup( player: Player , groupId: number ) → Promise&lt;number&gt;-- Generally from 0 to 255 Retrieves the rank of the player in the group.  "},{"title":"promiseRoleInGroup​","type":1,"pageTitle":"GroupUtils","url":"api/GroupUtils#promiseRoleInGroup","content":"&lt;/&gt; GroupUtils.promiseRoleInGroup( player: Player , groupId: number ) → Promise&lt;string&gt; Retrieves the role of the player in the group.  "},{"title":"promiseGroupInfo​","type":1,"pageTitle":"GroupUtils","url":"api/GroupUtils#promiseGroupInfo","content":"&lt;/&gt; GroupUtils.promiseGroupInfo(groupId: number) → Promise&lt;table&gt; Retrieves groupInfo about a group.  "},{"title":"promiseGroupRoleInfo​","type":1,"pageTitle":"GroupUtils","url":"api/GroupUtils#promiseGroupRoleInfo","content":"&lt;/&gt; GroupUtils.promiseGroupRoleInfo( groupId: number, rankId: number ) → Promise&lt;table&gt; Retrieves group role info for a given rankId "},{"title":"GuiVisibleManager","type":0,"sectionRef":"#","url":"api/GuiVisibleManager","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"GuiVisibleManager","url":"api/GuiVisibleManager#functions","content":" "},{"title":"new​","type":1,"pageTitle":"GuiVisibleManager","url":"api/GuiVisibleManager#new","content":"&lt;/&gt; GuiVisibleManager.new( promiseNewPane: Promise&lt;TPane&gt;,-- Returns a promise for a new pane. maxHideTime: number?-- Optional hide time ) → GuiVisibleManager Constructs a new GuiVisibleManager.  "},{"title":"IsVisible​","type":1,"pageTitle":"GuiVisibleManager","url":"api/GuiVisibleManager#IsVisible","content":"&lt;/&gt; GuiVisibleManager:IsVisible() → boolean Returns whether the Gui is visible.  "},{"title":"BindToBoolValue​","type":1,"pageTitle":"GuiVisibleManager","url":"api/GuiVisibleManager#BindToBoolValue","content":"&lt;/&gt; GuiVisibleManager:BindToBoolValue(boolValue: BoolValue ) → () Binds visiblity to the bool value being true. There could be other ways that the Gui is shown if this is not set.  "},{"title":"CreateShowHandle​","type":1,"pageTitle":"GuiVisibleManager","url":"api/GuiVisibleManager#CreateShowHandle","content":"&lt;/&gt; GuiVisibleManager:CreateShowHandle() → MaidTask Creates a handle that will force the gui to be rendered. Clean up the task to stop the showing. "},{"title":"GuiTriangle","type":0,"sectionRef":"#","url":"api/GuiTriangle","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"GuiTriangle","url":"api/GuiTriangle#functions","content":" "},{"title":"new​","type":1,"pageTitle":"GuiTriangle","url":"api/GuiTriangle#new","content":"&lt;/&gt; GuiTriangle.new(parent: Instance ) → GuiTriangle   "},{"title":"SetParent​","type":1,"pageTitle":"GuiTriangle","url":"api/GuiTriangle#SetParent","content":"&lt;/&gt; GuiTriangle:SetParent(parent: Instance ) → ()   "},{"title":"Show​","type":1,"pageTitle":"GuiTriangle","url":"api/GuiTriangle#Show","content":"&lt;/&gt; GuiTriangle:Show() → () Shows the triangle  "},{"title":"Set​","type":1,"pageTitle":"GuiTriangle","url":"api/GuiTriangle#Set","content":"&lt;/&gt; GuiTriangle:Set( a: Vector2 , b: Vector2 , c: Vector2 ) → GuiTriangle-- self Sets the points to render  "},{"title":"Hide​","type":1,"pageTitle":"GuiTriangle","url":"api/GuiTriangle#Hide","content":"&lt;/&gt; GuiTriangle:Hide() → () Hides the triangle  "},{"title":"SetA​","type":1,"pageTitle":"GuiTriangle","url":"api/GuiTriangle#SetA","content":"&lt;/&gt; GuiTriangle:SetA(a: Vector2 ) → GuiTriangle-- self Sets the point  "},{"title":"SetB​","type":1,"pageTitle":"GuiTriangle","url":"api/GuiTriangle#SetB","content":"&lt;/&gt; GuiTriangle:SetB(b: Vector2 ) → GuiTriangle-- self Sets the point  "},{"title":"SetC​","type":1,"pageTitle":"GuiTriangle","url":"api/GuiTriangle#SetC","content":"&lt;/&gt; GuiTriangle:SetC(c: Vector2 ) → GuiTriangle-- self Sets the point  "},{"title":"UpdateRender​","type":1,"pageTitle":"GuiTriangle","url":"api/GuiTriangle#UpdateRender","content":"&lt;/&gt; GuiTriangle:UpdateRender() → () Updates the render of the triangle.  "},{"title":"Destroy​","type":1,"pageTitle":"GuiTriangle","url":"api/GuiTriangle#Destroy","content":"&lt;/&gt; GuiTriangle:Destroy() → () Cleans up the triangle. "},{"title":"HeartbeatCamera","type":0,"sectionRef":"#","url":"api/HeartbeatCamera","content":"On this page HeartbeatCamera Update on heartbeat, must GC this camera state, unlike others. This allows for camera effects to run on heartbeat and cache information once instead of potentially going deeep into a tree and getting invoked multiple times","keywords":""},{"title":"HapticFeedbackUtils","type":0,"sectionRef":"#","url":"api/HapticFeedbackUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"HapticFeedbackUtils","url":"api/HapticFeedbackUtils#functions","content":" "},{"title":"smallVibrate​","type":1,"pageTitle":"HapticFeedbackUtils","url":"api/HapticFeedbackUtils#smallVibrate","content":"&lt;/&gt; HapticFeedbackUtils.smallVibrate( userInputType: UserInputType , length: number, amplitude: number ) → () Provides a small vibration.  "},{"title":"setSmallVibration​","type":1,"pageTitle":"HapticFeedbackUtils","url":"api/HapticFeedbackUtils#setSmallVibration","content":"&lt;/&gt; HapticFeedbackUtils.setSmallVibration( userInputType: UserInputType , amplitude: number ) → boolean Sets the small vibrators on the gamepad  "},{"title":"setLargeVibration​","type":1,"pageTitle":"HapticFeedbackUtils","url":"api/HapticFeedbackUtils#setLargeVibration","content":"&lt;/&gt; HapticFeedbackUtils.setLargeVibration( userInputType: UserInputType , amplitude: number ) → boolean Sets the large vibrators on the gamepad  "},{"title":"setVibrationMotor​","type":1,"pageTitle":"HapticFeedbackUtils","url":"api/HapticFeedbackUtils#setVibrationMotor","content":"&lt;/&gt; HapticFeedbackUtils.setVibrationMotor( userInputType: UserInputType , vibrationMotor: VibrationMotor , amplitude: number, ...: number-- vibrationValues ) → boolean Sets the small vibrators on the gamepad "},{"title":"Hide","type":0,"sectionRef":"#","url":"api/Hide","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Hide","url":"api/Hide#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Hide","url":"api/Hide#new","content":"&lt;/&gt; Hide.new(adornee: Instance ) → Hide Hides the given instances  "},{"title":"Destroy​","type":1,"pageTitle":"Hide","url":"api/Hide#Destroy","content":"&lt;/&gt; Hide:Destroy() → () Cleans up the instance "},{"title":"HideBindersClient","type":0,"sectionRef":"#","url":"api/HideBindersClient","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"HideBindersClient","url":"api/HideBindersClient#properties","content":" "},{"title":"Hide​","type":1,"pageTitle":"HideBindersClient","url":"api/HideBindersClient#Hide","content":"&lt;/&gt; HideBindersClient.Hide: Binder&lt;HideClient&gt;  "},{"title":"HideBindersServer","type":0,"sectionRef":"#","url":"api/HideBindersServer","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"HideBindersServer","url":"api/HideBindersServer#properties","content":" "},{"title":"Hide​","type":1,"pageTitle":"HideBindersServer","url":"api/HideBindersServer#Hide","content":"&lt;/&gt; HideBindersServer.Hide: Binder&lt;Hide&gt;  "},{"title":"HideClient","type":0,"sectionRef":"#","url":"api/HideClient","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"HideClient","url":"api/HideClient#functions","content":" "},{"title":"new​","type":1,"pageTitle":"HideClient","url":"api/HideClient#new","content":"&lt;/&gt; HideClient.new(_adornee: Instance ) → HideClient Cleans up the instance  "},{"title":"Destroy​","type":1,"pageTitle":"HideClient","url":"api/HideClient#Destroy","content":"&lt;/&gt; HideClient:Destroy() → () Cleans up the instance "},{"title":"HideUtils","type":0,"sectionRef":"#","url":"api/HideUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"HideUtils","url":"api/HideUtils#functions","content":" "},{"title":"isHidden​","type":1,"pageTitle":"HideUtils","url":"api/HideUtils#isHidden","content":"&lt;/&gt; HideUtils.isHidden(inst: Instance ) → boolean Returns whether the object in question is hidden. Prevents a requirement of binders being used, thus requiring a service bag. "},{"title":"HintScoringUtils","type":0,"sectionRef":"#","url":"api/HintScoringUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"HintScoringUtils","url":"api/HintScoringUtils#functions","content":" "},{"title":"getHumanoidPositionDirection​","type":1,"pageTitle":"HintScoringUtils","url":"api/HintScoringUtils#getHumanoidPositionDirection","content":"&lt;/&gt; HintScoringUtils.getHumanoidPositionDirection(humanoid: Humanoid ) → ( Vector3? ,-- Position Vector3? -- LookVector ) Gets humanoid position and direction.  "},{"title":"getAdorneeInRegionSet​","type":1,"pageTitle":"HintScoringUtils","url":"api/HintScoringUtils#getAdorneeInRegionSet","content":"&lt;/&gt; HintScoringUtils.getAdorneeInRegionSet( position: Vector3 , radius: number, ignoreList: {Instance }, getAdorneeFunction: (Instance ) → Instance? ) → {[Instance ]: true} Finds adornees in a region  "},{"title":"debugScore​","type":1,"pageTitle":"HintScoringUtils","url":"api/HintScoringUtils#debugScore","content":"&lt;/&gt; HintScoringUtils.debugScore( adornee: Instance , score: number ) → () Draws the score in debug mode  "},{"title":"raycastToAdornee​","type":1,"pageTitle":"HintScoringUtils","url":"api/HintScoringUtils#raycastToAdornee","content":"&lt;/&gt; HintScoringUtils.raycastToAdornee( raycaster: Raycaster, humanoidCenter: Vector3 , adornee: Instance , closestBoundingBoxPoint: Vector3 , extraDistance: number ) → Vector3 -- Hit position Raycasts to adornee  "},{"title":"clampToBoundingBox​","type":1,"pageTitle":"HintScoringUtils","url":"api/HintScoringUtils#clampToBoundingBox","content":"&lt;/&gt; HintScoringUtils.clampToBoundingBox( adornee: Instance , humanoidCenter: Vector3 ) → ( Vector3? ,-- clamped point Vector3? -- center of bounding box ) Clamps the humanoid center to the adornee bounding box, finding the nearest point. info We do this because we want to raycast to the closest point on the adornee, which will ensure we hit it, especially for larger adornees.  "},{"title":"scoreAdornee​","type":1,"pageTitle":"HintScoringUtils","url":"api/HintScoringUtils#scoreAdornee","content":"&lt;/&gt; HintScoringUtils.scoreAdornee( adornee: Instance , raycaster: Raycaster, humanoidCenter: Vector3 , humanoidLookVector: Vector3 , maxViewRadius: number, maxTriggerRadius: number, maxViewAngle: number, maxTriggerAngle: number, isLineOfSightRequired: boolean ) → boolean | number-- [0, 1] Scores the adornee as a target for showing as a target in terms of priority.  "},{"title":"scoreDist​","type":1,"pageTitle":"HintScoringUtils","url":"api/HintScoringUtils#scoreDist","content":"&lt;/&gt; HintScoringUtils.scoreDist( distance: number, maxViewDistance: number, maxTriggerRadius: number ) → number-- [0, 1] Scores the distance based upon a variety of mechanics  "},{"title":"scoreAngle​","type":1,"pageTitle":"HintScoringUtils","url":"api/HintScoringUtils#scoreAngle","content":"&lt;/&gt; HintScoringUtils.scoreAngle( angle: number, maxViewAngle: number, maxTriggerAngle: number ) → number-- [0, 1] Scores the angle based upon parameters "},{"title":"HttpPromise","type":0,"sectionRef":"#","url":"api/HttpPromise","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"HttpPromise","url":"api/HttpPromise#functions","content":" "},{"title":"request​","type":1,"pageTitle":"HttpPromise","url":"api/HttpPromise#request","content":"&lt;/&gt; HttpPromise.request(request: table) → Promise&lt;table&gt; Decodes JSON from the response local requestPromise = HttpPromise.request({ Headers = { [&quot;Content-Type&quot;] = &quot;application/json&quot;; }; Url = DISCORD_LOG_URL; Body = HttpService:JSONEncode(data); Method = &quot;POST&quot;; })   "},{"title":"json​","type":1,"pageTitle":"HttpPromise","url":"api/HttpPromise#json","content":"&lt;/&gt; HttpPromise.json(request: table | string) → Promise&lt;table&gt; Makes a GET JSON request and then expects JSON as a result from said request HttpPromise.json(&quot;https://quenty.org/banned/4397833/status&quot;) :Then(print)   "},{"title":"logFailedRequests​","type":1,"pageTitle":"HttpPromise","url":"api/HttpPromise#logFailedRequests","content":"&lt;/&gt; HttpPromise.logFailedRequests( ...: any-- A list of requests to retrieve. Meant to be used ) → () Logs failed requests and any errors retrieved HttpPromise.json(&quot;https://quenty.org/banned/4397833/status&quot;) :Catch(HttpPromise.logFailedRequests)   "},{"title":"decodeJson​","type":1,"pageTitle":"HttpPromise","url":"api/HttpPromise#decodeJson","content":"&lt;/&gt; HttpPromise.decodeJson(response: {Body: string}) → table Decodes JSON from the response "},{"title":"HumanoidAnimatorUtils","type":0,"sectionRef":"#","url":"api/HumanoidAnimatorUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"HumanoidAnimatorUtils","url":"api/HumanoidAnimatorUtils#functions","content":" "},{"title":"getOrCreateAnimator​","type":1,"pageTitle":"HumanoidAnimatorUtils","url":"api/HumanoidAnimatorUtils#getOrCreateAnimator","content":"&lt;/&gt; HumanoidAnimatorUtils.getOrCreateAnimator(humanoid: Humanoid ) → Animator  Gets a humanoid animator for a given humanoid warning There is undefined behavior when using this on the client when the server does not already have an animator. Doing so may break replication. I'm not sure.  "},{"title":"stopAnimations​","type":1,"pageTitle":"HumanoidAnimatorUtils","url":"api/HumanoidAnimatorUtils#stopAnimations","content":"&lt;/&gt; HumanoidAnimatorUtils.stopAnimations( humanoid: Humanoid , fadeTime: number?-- Optional fade time to stop animations. Defaults to 0.1. ) → () Stops all animations from playing.  "},{"title":"isPlayingAnimationTrack​","type":1,"pageTitle":"HumanoidAnimatorUtils","url":"api/HumanoidAnimatorUtils#isPlayingAnimationTrack","content":"&lt;/&gt; HumanoidAnimatorUtils.isPlayingAnimationTrack( humanoid: Humanoid , track: AnimationTrack ) → boolean Returns whether a track is being played. "},{"title":"HumanoidDescriptionUtils","type":0,"sectionRef":"#","url":"api/HumanoidDescriptionUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"HumanoidDescriptionUtils","url":"api/HumanoidDescriptionUtils#functions","content":" "},{"title":"promiseApplyDescription​","type":1,"pageTitle":"HumanoidDescriptionUtils","url":"api/HumanoidDescriptionUtils#promiseApplyDescription","content":"&lt;/&gt; HumanoidDescriptionUtils.promiseApplyDescription( humanoid: Humanoid , description: HumanoidDescription ) → Promise Promises to apply a humaoid descrition  "},{"title":"promiseApplyFromUserName​","type":1,"pageTitle":"HumanoidDescriptionUtils","url":"api/HumanoidDescriptionUtils#promiseApplyFromUserName","content":"&lt;/&gt; HumanoidDescriptionUtils.promiseApplyFromUserName( humanoid: Humanoid , userName: string ) → Promise Applies humanoid description from userName.  "},{"title":"promiseFromUserName​","type":1,"pageTitle":"HumanoidDescriptionUtils","url":"api/HumanoidDescriptionUtils#promiseFromUserName","content":"&lt;/&gt; HumanoidDescriptionUtils.promiseFromUserName(userName: string) → Promise&lt;HumanoidDescription &gt; Retrieves a humanoid description from username  "},{"title":"promiseFromUserId​","type":1,"pageTitle":"HumanoidDescriptionUtils","url":"api/HumanoidDescriptionUtils#promiseFromUserId","content":"&lt;/&gt; HumanoidDescriptionUtils.promiseFromUserId(userId: number) → Promise&lt;HumanoidDescription &gt; Retrieves a humanoid description from userId  "},{"title":"getAssetIdsFromString​","type":1,"pageTitle":"HumanoidDescriptionUtils","url":"api/HumanoidDescriptionUtils#getAssetIdsFromString","content":"&lt;/&gt; HumanoidDescriptionUtils.getAssetIdsFromString( assetString: string-- A comma seperated value of asset ids which should be numbers ) → {number} Retrieves the assetIds from an assetId, in the format that is known to us.  "},{"title":"getAssetPromisesFromString​","type":1,"pageTitle":"HumanoidDescriptionUtils","url":"api/HumanoidDescriptionUtils#getAssetPromisesFromString","content":"&lt;/&gt; HumanoidDescriptionUtils.getAssetPromisesFromString( assetString: string-- A comma seperated value of asset ids which should be numbers ) → {Promise&lt;Instance &gt;} From stuff like HumanoidDescription.HatAccessory. "},{"title":"HumanoidKillerUtils","type":0,"sectionRef":"#","url":"api/HumanoidKillerUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"HumanoidKillerUtils","url":"api/HumanoidKillerUtils#functions","content":" "},{"title":"untagKiller​","type":1,"pageTitle":"HumanoidKillerUtils","url":"api/HumanoidKillerUtils#untagKiller","content":"&lt;/&gt; HumanoidKillerUtils.untagKiller(humanoid: Humanoid ) → () Removes all killer tags  "},{"title":"tagKiller​","type":1,"pageTitle":"HumanoidKillerUtils","url":"api/HumanoidKillerUtils#tagKiller","content":"&lt;/&gt; HumanoidKillerUtils.tagKiller( humanoid: Humanoid , attacker: Player ) → () Tags the killer with a source. tip Be sure to tag the killer before applying damage.  "},{"title":"getKillerOfHumanoid​","type":1,"pageTitle":"HumanoidKillerUtils","url":"api/HumanoidKillerUtils#getKillerOfHumanoid","content":"&lt;/&gt; HumanoidKillerUtils.getKillerOfHumanoid(humanoid: Humanoid ) → Player?  Killer must be a player "},{"title":"HumanoidMoveDirectionUtils","type":0,"sectionRef":"#","url":"api/HumanoidMoveDirectionUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"HumanoidMoveDirectionUtils","url":"api/HumanoidMoveDirectionUtils#functions","content":" "},{"title":"getRelativeMoveDirection​","type":1,"pageTitle":"HumanoidMoveDirectionUtils","url":"api/HumanoidMoveDirectionUtils#getRelativeMoveDirection","content":"&lt;/&gt; HumanoidMoveDirectionUtils.getRelativeMoveDirection( cameraCFrame: CFrame , humanoid: Humanoid ) → Vector3  Gets the relative move direction from the camera and the humanoid. This is absolutely a hack. "},{"title":"HumanoidSpeedBindersClient","type":0,"sectionRef":"#","url":"api/HumanoidSpeedBindersClient","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"HumanoidSpeedBindersClient","url":"api/HumanoidSpeedBindersClient#properties","content":" "},{"title":"HumanoidSpeed​","type":1,"pageTitle":"HumanoidSpeedBindersClient","url":"api/HumanoidSpeedBindersClient#HumanoidSpeed","content":"&lt;/&gt; HumanoidSpeedBindersClient.HumanoidSpeed: Binder&lt;HumanoidSpeedClient&gt;  "},{"title":"HumanoidSpeed","type":0,"sectionRef":"#","url":"api/HumanoidSpeed","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"HumanoidSpeed","url":"api/HumanoidSpeed#functions","content":" "},{"title":"new​","type":1,"pageTitle":"HumanoidSpeed","url":"api/HumanoidSpeed#new","content":"&lt;/&gt; HumanoidSpeed.new(humanoid: Humanoid ) → HumanoidSpeed Constructs a new HumanoidSpeed  "},{"title":"SetDefaultSpeed​","type":1,"pageTitle":"HumanoidSpeed","url":"api/HumanoidSpeed#SetDefaultSpeed","content":"&lt;/&gt; HumanoidSpeed:SetDefaultSpeed(defaultSpeed: number) → () Sets the default speed for the humanoid  "},{"title":"ApplySpeedMultiplier​","type":1,"pageTitle":"HumanoidSpeed","url":"api/HumanoidSpeed#ApplySpeedMultiplier","content":"&lt;/&gt; HumanoidSpeed:ApplySpeedMultiplier(multiplier: number) → function-- Cleanup function Applies a speed multipler to the player's speed  "},{"title":"ApplySpeedAdditive​","type":1,"pageTitle":"HumanoidSpeed","url":"api/HumanoidSpeed#ApplySpeedAdditive","content":"&lt;/&gt; HumanoidSpeed:ApplySpeedAdditive(amount: number) → function-- Cleanup function Applies a speed additive to the player's speed "},{"title":"HumanoidSpeedBindersServer","type":0,"sectionRef":"#","url":"api/HumanoidSpeedBindersServer","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"HumanoidSpeedBindersServer","url":"api/HumanoidSpeedBindersServer#properties","content":" "},{"title":"HumanoidSpeed​","type":1,"pageTitle":"HumanoidSpeedBindersServer","url":"api/HumanoidSpeedBindersServer#HumanoidSpeed","content":"&lt;/&gt; HumanoidSpeedBindersServer.HumanoidSpeed: Binder&lt;HumanoidSpeed&gt;  "},{"title":"HumanoidSpeedClient","type":0,"sectionRef":"#","url":"api/HumanoidSpeedClient","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"HumanoidSpeedClient","url":"api/HumanoidSpeedClient#functions","content":" "},{"title":"PromiseSpeedValue​","type":1,"pageTitle":"HumanoidSpeedClient","url":"api/HumanoidSpeedClient#PromiseSpeedValue","content":"&lt;/&gt; HumanoidSpeedClient:PromiseSpeedValue() → Promise&lt;Instance &gt; Retrieves a promise that resolves speed value  "},{"title":"GetPlayer​","type":1,"pageTitle":"HumanoidSpeedClient","url":"api/HumanoidSpeedClient#GetPlayer","content":"&lt;/&gt; HumanoidSpeedClient:GetPlayer() → Player?  Gets the player for this humanoid "},{"title":"HumanoidSpeedConstants","type":0,"sectionRef":"#","url":"api/HumanoidSpeedConstants","content":"On this page HumanoidSpeedConstants","keywords":""},{"title":"HumanoidTeleportUtils","type":0,"sectionRef":"#","url":"api/HumanoidTeleportUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"HumanoidTeleportUtils","url":"api/HumanoidTeleportUtils#functions","content":" "},{"title":"identifySafePosition​","type":1,"pageTitle":"HumanoidTeleportUtils","url":"api/HumanoidTeleportUtils#identifySafePosition","content":"&lt;/&gt; HumanoidTeleportUtils.identifySafePosition( position: Position, raycaster: Raycaster?-- Optional raycaster ) → ( boolean,-- True if safe Vector3? -- Position if we can hit it ) Finds a safe position to teleport a humanoid. This searches some amount around the position to try to ensure a free space for the humanoid.  "},{"title":"teleportRootPart​","type":1,"pageTitle":"HumanoidTeleportUtils","url":"api/HumanoidTeleportUtils#teleportRootPart","content":"&lt;/&gt; HumanoidTeleportUtils.teleportRootPart( humanoid: Humanoid , rootPart: BasePart , position: Vector3 ) → () Teleports a humanoid to a given location. info You should call this on the machine that has network ownership. For characters owned by a player, this is generally the player who's character it is. For NPCs, this should generally be the server. "},{"title":"HumanoidTracker","type":0,"sectionRef":"#","url":"api/HumanoidTracker","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"HumanoidTracker","url":"api/HumanoidTracker#properties","content":" "},{"title":"Humanoid​","type":1,"pageTitle":"HumanoidTracker","url":"api/HumanoidTracker#Humanoid","content":"&lt;/&gt; HumanoidTracker.Humanoid: ValueObject&lt;Humanoid &gt; Current humanoid  "},{"title":"AliveHumanoid​","type":1,"pageTitle":"HumanoidTracker","url":"api/HumanoidTracker#AliveHumanoid","content":"&lt;/&gt; HumanoidTracker.AliveHumanoid: ValueObject&lt;Humanoid &gt; Current humanoid which is alive  "},{"title":"HumanoidDied​","type":1,"pageTitle":"HumanoidTracker","url":"api/HumanoidTracker#HumanoidDied","content":"&lt;/&gt; HumanoidTracker.HumanoidDied: Signal&lt;Humanoid &gt; Fires when the humanoid dies "},{"title":"Functions​","type":1,"pageTitle":"HumanoidTracker","url":"api/HumanoidTracker#functions","content":" "},{"title":"new​","type":1,"pageTitle":"HumanoidTracker","url":"api/HumanoidTracker#new","content":"&lt;/&gt; HumanoidTracker.new(player: Player ) → HumanoidTracker Tracks the player's current humanoid tip Be sure to clean up the tracker once you're done!  "},{"title":"PromiseNextHumanoid​","type":1,"pageTitle":"HumanoidTracker","url":"api/HumanoidTracker#PromiseNextHumanoid","content":"&lt;/&gt; HumanoidTracker:PromiseNextHumanoid() → Promise&lt;Humanoid &gt; Returns a promise that resolves when the next humanoid is found. If a humanoid is already there, then returns a resolved promise with that humanoid.  "},{"title":"Destroy​","type":1,"pageTitle":"HumanoidTracker","url":"api/HumanoidTracker#Destroy","content":"&lt;/&gt; HumanoidTracker:Destroy() → () Cleans up the humanoid tracker and sets the metatable to be nil. "},{"title":"HumanoidTrackerService","type":0,"sectionRef":"#","url":"api/HumanoidTrackerService","content":"On this page HumanoidTrackerService","keywords":""},{"title":"HumanoidUtils","type":0,"sectionRef":"#","url":"api/HumanoidUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"HumanoidUtils","url":"api/HumanoidUtils#functions","content":" "},{"title":"getHumanoid​","type":1,"pageTitle":"HumanoidUtils","url":"api/HumanoidUtils#getHumanoid","content":"&lt;/&gt; HumanoidUtils.getHumanoid( descendant: Instance -- Child of a humanoid model, like a limb ) → Humanoid?  Retrieves a humanoid from a descendant.  "},{"title":"forceUnseatHumanoid​","type":1,"pageTitle":"HumanoidUtils","url":"api/HumanoidUtils#forceUnseatHumanoid","content":"&lt;/&gt; HumanoidUtils.forceUnseatHumanoid(humanoid: Humanoid ) → () Forcefully unseats the humanoid. Useful when teleporting humanoid. Definitely a non-intuitive operation to do safely. "},{"title":"IdleServiceClient","type":0,"sectionRef":"#","url":"api/IdleServiceClient","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"IdleServiceClient","url":"api/IdleServiceClient#functions","content":" "},{"title":"Init​","type":1,"pageTitle":"IdleServiceClient","url":"api/IdleServiceClient#Init","content":"&lt;/&gt; IdleServiceClient:Init(serviceBag: ServiceBag) → () Initializes the idle service on the client. Should be done via ServiceBag.  "},{"title":"Start​","type":1,"pageTitle":"IdleServiceClient","url":"api/IdleServiceClient#Start","content":"&lt;/&gt; IdleServiceClient:Start() → () Starts idle service on the client. Should be done via ServiceBag.  "},{"title":"IsHumanoidIdle​","type":1,"pageTitle":"IdleServiceClient","url":"api/IdleServiceClient#IsHumanoidIdle","content":"&lt;/&gt; IdleServiceClient:IsHumanoidIdle() → boolean Returns whether the humanoid is idle.  "},{"title":"DoShowIdleUI​","type":1,"pageTitle":"IdleServiceClient","url":"api/IdleServiceClient#DoShowIdleUI","content":"&lt;/&gt; IdleServiceClient:DoShowIdleUI() → boolean Returns whether UI should be shown (if the humanoid is idle)  "},{"title":"ObserveShowIdleUI​","type":1,"pageTitle":"IdleServiceClient","url":"api/IdleServiceClient#ObserveShowIdleUI","content":"&lt;/&gt; IdleServiceClient:ObserveShowIdleUI() → Observable&lt;boolean&gt; Observes whether to show the the idle UI  "},{"title":"GetShowIdleUIBoolValue​","type":1,"pageTitle":"IdleServiceClient","url":"api/IdleServiceClient#GetShowIdleUIBoolValue","content":"&lt;/&gt; IdleServiceClient:GetShowIdleUIBoolValue() → BoolValue  Returns a show idle bool value.  "},{"title":"PushDisable​","type":1,"pageTitle":"IdleServiceClient","url":"api/IdleServiceClient#PushDisable","content":"&lt;/&gt; IdleServiceClient:PushDisable() → boolean Pushes a disabling function that disables idle UI "},{"title":"IKAimPositionPriorites","type":0,"sectionRef":"#","url":"api/IKAimPositionPriorites","content":"On this page IKAimPositionPriorites","keywords":""},{"title":"IKBindersClient","type":0,"sectionRef":"#","url":"api/IKBindersClient","content":"On this page IKBindersClient Holds binders","keywords":""},{"title":"IKBindersServer","type":0,"sectionRef":"#","url":"api/IKBindersServer","content":"On this page IKBindersServer This item only works when running on the server. Server Holds binders","keywords":""},{"title":"IKConstants","type":0,"sectionRef":"#","url":"api/IKConstants","content":"On this page IKConstants Constants for the character IK calculations","keywords":""},{"title":"IKGripBase","type":0,"sectionRef":"#","url":"api/IKGripBase","content":"On this page IKGripBase Meant to be used with a binder","keywords":""},{"title":"IKLeftGrip","type":0,"sectionRef":"#","url":"api/IKLeftGrip","content":"On this page IKLeftGrip Left grip","keywords":""},{"title":"IKGripUtils","type":0,"sectionRef":"#","url":"api/IKGripUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"IKGripUtils","url":"api/IKGripUtils#functions","content":" "},{"title":"create​","type":1,"pageTitle":"IKGripUtils","url":"api/IKGripUtils#create","content":"&lt;/&gt; IKGripUtils.create( binder: Binder, humanoid: Humanoid ) → ObjectValue  Parent to the attachment we want the humanoid to grip. -- Get the binder local leftGripAttachmentBinder = serviceBag:GetService(require(&quot;IKBindersServer&quot;)).IKLeftGrip -- Setup sample grip local attachment = Instance.new(&quot;Attachment&quot;) attachment.Parent = workspace.Terrain attachment.Name = &quot;GripTarget&quot; -- This will make the NPC try to grip this attachment local objectValue = IKGripUtils.create(leftGripAttachmentBinder, workspace.NPC.Humanoid) objectValue.Parent = attachment  "},{"title":"IKResource","type":0,"sectionRef":"#","url":"api/IKResource","content":"On this page IKResource","keywords":""},{"title":"IKResourceUtils","type":0,"sectionRef":"#","url":"api/IKResourceUtils","content":"On this page IKResourceUtils","keywords":""},{"title":"IKRig","type":0,"sectionRef":"#","url":"api/IKRig","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"IKRig","url":"api/IKRig#functions","content":" "},{"title":"GetTarget​","type":1,"pageTitle":"IKRig","url":"api/IKRig#GetTarget","content":"&lt;/&gt; IKRig:GetTarget() → Vector3?  Returns where the rig is looking at  "},{"title":"SetRigTarget​","type":1,"pageTitle":"IKRig","url":"api/IKRig#SetRigTarget","content":"&lt;/&gt; IKRig:SetRigTarget(target: Vector3? ) → () Sets the IK Rig target and replicates it to the client "},{"title":"IKRigAimerLocalPlayer","type":0,"sectionRef":"#","url":"api/IKRigAimerLocalPlayer","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"IKRigAimerLocalPlayer","url":"api/IKRigAimerLocalPlayer#functions","content":" "},{"title":"new​","type":1,"pageTitle":"IKRigAimerLocalPlayer","url":"api/IKRigAimerLocalPlayer#new","content":"&lt;/&gt; IKRigAimerLocalPlayer.new( serviceBag: ServiceBag, ikRig: IKRigClient, remoteEvent: RemoteEvent ) → IKRigAimerLocalPlayer Constructs a new IKRigAimerLocalPlayer. Should not be used directly. See IKServiceClient for the correct usage.  "},{"title":"SetLookAround​","type":1,"pageTitle":"IKRigAimerLocalPlayer","url":"api/IKRigAimerLocalPlayer#SetLookAround","content":"&lt;/&gt; IKRigAimerLocalPlayer:SetLookAround(lookAround: boolean) → () Sets whether the local player should look around automatically.  "},{"title":"SetAimPosition​","type":1,"pageTitle":"IKRigAimerLocalPlayer","url":"api/IKRigAimerLocalPlayer#SetAimPosition","content":"&lt;/&gt; IKRigAimerLocalPlayer:SetAimPosition( position: Vector3? ,-- May be nil to say to aim at nothing optionalPriority: number ) → () Sets the aim position for the local player for this frame. See IKAimPositionPriorites.  "},{"title":"GetAimDirection​","type":1,"pageTitle":"IKRigAimerLocalPlayer","url":"api/IKRigAimerLocalPlayer#GetAimDirection","content":"&lt;/&gt; IKRigAimerLocalPlayer:GetAimDirection() → Vector3?  Gets the current aim direction. "},{"title":"IKRigBase","type":0,"sectionRef":"#","url":"api/IKRigBase","content":"On this page IKRigBase","keywords":""},{"title":"IKRigClient","type":0,"sectionRef":"#","url":"api/IKRigClient","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"IKRigClient","url":"api/IKRigClient#functions","content":" "},{"title":"GetPositionOrNil​","type":1,"pageTitle":"IKRigClient","url":"api/IKRigClient#GetPositionOrNil","content":"&lt;/&gt; IKRigClient:GetPositionOrNil() → Vector3?  Retrieves where the IK rig's position is, if it exists  "},{"title":"GetLocalPlayerAimer​","type":1,"pageTitle":"IKRigClient","url":"api/IKRigClient#GetLocalPlayerAimer","content":"&lt;/&gt; IKRigClient:GetLocalPlayerAimer() → IKRigAimerLocalPlayer? Retrieves the local player aimer if it exists "},{"title":"IKRightGrip","type":0,"sectionRef":"#","url":"api/IKRightGrip","content":"On this page IKRightGrip Right grip","keywords":""},{"title":"IKRigUtils","type":0,"sectionRef":"#","url":"api/IKRigUtils","content":"On this page IKRigUtils","keywords":""},{"title":"IKService","type":0,"sectionRef":"#","url":"api/IKService","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"IKService","url":"api/IKService#functions","content":" "},{"title":"Init​","type":1,"pageTitle":"IKService","url":"api/IKService#Init","content":"&lt;/&gt; IKService:Init(serviceBag: ServiceBag) → () Initializes the IKService. Should be done via the ServiceBag. local serviceBag = require(&quot;ServiceBag&quot;).new() serviceBag:GetService(require(&quot;IKService&quot;)) serviceBag:Init() serviceBag:Start()   "},{"title":"Start​","type":1,"pageTitle":"IKService","url":"api/IKService#Start","content":"&lt;/&gt; IKService:Start() → () Starts the IKService. Should be done via the ServiceBag.  "},{"title":"GetRig​","type":1,"pageTitle":"IKService","url":"api/IKService#GetRig","content":"&lt;/&gt; IKService:GetRig(humanoid: Humanoid ) → IKRig? Retrieves an IKRig. Binds the rig if it isn't already bound.  "},{"title":"PromiseRig​","type":1,"pageTitle":"IKService","url":"api/IKService#PromiseRig","content":"&lt;/&gt; IKService:PromiseRig(humanoid: Humanoid ) → Promise&lt;IKRig&gt; Retrieves an IKRig. Binds the rig if it isn't already bound.  "},{"title":"RemoveRig​","type":1,"pageTitle":"IKService","url":"api/IKService#RemoveRig","content":"&lt;/&gt; IKService:RemoveRig(humanoid: Humanoid ) → () Unbinds the rig from the humanoid.  "},{"title":"UpdateServerRigTarget​","type":1,"pageTitle":"IKService","url":"api/IKService#UpdateServerRigTarget","content":"&lt;/&gt; IKService:UpdateServerRigTarget( humanoid: Humanoid , target: Vector3? ) → () Updates the ServerIKRig target for an NPC local IKService = require(&quot;IKService&quot;) -- Make the NPC look at a target serviceBag:GetService(IKService):UpdateServerRigTarget(workspace.NPC.Humanoid, Vector3.new(0, 0, 0))  "},{"title":"IKServiceClient","type":0,"sectionRef":"#","url":"api/IKServiceClient","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"IKServiceClient","url":"api/IKServiceClient#functions","content":" "},{"title":"Init​","type":1,"pageTitle":"IKServiceClient","url":"api/IKServiceClient#Init","content":"&lt;/&gt; IKServiceClient:Init(serviceBag: ServiceBag) → () Initializes the service. Should be called via the ServiceBag. local serviceBag = require(&quot;ServiceBag&quot;).new() serviceBag:GetService(require(&quot;IKServiceClient&quot;)) serviceBag:Init() serviceBag:Start() -- Configure serviceBag:GetService(require(&quot;IKServiceClient&quot;)):SetLookAround(true)   "},{"title":"Start​","type":1,"pageTitle":"IKServiceClient","url":"api/IKServiceClient#Start","content":"&lt;/&gt; IKServiceClient:Start() → () Starts the service. Should be called via the ServiceBag.  "},{"title":"GetRig​","type":1,"pageTitle":"IKServiceClient","url":"api/IKServiceClient#GetRig","content":"&lt;/&gt; IKServiceClient:GetRig(humanoid: Humanoid ) → IKRigClient? Retrieves an IKRig. Binds the rig if it isn't already bound.  "},{"title":"PromiseRig​","type":1,"pageTitle":"IKServiceClient","url":"api/IKServiceClient#PromiseRig","content":"&lt;/&gt; IKServiceClient:PromiseRig(humanoid: Humanoid ) → Promise&lt;IKRigClient&gt; Retrieves an IKRig. Binds the rig if it isn't already bound.  "},{"title":"SetAimPosition​","type":1,"pageTitle":"IKServiceClient","url":"api/IKServiceClient#SetAimPosition","content":"&lt;/&gt; IKServiceClient:SetAimPosition( position: Vector3? ,-- May be nil to set no position optionalPriority: number ) → () Exposed API for guns and other things to start setting aim position which will override for a limited time. -- Make the local character always look towards the origin local IKServiceClient = require(&quot;IKServiceClient&quot;) local IKAimPositionPriorites = require(&quot;IKAimPositionPriorites&quot;) RunService.Stepped:Connect(function() serviceBag:GetService(IKServiceClient):SetAimPosition(Vector3.new(0, 0, 0), IKAimPositionPriorites.HIGH) end)   "},{"title":"SetLookAround​","type":1,"pageTitle":"IKServiceClient","url":"api/IKServiceClient#SetLookAround","content":"&lt;/&gt; IKServiceClient:SetLookAround(lookAround: boolean) → () If true, tells the local player to look around at whatever the camera is pointed at. serviceBag:GetService(require(&quot;IKServiceClient&quot;)):SetLookAround(false)   "},{"title":"GetLocalAimer​","type":1,"pageTitle":"IKServiceClient","url":"api/IKServiceClient#GetLocalAimer","content":"&lt;/&gt; IKServiceClient:GetLocalAimer() → IKRigAimerLocalPlayer Retrieves the local aimer for the local player.  "},{"title":"GetLocalPlayerRig​","type":1,"pageTitle":"IKServiceClient","url":"api/IKServiceClient#GetLocalPlayerRig","content":"&lt;/&gt; IKServiceClient:GetLocalPlayerRig() → IKRigClient? Attempts to retrieve the local player's ik rig, if it exists. "},{"title":"IKUtils","type":0,"sectionRef":"#","url":"api/IKUtils","content":"On this page IKUtils Utilties for IK system","keywords":""},{"title":"ImpulseCamera","type":0,"sectionRef":"#","url":"api/ImpulseCamera","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ImpulseCamera","url":"api/ImpulseCamera#functions","content":" "},{"title":"Impulse​","type":1,"pageTitle":"ImpulseCamera","url":"api/ImpulseCamera#Impulse","content":"&lt;/&gt; ImpulseCamera:Impulse(velocity: Vector3 ) → () Applies an impulse to the camera, shaking it! "},{"title":"INPUT_MODES","type":0,"sectionRef":"#","url":"api/INPUT_MODES","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"INPUT_MODES","url":"api/INPUT_MODES#properties","content":" "},{"title":"Keypad​","type":1,"pageTitle":"INPUT_MODES","url":"api/INPUT_MODES#Keypad","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; INPUT_MODES.Keypad: InputMode Input from a keypad  "},{"title":"Keyboard​","type":1,"pageTitle":"INPUT_MODES","url":"api/INPUT_MODES#Keyboard","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; INPUT_MODES.Keyboard: InputMode Input from a keyboard  "},{"title":"ArrowKeys​","type":1,"pageTitle":"INPUT_MODES","url":"api/INPUT_MODES#ArrowKeys","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; INPUT_MODES.ArrowKeys: InputMode Input involving arrow keys!  "},{"title":"WASD​","type":1,"pageTitle":"INPUT_MODES","url":"api/INPUT_MODES#WASD","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; INPUT_MODES.WASD: InputMode Input involving WASD  "},{"title":"Mouse​","type":1,"pageTitle":"INPUT_MODES","url":"api/INPUT_MODES#Mouse","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; INPUT_MODES.Mouse: InputMode Input involving the mouse  "},{"title":"KeyboardAndMoues​","type":1,"pageTitle":"INPUT_MODES","url":"api/INPUT_MODES#KeyboardAndMoues","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; INPUT_MODES.KeyboardAndMoues: InputMode Input involving the keyboard OR mouse.  "},{"title":"Touch​","type":1,"pageTitle":"INPUT_MODES","url":"api/INPUT_MODES#Touch","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; INPUT_MODES.Touch: InputMode Input involving touch input.  "},{"title":"DPad​","type":1,"pageTitle":"INPUT_MODES","url":"api/INPUT_MODES#DPad","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; INPUT_MODES.DPad: InputMode   "},{"title":"Thumbsticks​","type":1,"pageTitle":"INPUT_MODES","url":"api/INPUT_MODES#Thumbsticks","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; INPUT_MODES.Thumbsticks: InputMode Input involved thumbsticks.  "},{"title":"Gamepads​","type":1,"pageTitle":"INPUT_MODES","url":"api/INPUT_MODES#Gamepads","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; INPUT_MODES.Gamepads: InputMode Input involving gamepads "},{"title":"InputImageLibrary","type":0,"sectionRef":"#","url":"api/InputImageLibrary","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"InputImageLibrary","url":"api/InputImageLibrary#functions","content":" "},{"title":"GetPreloadAssetIds​","type":1,"pageTitle":"InputImageLibrary","url":"api/InputImageLibrary#GetPreloadAssetIds","content":"&lt;/&gt; InputImageLibrary:GetPreloadAssetIds() → {string} Retrieves all the asset ids to preload  "},{"title":"GetSprite​","type":1,"pageTitle":"InputImageLibrary","url":"api/InputImageLibrary#GetSprite","content":"&lt;/&gt; InputImageLibrary:GetSprite( index: number,-- The sprite index to get preferredStyle: string,-- The preferred style type to retrieve this in preferredPlatform: string-- The preferred platform to get the sprite for ) → Sprite Retrieves a sprite from the library "},{"title":"InputListScoreHelper","type":0,"sectionRef":"#","url":"api/InputListScoreHelper","content":"On this page InputListScoreHelper Distributes the scored action to the correct providers based upon input mode","keywords":""},{"title":"InputKeyMapUtils","type":0,"sectionRef":"#","url":"api/InputKeyMapUtils","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"InputKeyMapUtils","url":"api/InputKeyMapUtils#types","content":" "},{"title":"InputType​","type":1,"pageTitle":"InputKeyMapUtils","url":"api/InputKeyMapUtils#InputType","content":"&lt;/&gt; type InputType = KeyCode | UserInputType | SlottedTouchButton | &quot;TouchButton&quot; | &quot;Tap&quot; | any A valid input type that can be represented here.  "},{"title":"InputKeyMap​","type":1,"pageTitle":"InputKeyMapUtils","url":"api/InputKeyMapUtils#InputKeyMap","content":"&lt;/&gt; interface InputKeyMap { inputMode: InputMode inputTypes: {InputType} } A grouping of input types for a specific input mode to use.  "},{"title":"InputKeyMapList​","type":1,"pageTitle":"InputKeyMapUtils","url":"api/InputKeyMapUtils#InputKeyMapList","content":"&lt;/&gt; type InputKeyMapList = {InputKeyMap} A mapping of input keys to maps  "},{"title":"SlottedTouchButtonData​","type":1,"pageTitle":"InputKeyMapUtils","url":"api/InputKeyMapUtils#SlottedTouchButtonData","content":"&lt;/&gt; interface SlottedTouchButtonData { slotId: string inputMode: InputMode } Internal data representing a slotted touch button  "},{"title":"SlottedTouchButton​","type":1,"pageTitle":"InputKeyMapUtils","url":"api/InputKeyMapUtils#SlottedTouchButton","content":"&lt;/&gt; interface SlottedTouchButton { type: &quot;SlottedTouchButton&quot; slotId: string } A touch button that goes into a specific slot. This ensures consistent slot positions. "},{"title":"Functions​","type":1,"pageTitle":"InputKeyMapUtils","url":"api/InputKeyMapUtils#functions","content":" "},{"title":"createKeyMap​","type":1,"pageTitle":"InputKeyMapUtils","url":"api/InputKeyMapUtils#createKeyMap","content":"&lt;/&gt; InputKeyMapUtils.createKeyMap( inputMode: InputMode, inputTypes: {InputType} ) → InputKeyMap Should be called &quot;createInputKeyMap&quot;. Creates a new InputKeyMap.  "},{"title":"getInputTypesSetForActionBinding​","type":1,"pageTitle":"InputKeyMapUtils","url":"api/InputKeyMapUtils#getInputTypesSetForActionBinding","content":"&lt;/&gt; InputKeyMapUtils.getInputTypesSetForActionBinding(inputKeyMapList: InputKeyMapList) → {KeyCode | UserInputType }   "},{"title":"getInputTypesForActionBinding​","type":1,"pageTitle":"InputKeyMapUtils","url":"api/InputKeyMapUtils#getInputTypesForActionBinding","content":"&lt;/&gt; InputKeyMapUtils.getInputTypesForActionBinding(inputKeyMapList: InputKeyMapList) → {KeyCode | UserInputType } Converts keymap into ContextActionService friendly types  "},{"title":"getInputTypeListForMode​","type":1,"pageTitle":"InputKeyMapUtils","url":"api/InputKeyMapUtils#getInputTypeListForMode","content":"&lt;/&gt; InputKeyMapUtils.getInputTypeListForMode( inputKeyMapList: InputKeyMapList, inputMode: InputMode ) → {InputKeyMap} Given an inputMode, gets the relevant lists available  "},{"title":"getInputTypeSetForMode​","type":1,"pageTitle":"InputKeyMapUtils","url":"api/InputKeyMapUtils#getInputTypeSetForMode","content":"&lt;/&gt; InputKeyMapUtils.getInputTypeSetForMode( inputKeyMapList: InputKeyMapList, inputMode: InputMode ) → {[InputType]=true} Gets a set of input types for a given mode from the list.  "},{"title":"getInputModes​","type":1,"pageTitle":"InputKeyMapUtils","url":"api/InputKeyMapUtils#getInputModes","content":"&lt;/&gt; InputKeyMapUtils.getInputModes(inputKeyMapList: InputKeyMapList) → {InputMode} Retrieves the set of input modes for a given list.  "},{"title":"getSlottedTouchButtonData​","type":1,"pageTitle":"InputKeyMapUtils","url":"api/InputKeyMapUtils#getSlottedTouchButtonData","content":"&lt;/&gt; InputKeyMapUtils.getSlottedTouchButtonData(inputKeyMapList: InputKeyMapList) → {SlottedTouchButtonData} Gets slotted touch button data for an inputKeyMapList  "},{"title":"isSlottedTouchButton​","type":1,"pageTitle":"InputKeyMapUtils","url":"api/InputKeyMapUtils#isSlottedTouchButton","content":"&lt;/&gt; InputKeyMapUtils.isSlottedTouchButton(inputType: any) → boolean Returns whether an inputType is a SlottedTouchButton type  "},{"title":"createSlottedTouchButton​","type":1,"pageTitle":"InputKeyMapUtils","url":"api/InputKeyMapUtils#createSlottedTouchButton","content":"&lt;/&gt; InputKeyMapUtils.createSlottedTouchButton(slotId: string) → SlottedTouchButton Touch buttons should always show up in the same position We use the SlotId to determine which slot we should put these buttons in.  "},{"title":"getUniqueKeyForInputType​","type":1,"pageTitle":"InputKeyMapUtils","url":"api/InputKeyMapUtils#getUniqueKeyForInputType","content":"&lt;/&gt; InputKeyMapUtils.getUniqueKeyForInputType(inputType: InputType) → any Computes a unique id for an inputType which can be used in a set to deduplicate/compare the objects. Used to know when to exclude different types from each other.  "},{"title":"isRobloxTouchButton​","type":1,"pageTitle":"InputKeyMapUtils","url":"api/InputKeyMapUtils#isRobloxTouchButton","content":"&lt;/&gt; InputKeyMapUtils.isRobloxTouchButton(inputKeyMapList: InputKeyMapList) → boolean Only returns true if we're a Roblox touch button  "},{"title":"isTapInWorld​","type":1,"pageTitle":"InputKeyMapUtils","url":"api/InputKeyMapUtils#isTapInWorld","content":"&lt;/&gt; InputKeyMapUtils.isTapInWorld(inputKeyMapList: InputKeyMapList) → boolean Whether this input type is a tap in the world input (for touched events) "},{"title":"InputMode","type":0,"sectionRef":"#","url":"api/InputMode","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"InputMode","url":"api/InputMode#properties","content":" "},{"title":"Enabled​","type":1,"pageTitle":"InputMode","url":"api/InputMode#Enabled","content":"&lt;/&gt; InputMode.Enabled: Signal&lt;()&gt; Fires off when the mode is enabled  "},{"title":"Name​","type":1,"pageTitle":"InputMode","url":"api/InputMode#Name","content":"&lt;/&gt; InputMode.Name: Signal&lt;()&gt; Name of the InputMode "},{"title":"Functions​","type":1,"pageTitle":"InputMode","url":"api/InputMode#functions","content":" "},{"title":"new​","type":1,"pageTitle":"InputMode","url":"api/InputMode#new","content":"&lt;/&gt; InputMode.new( name: string, typesAndInputModes: {{UserInputType | KeyCode | string | InputMode}} ) → InputMode Constructs a new InputMode  "},{"title":"GetLastEnabledTime​","type":1,"pageTitle":"InputMode","url":"api/InputMode#GetLastEnabledTime","content":"&lt;/&gt; InputMode:GetLastEnabledTime() → number Checks the last point this input mode was used.  "},{"title":"GetKeys​","type":1,"pageTitle":"InputMode","url":"api/InputMode#GetKeys","content":"&lt;/&gt; InputMode:GetKeys() → {UserInputType | KeyCode | string} Returns all keys defining the input mode.  "},{"title":"IsValid​","type":1,"pageTitle":"InputMode","url":"api/InputMode#IsValid","content":"&lt;/&gt; InputMode:IsValid(inputType: {UserInputType | KeyCode | string}) → boolean Checks the validity of the inputType  "},{"title":"Enable​","type":1,"pageTitle":"InputMode","url":"api/InputMode#Enable","content":"&lt;/&gt; InputMode:Enable() → () Enables the mode  "},{"title":"Evaluate​","type":1,"pageTitle":"InputMode","url":"api/InputMode#Evaluate","content":"&lt;/&gt; InputMode:Evaluate(inputObject: InputObject ) → () Evaluates the input object, and if it's valid, enables the mode "},{"title":"InputModeSelector","type":0,"sectionRef":"#","url":"api/InputModeSelector","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"InputModeSelector","url":"api/InputModeSelector#properties","content":" "},{"title":"Changed​","type":1,"pageTitle":"InputModeSelector","url":"api/InputModeSelector#Changed","content":"&lt;/&gt; InputModeSelector.Changed: Signal&lt;InputMode,InputMode&gt;--newMode,oldMode Event that fires whenever the active mode changes.  "},{"title":"Value​","type":1,"pageTitle":"InputModeSelector","url":"api/InputModeSelector#Value","content":"&lt;/&gt; InputModeSelector.Value: InputMode? The current active input mode "},{"title":"Functions​","type":1,"pageTitle":"InputModeSelector","url":"api/InputModeSelector#functions","content":" "},{"title":"new​","type":1,"pageTitle":"InputModeSelector","url":"api/InputModeSelector#new","content":"&lt;/&gt; InputModeSelector.new(inputModes: {InputMode}) → InputModeSelector Constructs a new InputModeSelector  "},{"title":"GetActiveMode​","type":1,"pageTitle":"InputModeSelector","url":"api/InputModeSelector#GetActiveMode","content":"&lt;/&gt; InputModeSelector:GetActiveMode() → InputMode Returns the current active mode  "},{"title":"Bind​","type":1,"pageTitle":"InputModeSelector","url":"api/InputModeSelector#Bind","content":"&lt;/&gt; InputModeSelector:Bind(updateBindFunction: ( newMode: InputMode, modeMaid: Maid ) → ()) → InputModeSelector Binds the updateBindFunction to the mode selector local inputModeSelector = InputModeSelector.new({ INPUT_MODES.Mouse; INPUT_MODES.Touch; }) inputModeSelector:Bind(function(inputMode) if inputMode == INPUT_MODES.Mouse then print(&quot;Show mouse input hints&quot;) elseif inputMode == INPUT_MODES.Touch then print(&quot;Show touch input hints&quot;) else -- Unknown input mode warn(&quot;Unknown input mode&quot;) -- should not occur end end)   "},{"title":"Destroy​","type":1,"pageTitle":"InputModeSelector","url":"api/InputModeSelector#Destroy","content":"&lt;/&gt; InputModeSelector:Destroy() → () Cleans up the input mode selector. info This should be called whenever the mode selector is done being used. "},{"title":"InputModeProcessor","type":0,"sectionRef":"#","url":"api/InputModeProcessor","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"InputModeProcessor","url":"api/InputModeProcessor#functions","content":" "},{"title":"new​","type":1,"pageTitle":"InputModeProcessor","url":"api/InputModeProcessor#new","content":"&lt;/&gt; InputModeProcessor.new(inputModes: {InputMode}) → InputModeProcessor Construtcs a new inputModeProcessor  "},{"title":"GetStates​","type":1,"pageTitle":"InputModeProcessor","url":"api/InputModeProcessor#GetStates","content":"&lt;/&gt; InputModeProcessor:GetStates() → {InputMode} Gets all input mode inputModes being used  "},{"title":"Evaluate​","type":1,"pageTitle":"InputModeProcessor","url":"api/InputModeProcessor#Evaluate","content":"&lt;/&gt; InputModeProcessor:Evaluate(inputObject: InputObject ) → () Applies the inputObject as an evaluation for the inputm odes "},{"title":"InputObjectRayUtils","type":0,"sectionRef":"#","url":"api/InputObjectRayUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"InputObjectRayUtils","url":"api/InputObjectRayUtils#functions","content":" "},{"title":"cameraRayFromInputObject​","type":1,"pageTitle":"InputObjectRayUtils","url":"api/InputObjectRayUtils#cameraRayFromInputObject","content":"&lt;/&gt; InputObjectRayUtils.cameraRayFromInputObject( inputObject: InputObject , distance: number, offset: Vector3? ,-- Optional camera: Camera? -- Optional ) → Ray  Computes a camera ray from an inputObject  "},{"title":"cameraRayFromMouse​","type":1,"pageTitle":"InputObjectRayUtils","url":"api/InputObjectRayUtils#cameraRayFromMouse","content":"&lt;/&gt; InputObjectRayUtils.cameraRayFromMouse( mouse: Mouse , distance: number, offset: Vector3? ,-- Optional camera: Camera? -- Optional ) → Ray  Computes a camera ray from the mouse  "},{"title":"cameraRayFromInputObjectWithOffset​","type":1,"pageTitle":"InputObjectRayUtils","url":"api/InputObjectRayUtils#cameraRayFromInputObjectWithOffset","content":"&lt;/&gt; InputObjectRayUtils.cameraRayFromInputObjectWithOffset( inputObject: InputObject , distance: number?,-- Optional offset: Vector3 , camera: Camera? -- Optional ) → Ray    "},{"title":"cameraRayFromScreenPosition​","type":1,"pageTitle":"InputObjectRayUtils","url":"api/InputObjectRayUtils#cameraRayFromScreenPosition","content":"&lt;/&gt; InputObjectRayUtils.cameraRayFromScreenPosition( position: Vector3 , distance: number?,-- Optional camera: Camera? -- Optional ) → Ray    "},{"title":"cameraRayFromViewportPosition​","type":1,"pageTitle":"InputObjectRayUtils","url":"api/InputObjectRayUtils#cameraRayFromViewportPosition","content":"&lt;/&gt; InputObjectRayUtils.cameraRayFromViewportPosition( position: Vector3 , distance: number?,-- Optional camera: Camera? -- Optional ) → Ray    "},{"title":"generateCircleRays​","type":1,"pageTitle":"InputObjectRayUtils","url":"api/InputObjectRayUtils#generateCircleRays","content":"&lt;/&gt; InputObjectRayUtils.generateCircleRays( ray: Ray , count: number, radius: number ) → {Ray } Generates a circle of rays including the center ray "},{"title":"InputObjectUtils","type":0,"sectionRef":"#","url":"api/InputObjectUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"InputObjectUtils","url":"api/InputObjectUtils#functions","content":" "},{"title":"isMouseUserInputType​","type":1,"pageTitle":"InputObjectUtils","url":"api/InputObjectUtils#isMouseUserInputType","content":"&lt;/&gt; InputObjectUtils.isMouseUserInputType(userInputType: UserInputType ) → true Returns whether a user input type involves the mouse.  "},{"title":"isSameInputObject​","type":1,"pageTitle":"InputObjectUtils","url":"api/InputObjectUtils#isSameInputObject","content":"&lt;/&gt; InputObjectUtils.isSameInputObject( inputObject: InputObject , otherInputObject: InputObject ) → boolean Compares the two input objects and determines if they are the same thing. For example, a finger being dragged across a screen, or a mouse input being used as a cursor. "},{"title":"InsertServiceUtils","type":0,"sectionRef":"#","url":"api/InsertServiceUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"InsertServiceUtils","url":"api/InsertServiceUtils#functions","content":" "},{"title":"promiseAsset​","type":1,"pageTitle":"InsertServiceUtils","url":"api/InsertServiceUtils#promiseAsset","content":"&lt;/&gt; InsertServiceUtils.promiseAsset(assetId: number) → Promise&lt;Instance &gt; Promises the resulting asset is inserted from insert service, or a rejection "},{"title":"InverseFader","type":0,"sectionRef":"#","url":"api/InverseFader","content":"On this page InverseFader Be the inverse of a fading camera (makes scaling in cameras easy).","keywords":""},{"title":"IsAMixin","type":0,"sectionRef":"#","url":"api/IsAMixin","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"IsAMixin","url":"api/IsAMixin#functions","content":" "},{"title":"Add​","type":1,"pageTitle":"IsAMixin","url":"api/IsAMixin#Add","content":"&lt;/&gt; IsAMixin:Add(class: table) → () Adds the IsA function to a class and all descendants  "},{"title":"IsA​","type":1,"pageTitle":"IsAMixin","url":"api/IsAMixin#IsA","content":"&lt;/&gt; IsAMixin:IsA(className: string) → boolean Using the .ClassName property, returns whether or not a component is a class. "},{"title":"JsonToLocalizationTable","type":0,"sectionRef":"#","url":"api/JsonToLocalizationTable","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"JsonToLocalizationTable","url":"api/JsonToLocalizationTable#functions","content":" "},{"title":"localeFromName​","type":1,"pageTitle":"JsonToLocalizationTable","url":"api/JsonToLocalizationTable#localeFromName","content":"&lt;/&gt; JsonToLocalizationTable.localeFromName( name: string-- The name to parse ) → string-- The locale Extracts the locale from the name  "},{"title":"loadFolder​","type":1,"pageTitle":"JsonToLocalizationTable","url":"api/JsonToLocalizationTable#loadFolder","content":"&lt;/&gt; JsonToLocalizationTable.loadFolder( folder: Folder -- A Roblox folder with StringValues containing JSON, named with the localization in mind ) → () Loads a folder into a localization table  "},{"title":"toLocalizationTable​","type":1,"pageTitle":"JsonToLocalizationTable","url":"api/JsonToLocalizationTable#toLocalizationTable","content":"&lt;/&gt; JsonToLocalizationTable.toLocalizationTable( first: Instance | string, second: table? ) → LocalizationTable  Extracts the locale from the folder, or a locale and table.  "},{"title":"loadTable​","type":1,"pageTitle":"JsonToLocalizationTable","url":"api/JsonToLocalizationTable#loadTable","content":"&lt;/&gt; JsonToLocalizationTable.loadTable( localeId: string,-- the defaultlocaleId dataTable: table-- Data table to load from ) → LocalizationTable  Extracts the locale from the name  "},{"title":"addJsonToTable​","type":1,"pageTitle":"JsonToLocalizationTable","url":"api/JsonToLocalizationTable#addJsonToTable","content":"&lt;/&gt; JsonToLocalizationTable.addJsonToTable( localizationTable: LocalizationTable ,-- The localization table to add to localeId: string,-- The localeId to use json: string-- The json to add with ) → () Adds json to a localization table "},{"title":"JSONTranslator","type":0,"sectionRef":"#","url":"api/JSONTranslator","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"JSONTranslator","url":"api/JSONTranslator#functions","content":" "},{"title":"new​","type":1,"pageTitle":"JSONTranslator","url":"api/JSONTranslator#new","content":"&lt;/&gt; JSONTranslator.new(...: any) → JSONTranslator Constructs a new JSONTranslator from the given args. local translator = JSONTranslator.new(&quot;en&quot;, { actions = { respawn = &quot;Respawn {playerName}&quot;; }; }) print(translator:FormatByKey(&quot;actions.respawn&quot;), { playerName = &quot;Quenty&quot;}) --&gt; Respawn Quenty local translator = JSONTranslator.new(script) -- assume there is an `en.json` underneath the script with valid JSON.   "},{"title":"PromiseLoaded​","type":1,"pageTitle":"JSONTranslator","url":"api/JSONTranslator#PromiseLoaded","content":"&lt;/&gt; JSONTranslator:PromiseLoaded() → Promise Returns a promise that will resolve once the translator is loaded from the cloud.  "},{"title":"FallbackTo​","type":1,"pageTitle":"JSONTranslator","url":"api/JSONTranslator#FallbackTo","content":"&lt;/&gt; JSONTranslator:FallbackTo(translator: JSONTranslator | Translator ) → () Makes the translator fall back to another translator if an entry cannot be found. Mostly just used for testing.  "},{"title":"PromiseFormatByKey​","type":1,"pageTitle":"JSONTranslator","url":"api/JSONTranslator#PromiseFormatByKey","content":"&lt;/&gt; JSONTranslator:PromiseFormatByKey( key: string, args: table? ) → Promise&lt;string&gt; Formats the resulting entry by args.  "},{"title":"ObserveFormatByKey​","type":1,"pageTitle":"JSONTranslator","url":"api/JSONTranslator#ObserveFormatByKey","content":"&lt;/&gt; JSONTranslator:ObserveFormatByKey( key: string, argData: table?-- May have observables (or convertable to observables) in it. ) → Observable&lt;string&gt; Observes the translated value  "},{"title":"FormatByKey​","type":1,"pageTitle":"JSONTranslator","url":"api/JSONTranslator#FormatByKey","content":"&lt;/&gt; JSONTranslator:FormatByKey( key: string, args: table? ) → string Formats or errors if the cloud translations are not loaded.  "},{"title":"Destroy​","type":1,"pageTitle":"JSONTranslator","url":"api/JSONTranslator#Destroy","content":"&lt;/&gt; JSONTranslator:Destroy() → () Cleans up the translator and deletes the localization table if it exists. "},{"title":"JSONUtils","type":0,"sectionRef":"#","url":"api/JSONUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"JSONUtils","url":"api/JSONUtils#functions","content":" "},{"title":"jsonDecode​","type":1,"pageTitle":"JSONUtils","url":"api/JSONUtils#jsonDecode","content":"&lt;/&gt; JSONUtils.jsonDecode(str: string) → ( boolean, table?,-- Result string?-- Error ) Decodes JSON, or reports error.  "},{"title":"promiseJSONDecode​","type":1,"pageTitle":"JSONUtils","url":"api/JSONUtils#promiseJSONDecode","content":"&lt;/&gt; JSONUtils.promiseJSONDecode(str: string) → Promise&lt;table&gt; Decodes JSON, or reports error. "},{"title":"JumpButtonUtils","type":0,"sectionRef":"#","url":"api/JumpButtonUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"JumpButtonUtils","url":"api/JumpButtonUtils#functions","content":" "},{"title":"getJumpButtonPositionAndSize​","type":1,"pageTitle":"JumpButtonUtils","url":"api/JumpButtonUtils#getJumpButtonPositionAndSize","content":"&lt;/&gt; JumpButtonUtils.getJumpButtonPositionAndSize(screenGuiAbsSize: Vector2 ) → ( Vector2 ,-- Position number-- Width ) Computes the jump button's position and size based upon Roblox's logic. "},{"title":"LagPointCamera","type":0,"sectionRef":"#","url":"api/LagPointCamera","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"LagPointCamera","url":"api/LagPointCamera#functions","content":" "},{"title":"new​","type":1,"pageTitle":"LagPointCamera","url":"api/LagPointCamera#new","content":"&lt;/&gt; LagPointCamera.new( originCamera: CameraEffect,-- A camera to use focusCamera: CameraEffect-- The Camera to look at. ) → LagPointCamera Camera that lags behind the actual camera. "},{"title":"LegacyLoader","type":0,"sectionRef":"#","url":"api/LegacyLoader","content":"On this page LegacyLoader This item is only intended to be used by the module's authors. Private Legacy loading logic","keywords":""},{"title":"Line","type":0,"sectionRef":"#","url":"api/Line","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Line","url":"api/Line#functions","content":" "},{"title":"intersection​","type":1,"pageTitle":"Line","url":"api/Line#intersection","content":"&lt;/&gt; Line.intersection( a: Vector3 , r: Vector3 ,-- Offset from a b: Vector3 , s: Vector3 ) → () http://wiki.roblox.com/index.php?title=User:EgoMoose/Articles/3D_line_intersection "},{"title":"LinearSystemsSolverUtils","type":0,"sectionRef":"#","url":"api/LinearSystemsSolverUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"LinearSystemsSolverUtils","url":"api/LinearSystemsSolverUtils#functions","content":" "},{"title":"solve​","type":1,"pageTitle":"LinearSystemsSolverUtils","url":"api/LinearSystemsSolverUtils#solve","content":"&lt;/&gt; LinearSystemsSolverUtils.solve( mutSystem: {{number}}, mutOutput: {number} ) → {number} like this [a b | y] [c d | z] mutSystem = { {a, b}, {c, d}, } mutOutput = {y, z} returns solution {x0, x1} warning System and output get destroyed in the process  "},{"title":"solveTridiagonal​","type":1,"pageTitle":"LinearSystemsSolverUtils","url":"api/LinearSystemsSolverUtils#solveTridiagonal","content":"&lt;/&gt; LinearSystemsSolverUtils.solveTridiagonal( mutMainDiag: table, mutUpperDiag: table, mutLowerDiag: table, mutOutput: table ) → table  "},{"title":"LinearValue","type":0,"sectionRef":"#","url":"api/LinearValue","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"LinearValue","url":"api/LinearValue#properties","content":" "},{"title":"magnitude​","type":1,"pageTitle":"LinearValue","url":"api/LinearValue#magnitude","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; LinearValue.magnitude: number Returns the magnitude of the linear value. "},{"title":"Functions​","type":1,"pageTitle":"LinearValue","url":"api/LinearValue#functions","content":" "},{"title":"new​","type":1,"pageTitle":"LinearValue","url":"api/LinearValue#new","content":"&lt;/&gt; LinearValue.new( constructor: (number...) → T, values: ({number}) ) → LinearValue&lt;T&gt; Constructs a new LinearValue object.  "},{"title":"isLinear​","type":1,"pageTitle":"LinearValue","url":"api/LinearValue#isLinear","content":"&lt;/&gt; LinearValue.isLinear( value: any-- A value to check ) → boolean-- True if a linear value, false otherwise Returns whether or not a value is a LinearValue object.  "},{"title":"ToBaseValue​","type":1,"pageTitle":"LinearValue","url":"api/LinearValue#ToBaseValue","content":"&lt;/&gt; LinearValue:ToBaseValue() → T Converts the value back to the base value  "},{"title":"GetMagnitude​","type":1,"pageTitle":"LinearValue","url":"api/LinearValue#GetMagnitude","content":"&lt;/&gt; LinearValue:GetMagnitude() → number-- The magnitude of the linear value. Returns the magnitude of the linear value. "},{"title":"LinkUtils","type":0,"sectionRef":"#","url":"api/LinkUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"LinkUtils","url":"api/LinkUtils#functions","content":" "},{"title":"createLink​","type":1,"pageTitle":"LinkUtils","url":"api/LinkUtils#createLink","content":"&lt;/&gt; LinkUtils.createLink( linkName: string, from: Instance , to: Instance ) → ObjectValue  Creates a new link with the given name.  "},{"title":"getAllLinkValues​","type":1,"pageTitle":"LinkUtils","url":"api/LinkUtils#getAllLinkValues","content":"&lt;/&gt; LinkUtils.getAllLinkValues( linkName: string, from: Instance ) → {Instance } Gets all link values, as long as the values are not nil.  "},{"title":"getAllLinks​","type":1,"pageTitle":"LinkUtils","url":"api/LinkUtils#getAllLinks","content":"&lt;/&gt; LinkUtils.getAllLinks( linkName: string, from: Instance ) → {ObjectValue } Gets all links underneath an instance.  "},{"title":"getLinkValue​","type":1,"pageTitle":"LinkUtils","url":"api/LinkUtils#getLinkValue","content":"&lt;/&gt; LinkUtils.getLinkValue( linkName: string, from: Instance ) → {Instance } Gets the first links value  "},{"title":"promiseLinkValue​","type":1,"pageTitle":"LinkUtils","url":"api/LinkUtils#promiseLinkValue","content":"&lt;/&gt; LinkUtils.promiseLinkValue( maid: Maid, linkName: string, from: Instance ) → Promise&lt;Instance &gt; Promises the first link value that is truthy "},{"title":"LipsumUtils","type":0,"sectionRef":"#","url":"api/LipsumUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"LipsumUtils","url":"api/LipsumUtils#functions","content":" "},{"title":"username​","type":1,"pageTitle":"LipsumUtils","url":"api/LipsumUtils#username","content":"&lt;/&gt; LipsumUtils.username( random: Random? -- Optional random ) → string Generates a random username. print(LipsumUtils.username()) --&gt; LoremIpsum23   "},{"title":"word​","type":1,"pageTitle":"LipsumUtils","url":"api/LipsumUtils#word","content":"&lt;/&gt; LipsumUtils.word( random: Random? -- Optional random ) → string Generates a random word. print(LipsumUtils.word()) --&gt; Lipsum   "},{"title":"words​","type":1,"pageTitle":"LipsumUtils","url":"api/LipsumUtils#words","content":"&lt;/&gt; LipsumUtils.words( numWords: number, random: Random? -- Optional random ) → string Generates a random set of words space-separated. print(LipsumUtils.words(5)) --&gt; 5 words   "},{"title":"sentence​","type":1,"pageTitle":"LipsumUtils","url":"api/LipsumUtils#sentence","content":"&lt;/&gt; LipsumUtils.sentence( numWords: number?,-- Defaults to a random number 6 to 12. random: Random? -- Optional random ) → string Generates a random sentence. print(LipsumUtils.sentence(7)) --&gt; Sentence with 7 words.   "},{"title":"paragraph​","type":1,"pageTitle":"LipsumUtils","url":"api/LipsumUtils#paragraph","content":"&lt;/&gt; LipsumUtils.paragraph( numSentences: number, createSentence: (() → string)?,-- Optional createSentence random: Random? -- Optional random ) → string Generates a random paragraph. print(LipsumUtils.paragraph(4)) --&gt; Paragraph with 4 sentences.   "},{"title":"document​","type":1,"pageTitle":"LipsumUtils","url":"api/LipsumUtils#document","content":"&lt;/&gt; LipsumUtils.document( numParagraphs: number, createParagraph: (() → string)?,-- Optional createParagraph random: Random? -- Optional random ) → string print(LipsumUtils.document(3)) --&gt; Document with 3 paragraphs  "},{"title":"Loader","type":0,"sectionRef":"#","url":"api/Loader","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Loader","url":"api/Loader#types","content":" "},{"title":"ModuleReference​","type":1,"pageTitle":"Loader","url":"api/Loader#ModuleReference","content":"&lt;/&gt; type ModuleReference = ModuleScript | number | string A type that can be loaded into a module "},{"title":"Functions​","type":1,"pageTitle":"Loader","url":"api/Loader#functions","content":" "},{"title":"bootstrapGame​","type":1,"pageTitle":"Loader","url":"api/Loader#bootstrapGame","content":"This item only works when running on the server. Server &lt;/&gt; Loader.bootstrapGame(packageFolder: Instance ) → Folder -- serverFolder Bootstraps the game by replicating packages to server, client, and shared. local ServerScriptService = game:GetService(&quot;ServerScriptService&quot;) local loader = ServerScriptService:FindFirstChild(&quot;LoaderUtils&quot;, true).Parent local packages = require(loader).bootstrapGame(ServerScriptService.ik) info The game must be running to do this bootstrapping operation.  "},{"title":"load​","type":1,"pageTitle":"Loader","url":"api/Loader#load","content":"&lt;/&gt; Loader.load( script: Script -- The script to load dependencies for. ) → (moduleReference: ModuleReference) → any Returns a function that can be used to load modules relative to the script specified. local require = require(script.Parent.loader).load(script) local maid = require(&quot;Maid&quot;)  "},{"title":"LoaderClass","type":0,"sectionRef":"#","url":"api/LoaderClass","content":"On this page LoaderClass This item is only intended to be used by the module's authors. Private Loading logic for Nevermore","keywords":""},{"title":"LoaderConstants","type":0,"sectionRef":"#","url":"api/LoaderConstants","content":"On this page LoaderConstants This item is only intended to be used by the module's authors. Private","keywords":""},{"title":"LocalizationServiceUtils","type":0,"sectionRef":"#","url":"api/LocalizationServiceUtils","content":"On this page LocalizationServiceUtils","keywords":""},{"title":"LoaderUtils","type":0,"sectionRef":"#","url":"api/LoaderUtils","content":"On this page LoaderUtils This item is only intended to be used by the module's authors. Private","keywords":""},{"title":"Maid","type":0,"sectionRef":"#","url":"api/Maid","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Maid","url":"api/Maid#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Maid","url":"api/Maid#new","content":"&lt;/&gt; Maid.new() → Maid Constructs a new Maid object local maid = Maid.new()   "},{"title":"isMaid​","type":1,"pageTitle":"Maid","url":"api/Maid#isMaid","content":"&lt;/&gt; Maid.isMaid(value: any) → boolean Returns true if the class is a maid, and false otherwise. print(Maid.isMaid(Maid.new())) --&gt; true print(Maid.isMaid(nil)) --&gt; false   "},{"title":"Destroy​","type":1,"pageTitle":"Maid","url":"api/Maid#Destroy","content":"&lt;/&gt; Maid.Destroy() → () Alias for Maid.DoCleaning()  "},{"title":"__index​","type":1,"pageTitle":"Maid","url":"api/Maid#__index","content":"&lt;/&gt; Maid:__index(index: any) → MaidTask Returns Maid[key] if not part of Maid metatable local maid = Maid.new() maid._current = Instance.new(&quot;Part&quot;) print(maid._current) --&gt; Part maid._current = nil print(maid._current) --&gt; nil   "},{"title":"__newindex​","type":1,"pageTitle":"Maid","url":"api/Maid#__newindex","content":"&lt;/&gt; Maid:__newindex( index: any, newTask: MaidTask ) → () Add a task to clean up. Tasks given to a maid will be cleaned when maid[index] is set to a different value. Task cleanup is such that if the task is an event, it is disconnected. If it is an object, it is destroyed. Maid[key] = (function) Adds a task to perform Maid[key] = (event connection) Manages an event connection Maid[key] = (Maid) Maids can act as an event connection, allowing a Maid to have other maids to clean up. Maid[key] = (Object) Maids can cleanup objects with a `Destroy` method Maid[key] = nil Removes a named task.   "},{"title":"GiveTask​","type":1,"pageTitle":"Maid","url":"api/Maid#GiveTask","content":"&lt;/&gt; Maid:GiveTask( task: MaidTask-- An item to clean ) → number-- taskId Gives a task to the maid for cleanup, but uses an incremented number as a key.  "},{"title":"GivePromise​","type":1,"pageTitle":"Maid","url":"api/Maid#GivePromise","content":"&lt;/&gt; Maid:GivePromise(promise: Promise&lt;T&gt;) → Promise&lt;T&gt; Gives a promise to the maid for clean.  "},{"title":"DoCleaning​","type":1,"pageTitle":"Maid","url":"api/Maid#DoCleaning","content":"&lt;/&gt; Maid:DoCleaning() → () Cleans up all tasks and removes them as entries from the Maid. note Signals that are already connected are always disconnected first. After that any signals added during a cleaning phase will be disconnected at random times. tip DoCleaning() may be recursively invoked. This allows the you to ensure that tasks or other tasks. Each task will be executed once. However, adding tasks while cleaning is not generally a good idea, as if you add a function that adds itself, this will loop indefinitely. "},{"title":"LocalizedTextUtils","type":0,"sectionRef":"#","url":"api/LocalizedTextUtils","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"LocalizedTextUtils","url":"api/LocalizedTextUtils#types","content":" "},{"title":"TranslationArgs​","type":1,"pageTitle":"LocalizedTextUtils","url":"api/LocalizedTextUtils#TranslationArgs","content":"&lt;/&gt; type TranslationArgs = {[string]: LocalizedTextData | number | string} Valid translation args  "},{"title":"LocalizedTextData​","type":1,"pageTitle":"LocalizedTextUtils","url":"api/LocalizedTextUtils#LocalizedTextData","content":"&lt;/&gt; interface LocalizedTextData { translationKey: string translationArgs: TranslationArgs } Valid localized text data "},{"title":"Functions​","type":1,"pageTitle":"LocalizedTextUtils","url":"api/LocalizedTextUtils#functions","content":" "},{"title":"create​","type":1,"pageTitle":"LocalizedTextUtils","url":"api/LocalizedTextUtils#create","content":"&lt;/&gt; LocalizedTextUtils.create( translationKey: string, translationArgs: TranslationArgs ) → LocalizedTextData Creates a new localizedtextdata  "},{"title":"isLocalizedText​","type":1,"pageTitle":"LocalizedTextUtils","url":"api/LocalizedTextUtils#isLocalizedText","content":"&lt;/&gt; LocalizedTextUtils.isLocalizedText(data: any) → boolean Returns whether the given argument is localized text  "},{"title":"formatByKeyRecursive​","type":1,"pageTitle":"LocalizedTextUtils","url":"api/LocalizedTextUtils#formatByKeyRecursive","content":"&lt;/&gt; LocalizedTextUtils.formatByKeyRecursive( translator: Translator | JSONTranslator, translationKey: string, translationArgs: TranslationArgs?, extraArgs: table? ) → string Recursively formats the translated text.  "},{"title":"observeFormatByKeyRecursive​","type":1,"pageTitle":"LocalizedTextUtils","url":"api/LocalizedTextUtils#observeFormatByKeyRecursive","content":"&lt;/&gt; LocalizedTextUtils.observeFormatByKeyRecursive( translator: Translator | JSONTranslator, translationKey: string, translationArgs: TranslationArgs?, extraArgs: table? ) → Observable&lt;string&gt; Observes the recursively formatted translated text.  "},{"title":"localizedTextToString​","type":1,"pageTitle":"LocalizedTextUtils","url":"api/LocalizedTextUtils#localizedTextToString","content":"&lt;/&gt; LocalizedTextUtils.localizedTextToString( translator: Translator | JSONTranslator, localizedText: LocalizedTextData, extraArgs: table? ) → string Recursively formats the translated text  "},{"title":"fromJSON​","type":1,"pageTitle":"LocalizedTextUtils","url":"api/LocalizedTextUtils#fromJSON","content":"&lt;/&gt; LocalizedTextUtils.fromJSON(text: string) → LocalizedTextData? Converts from JSON  "},{"title":"toJSON​","type":1,"pageTitle":"LocalizedTextUtils","url":"api/LocalizedTextUtils#toJSON","content":"&lt;/&gt; LocalizedTextUtils.toJSON(localizedText: LocalizedTextData) → string? Converts to JSON  "},{"title":"setFromAttribute​","type":1,"pageTitle":"LocalizedTextUtils","url":"api/LocalizedTextUtils#setFromAttribute","content":"&lt;/&gt; LocalizedTextUtils.setFromAttribute( obj: Instance , attributeName: string, translationKey: string, translationArgs: TranslationArgs ) → LocalizedTextData Sets the translation data as an attribute on an instance.  "},{"title":"getFromAttribute​","type":1,"pageTitle":"LocalizedTextUtils","url":"api/LocalizedTextUtils#getFromAttribute","content":"&lt;/&gt; LocalizedTextUtils.getFromAttribute( obj: Instance , attributeName: string ) → LocalizedTextData Reads the data from the attribute  "},{"title":"getTranslationFromAttribute​","type":1,"pageTitle":"LocalizedTextUtils","url":"api/LocalizedTextUtils#getTranslationFromAttribute","content":"&lt;/&gt; LocalizedTextUtils.getTranslationFromAttribute( translator: Translator | JSONTranslator, obj: Instance , attributeName: string, extraArgs: table? ) → string? Gets the translation from a given object's attribute  "},{"title":"initializeAttribute​","type":1,"pageTitle":"LocalizedTextUtils","url":"api/LocalizedTextUtils#initializeAttribute","content":"&lt;/&gt; LocalizedTextUtils.initializeAttribute( obj: Instance , attributeName: string, defaultTranslationKey: string, defaultTranslationArgs: table? ) → () Ensures an attribute is defined if nothing is there  "},{"title":"observeTranslation​","type":1,"pageTitle":"LocalizedTextUtils","url":"api/LocalizedTextUtils#observeTranslation","content":"&lt;/&gt; LocalizedTextUtils.observeTranslation( translator: Translator | JSONTranslator, obj: Instance , attributeName: string, extraArgs: table? ) → Observable&lt;string?&gt; Returns the translated string from the given object "},{"title":"MantleConfigProvider","type":0,"sectionRef":"#","url":"api/MantleConfigProvider","content":"On this page MantleConfigProvider","keywords":""},{"title":"MaidTaskUtils","type":0,"sectionRef":"#","url":"api/MaidTaskUtils","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"MaidTaskUtils","url":"api/MaidTaskUtils#types","content":" "},{"title":"Destructable​","type":1,"pageTitle":"MaidTaskUtils","url":"api/MaidTaskUtils#Destructable","content":"&lt;/&gt; type Destructable = Instance | {Destroy: function} An object that can have the method :Destroy() called on it  "},{"title":"MaidTask​","type":1,"pageTitle":"MaidTaskUtils","url":"api/MaidTaskUtils#MaidTask","content":"&lt;/&gt; type MaidTask = function | Destructable | RBXScriptConnection  An object that can be cleaned up "},{"title":"Functions​","type":1,"pageTitle":"MaidTaskUtils","url":"api/MaidTaskUtils#functions","content":" "},{"title":"isValidTask​","type":1,"pageTitle":"MaidTaskUtils","url":"api/MaidTaskUtils#isValidTask","content":"&lt;/&gt; MaidTaskUtils.isValidTask(job: any) → boolean Returns whether a task is a valid job.  "},{"title":"doTask​","type":1,"pageTitle":"MaidTaskUtils","url":"api/MaidTaskUtils#doTask","content":"&lt;/&gt; MaidTaskUtils.doTask( job: MaidTask-- Task to execute ) → () Executes the task as requested.  "},{"title":"delayed​","type":1,"pageTitle":"MaidTaskUtils","url":"api/MaidTaskUtils#delayed","content":"&lt;/&gt; MaidTaskUtils.delayed( time: number,-- Time in seconds job: MaidTask-- Job to delay execution ) → () → ()-- function that will execute the job delayed Executes the task delayed after some time. -- delays cleanup by 5 seconds maid:GiveTask(MaidTaskUtils.delayed(5, gui))  "},{"title":"MarkdownParser","type":0,"sectionRef":"#","url":"api/MarkdownParser","content":"On this page MarkdownParser Parses text into markdown","keywords":""},{"title":"MarkdownRender","type":0,"sectionRef":"#","url":"api/MarkdownRender","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"MarkdownRender","url":"api/MarkdownRender#functions","content":" "},{"title":"new​","type":1,"pageTitle":"MarkdownRender","url":"api/MarkdownRender#new","content":"&lt;/&gt; MarkdownRender.new( gui: GuiObject , width: number-- Width to render at ) → MarkdownRender Creates a new markdown render  "},{"title":"Render​","type":1,"pageTitle":"MarkdownRender","url":"api/MarkdownRender#Render","content":"&lt;/&gt; MarkdownRender:Render( data: table-- Data from MarkdownParser. ) → () Renders the data in the given gui "},{"title":"MasterClock","type":0,"sectionRef":"#","url":"api/MasterClock","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"MasterClock","url":"api/MasterClock#functions","content":" "},{"title":"new​","type":1,"pageTitle":"MasterClock","url":"api/MasterClock#new","content":"&lt;/&gt; MasterClock.new( remoteEvent: RemoteEvent , remoteFunction: RemoteFunction ) → MasterClock Constructs a new MasterClock  "},{"title":"IsSynced​","type":1,"pageTitle":"MasterClock","url":"api/MasterClock#IsSynced","content":"&lt;/&gt; MasterClock:IsSynced() → boolean Returns true if the manager has synced with the server  "},{"title":"GetTime​","type":1,"pageTitle":"MasterClock","url":"api/MasterClock#GetTime","content":"&lt;/&gt; MasterClock:GetTime() → number Returns the sycncronized time "},{"title":"MarketplaceUtils","type":0,"sectionRef":"#","url":"api/MarketplaceUtils","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"MarketplaceUtils","url":"api/MarketplaceUtils#types","content":" "},{"title":"CreatorProductInfo​","type":1,"pageTitle":"MarketplaceUtils","url":"api/MarketplaceUtils#CreatorProductInfo","content":"&lt;/&gt; interface CreatorProductInfo { CreatorType: string-- Either User or Group CreatorTargetId: number-- The ID of the creator user or group Name: string-- The name/username of the creator Id: number-- (Use CreatorTargetId instead) } Product info about the creator. See MarketplaceService.GetProductInfo.  "},{"title":"AssetProductInfo​","type":1,"pageTitle":"MarketplaceUtils","url":"api/MarketplaceUtils#AssetProductInfo","content":"&lt;/&gt; interface AssetProductInfo { Creator: CreatorProductInfo-- A table of information describing the creator of the asset AssetId: number-- If InfoType was Asset, this is the ID of the given asset. AssetTypeId: number-- The type of asset (e.g. place, model, shirt)* IsForSale: boolean-- Describes whether the asset is purchasable IsLimited: boolean-- Describes whether the asset is a &quot;limited item&quot; that is no longer (if ever) sold IsLimitedUnique: boolean-- Describes whether the asset is a &quot;limited unique&quot; (&quot;Limited U&quot;) item IsNew: boolean-- Describes whether the asset is marked as &quot;new&quot; in the catalog Remaining: number-- The remaining number of items a limited unique item may be sold Sales: number-- The number of items the asset has been sold Name: string-- The name shown on the asset's page Description: string-- The description as shown on the asset's page; can be nil if blank PriceInRobux: number-- The cost of purchasing the asset using Robux Created: string-- Timestamp of when the asset was created, e.g. 2018-08-01T17:55:11.98Z Updated: string-- Timestamp of when the asset was last updated by its creator, e.g. 2018-08-01T17:55:11.98Z ContentRatingTypeId: number-- Indicates whether the item is marked as 13+ in catalog MinimumMembershipLevel: number-- The minimum subscription level necessary to purchase the item IsPublicDomain: boolean-- Describes whether the asset can be taken for free } Product info result for assets.  "},{"title":"GamepassOrDeveloperProductInfo​","type":1,"pageTitle":"MarketplaceUtils","url":"api/MarketplaceUtils#GamepassOrDeveloperProductInfo","content":"&lt;/&gt; interface GamepassOrDeveloperProductInfo { Creator: CreatorProductInfo-- A table of information describing the creator of the asset ProductId: number-- If the InfoType was Product, this is the product ID IconImageAssetId: number-- This is the asset ID of the product/pass icon, or 0 if there isn't one Name: string-- The name shown on the asset's page Description: string-- The description as shown on the asset's page; can be nil if blank PriceInRobux: number-- The cost of purchasing the asset using Robux Created: string-- Timestamp of when the asset was created, e.g. 2018-08-01T17:55:11.98Z Updated: string-- Timestamp of when the asset was last updated by its creator, e.g. 2018-08-01T17:55:11.98Z ContentRatingTypeId: number-- Indicates whether the item is marked as 13+ in catalog MinimumMembershipLevel: number-- The minimum subscription level necessary to purchase the item IsPublicDomain: boolean-- Describes whether the asset can be taken for free } Product info result for gamepasses. "},{"title":"Functions​","type":1,"pageTitle":"MarketplaceUtils","url":"api/MarketplaceUtils#functions","content":" "},{"title":"promiseProductInfo​","type":1,"pageTitle":"MarketplaceUtils","url":"api/MarketplaceUtils#promiseProductInfo","content":"&lt;/&gt; MarketplaceUtils.promiseProductInfo( assetId: number, infoType: InfoType ) → Promise&lt;AssetProductInfo | GamepassOrDeveloperProductInfo&gt; Wraps MarketplaceService.GetProductInfo and retrieves information about  "},{"title":"promiseUserOwnsGamePass​","type":1,"pageTitle":"MarketplaceUtils","url":"api/MarketplaceUtils#promiseUserOwnsGamePass","content":"&lt;/&gt; MarketplaceUtils.promiseUserOwnsGamePass( userId: number, gamePassId: number ) → Promise&lt;boolean&gt; Retrieves whether a player owns a gamepass.  "},{"title":"promisePlayerOwnsAsset​","type":1,"pageTitle":"MarketplaceUtils","url":"api/MarketplaceUtils#promisePlayerOwnsAsset","content":"&lt;/&gt; MarketplaceUtils.promisePlayerOwnsAsset( player: Player , assetId: number ) → Promise&lt;boolean&gt; Retrieves whether a player owns an asset, such as a hat or some other item. "},{"title":"MeshUtils","type":0,"sectionRef":"#","url":"api/MeshUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"MeshUtils","url":"api/MeshUtils#functions","content":" "},{"title":"getOrCreateMesh​","type":1,"pageTitle":"MeshUtils","url":"api/MeshUtils#getOrCreateMesh","content":"&lt;/&gt; MeshUtils.getOrCreateMesh(part: BasePart ) → Mesh? Get or create a mesh object for a part "},{"title":"Math","type":0,"sectionRef":"#","url":"api/Math","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Math","url":"api/Math#functions","content":" "},{"title":"map​","type":1,"pageTitle":"Math","url":"api/Math#map","content":"&lt;/&gt; Math.map( num: number, min0: number, max0: number, min1: number, max1: number ) → number Maps a number from one range to another. note Note the mapped value can be outside of the initial range, which is very useful for linear interpolation. print(Math.map(0.1, 0, 1, 1, 0)) --&gt; 0.9   "},{"title":"lerp​","type":1,"pageTitle":"Math","url":"api/Math#lerp","content":"&lt;/&gt; Math.lerp( num0: number,-- Number num1: number,-- Second number percent: number-- The percent ) → number-- The interpolated Interpolates betweeen two numbers, given an percent. The percent is a number in the range that will be used to define how interpolated it is between num0 and num1. print(Math.lerp(-1000, 1000, 0.75)) --&gt; 500   "},{"title":"lawOfCosines​","type":1,"pageTitle":"Math","url":"api/Math#lawOfCosines","content":"&lt;/&gt; Math.lawOfCosines( a: number, b: number, c: number ) → number?-- Returns nil if this cannot be solved for Solving for angle across from c  "},{"title":"round​","type":1,"pageTitle":"Math","url":"api/Math#round","content":"&lt;/&gt; Math.round( number: number, precision: number?-- Defaults to 1 ) → number Round the given number to given precision print(Math.round(72.1, 5)) --&gt; 75   "},{"title":"roundUp​","type":1,"pageTitle":"Math","url":"api/Math#roundUp","content":"&lt;/&gt; Math.roundUp( number: number, precision: number ) → number Rounds up to the given precision  "},{"title":"roundDown​","type":1,"pageTitle":"Math","url":"api/Math#roundDown","content":"&lt;/&gt; Math.roundDown( number: number, precision: number ) → number Rounds down to the given precision "},{"title":"MetricUtils","type":0,"sectionRef":"#","url":"api/MetricUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"MetricUtils","url":"api/MetricUtils#functions","content":" "},{"title":"getSoundDelaySeconds​","type":1,"pageTitle":"MetricUtils","url":"api/MetricUtils#getSoundDelaySeconds","content":"&lt;/&gt; MetricUtils.getSoundDelaySeconds(studs: number) → number-- seconds Computes sound delay for the given studs  "},{"title":"studsToKilometers​","type":1,"pageTitle":"MetricUtils","url":"api/MetricUtils#studsToKilometers","content":"&lt;/&gt; MetricUtils.studsToKilometers(studs: number) → number-- kilometers Converts studs to kilometers  "},{"title":"studsToMeters​","type":1,"pageTitle":"MetricUtils","url":"api/MetricUtils#studsToMeters","content":"&lt;/&gt; MetricUtils.studsToMeters(studs: number) → number-- meters Converts studs to meters  "},{"title":"studsPerSecondToKph​","type":1,"pageTitle":"MetricUtils","url":"api/MetricUtils#studsPerSecondToKph","content":"&lt;/&gt; MetricUtils.studsPerSecondToKph(studsPerSecond: number) → number-- kph Convert from studs per a second (Roblox in-game units) to kph  "},{"title":"studsPerSecondToMph​","type":1,"pageTitle":"MetricUtils","url":"api/MetricUtils#studsPerSecondToMph","content":"&lt;/&gt; MetricUtils.studsPerSecondToMph(studsPerSecond: number) → number-- mph Convert from studs per a second (Roblox in-game units) to mph  "},{"title":"kphToStudsPerSecond​","type":1,"pageTitle":"MetricUtils","url":"api/MetricUtils#kphToStudsPerSecond","content":"&lt;/&gt; MetricUtils.kphToStudsPerSecond(kph: number) → number-- studs per a second Convert mph to studs per a second  "},{"title":"mphToStudsPerSecond​","type":1,"pageTitle":"MetricUtils","url":"api/MetricUtils#mphToStudsPerSecond","content":"&lt;/&gt; MetricUtils.mphToStudsPerSecond(mph: number) → number-- studs per a second Convert mph to studs per a second "},{"title":"ModelAppearance","type":0,"sectionRef":"#","url":"api/ModelAppearance","content":"On this page ModelAppearance Allows the appearance of a model to be overridden. Most commonly used when placing down an object in a building game.","keywords":""},{"title":"MinEntranceVelocityUtils","type":0,"sectionRef":"#","url":"api/MinEntranceVelocityUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"MinEntranceVelocityUtils","url":"api/MinEntranceVelocityUtils#functions","content":" "},{"title":"minimizeEntranceVelocity​","type":1,"pageTitle":"MinEntranceVelocityUtils","url":"api/MinEntranceVelocityUtils#minimizeEntranceVelocity","content":"&lt;/&gt; MinEntranceVelocityUtils.minimizeEntranceVelocity( origin: Vector3 , target: Vector3 , accel: Vector3 ) → number Determines the starting velocity to minimize the velocity at the target for a parabula  "},{"title":"computeEntranceVelocity​","type":1,"pageTitle":"MinEntranceVelocityUtils","url":"api/MinEntranceVelocityUtils#computeEntranceVelocity","content":"&lt;/&gt; MinEntranceVelocityUtils.computeEntranceVelocity( velocity: Vector3 , origin: Vector3 , target: Vector3 , accel: Vector3 ) → Vector3  Computes the velocity the target will enter the target note This may only works for a minimizeEntranceVelocity  "},{"title":"computeEntranceTime​","type":1,"pageTitle":"MinEntranceVelocityUtils","url":"api/MinEntranceVelocityUtils#computeEntranceTime","content":"&lt;/&gt; MinEntranceVelocityUtils.computeEntranceTime( velocity: Vector3 , origin: Vector3 , target: Vector3 , accel: Vector3 ) → number Computes the time stamp the project enters the target note This may only works for a minimizeEntranceVelocity "},{"title":"ModuleProvider","type":0,"sectionRef":"#","url":"api/ModuleProvider","content":"On this page ModuleProvider Creates a service that provides modules from a parent module, either by name, or by list!","keywords":""},{"title":"ModelTransparencyEffect","type":0,"sectionRef":"#","url":"api/ModelTransparencyEffect","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ModelTransparencyEffect","url":"api/ModelTransparencyEffect#functions","content":" "},{"title":"new​","type":1,"pageTitle":"ModelTransparencyEffect","url":"api/ModelTransparencyEffect#new","content":"&lt;/&gt; ModelTransparencyEffect.new( serviceBag: ServiceBag, adornee: Instance , transparencyServiceMethodName: &quot;SetTransparency&quot; | &quot;SetLocalTransparencyModifier&quot; | nil ) → ModelTransparencyEffect   "},{"title":"SetAcceleration​","type":1,"pageTitle":"ModelTransparencyEffect","url":"api/ModelTransparencyEffect#SetAcceleration","content":"&lt;/&gt; ModelTransparencyEffect:SetAcceleration(acceleration: number) → () Sets the acceleration  "},{"title":"SetTransparency​","type":1,"pageTitle":"ModelTransparencyEffect","url":"api/ModelTransparencyEffect#SetTransparency","content":"&lt;/&gt; ModelTransparencyEffect:SetTransparency( transparency: number, doNotAnimate: boolean ) → () Sets the transparency  "},{"title":"IsDoneAnimating​","type":1,"pageTitle":"ModelTransparencyEffect","url":"api/ModelTransparencyEffect#IsDoneAnimating","content":"&lt;/&gt; ModelTransparencyEffect:IsDoneAnimating() → boolean Returns true if animation is done  "},{"title":"FinishTransparencyAnimation​","type":1,"pageTitle":"ModelTransparencyEffect","url":"api/ModelTransparencyEffect#FinishTransparencyAnimation","content":"&lt;/&gt; ModelTransparencyEffect:FinishTransparencyAnimation(callback: function) → () Finishes the transparency animation, and then calls the callback to finish the animation. "},{"title":"ModuleProviderFakeLoader","type":0,"sectionRef":"#","url":"api/ModuleProviderFakeLoader","content":"On this page ModuleProviderFakeLoader Creates a service that provides modules from a parent module, either by name, or by list!","keywords":""},{"title":"MouseOverMixin","type":0,"sectionRef":"#","url":"api/MouseOverMixin","content":"On this page MouseOverMixin Mouse over mixin for general utility button mouse over effects","keywords":""},{"title":"MouseShiftLockService","type":0,"sectionRef":"#","url":"api/MouseShiftLockService","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"MouseShiftLockService","url":"api/MouseShiftLockService#functions","content":" "},{"title":"Init​","type":1,"pageTitle":"MouseShiftLockService","url":"api/MouseShiftLockService#Init","content":"&lt;/&gt; MouseShiftLockService:Init() → () Initializes the mouse shift lock service. Should be done via ServiceBag.  "},{"title":"EnableShiftLock​","type":1,"pageTitle":"MouseShiftLockService","url":"api/MouseShiftLockService#EnableShiftLock","content":"&lt;/&gt; MouseShiftLockService:EnableShiftLock() → () Enables mouse shift lock  "},{"title":"DisableShiftLock​","type":1,"pageTitle":"MouseShiftLockService","url":"api/MouseShiftLockService#DisableShiftLock","content":"&lt;/&gt; MouseShiftLockService:DisableShiftLock() → () Disables mouse shift lock "},{"title":"MultipleClickUtils","type":0,"sectionRef":"#","url":"api/MultipleClickUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"MultipleClickUtils","url":"api/MultipleClickUtils#functions","content":" "},{"title":"observeDoubleClick​","type":1,"pageTitle":"MultipleClickUtils","url":"api/MultipleClickUtils#observeDoubleClick","content":"&lt;/&gt; MultipleClickUtils.observeDoubleClick(gui: GuiBase ) → Observable&lt;InputObject &gt; Observes a double click on the Gui  "},{"title":"getDoubleClickSignal​","type":1,"pageTitle":"MultipleClickUtils","url":"api/MultipleClickUtils#getDoubleClickSignal","content":"&lt;/&gt; MultipleClickUtils.getDoubleClickSignal( maid: Maid, gui: GuiBase ) → Signal&lt;InputObject &gt; Returns a signal that fires when the player clicks or taps on a Gui twice.  "},{"title":"observeMultipleClicks​","type":1,"pageTitle":"MultipleClickUtils","url":"api/MultipleClickUtils#observeMultipleClicks","content":"&lt;/&gt; MultipleClickUtils.observeMultipleClicks( gui: GuiBase , requiredCount: number ) → Observable&lt;InputObject &gt; Observes multiple clicks click on the Gui  "},{"title":"onMultipleClicks​","type":1,"pageTitle":"MultipleClickUtils","url":"api/MultipleClickUtils#onMultipleClicks","content":"&lt;/&gt; MultipleClickUtils.onMultipleClicks(requiredCount: number) → (gui: GuiBase ) → Observable&lt;InputObject &gt; For use in Blend. Observes multiple clicks. Blend.New &quot;TextButton&quot; { [MultipleClickUtils.onMultipleClicks(3)] = function() print(&quot;Clicked&quot;) end; };   "},{"title":"getMultipleClickSignal​","type":1,"pageTitle":"MultipleClickUtils","url":"api/MultipleClickUtils#getMultipleClickSignal","content":"&lt;/&gt; MultipleClickUtils.getMultipleClickSignal( maid: Maid, gui: GuiBase , requiredCount: number ) → Signal&lt;InputObject &gt; Returns a signal that fires when the player clicks or taps on a Gui a certain amount of times. "},{"title":"NetworkOwnerService","type":0,"sectionRef":"#","url":"api/NetworkOwnerService","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"NetworkOwnerService","url":"api/NetworkOwnerService#functions","content":" "},{"title":"Init​","type":1,"pageTitle":"NetworkOwnerService","url":"api/NetworkOwnerService#Init","content":"&lt;/&gt; NetworkOwnerService:Init() → () Initializes the NetworkOwnerService. Should be done via ServiceBag.  "},{"title":"AddSetNetworkOwnerHandle​","type":1,"pageTitle":"NetworkOwnerService","url":"api/NetworkOwnerService#AddSetNetworkOwnerHandle","content":"&lt;/&gt; NetworkOwnerService:AddSetNetworkOwnerHandle( part: BasePart , player: Player ) → () Tries to set the network owner handle to the given player. "},{"title":"NetworkOwnerUtils","type":0,"sectionRef":"#","url":"api/NetworkOwnerUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"NetworkOwnerUtils","url":"api/NetworkOwnerUtils#functions","content":" "},{"title":"trySetNetworkOwner​","type":1,"pageTitle":"NetworkOwnerUtils","url":"api/NetworkOwnerUtils#trySetNetworkOwner","content":"&lt;/&gt; NetworkOwnerUtils.trySetNetworkOwner( part: BasePart , player: Player ) → () Tries to set the network owner. Otherwise warns about failure.  "},{"title":"getNetworkOwnerPlayer​","type":1,"pageTitle":"NetworkOwnerUtils","url":"api/NetworkOwnerUtils#getNetworkOwnerPlayer","content":"&lt;/&gt; NetworkOwnerUtils.getNetworkOwnerPlayer(part: BasePart ) → Player?  Tries to get the network owner a part. If this can't be retrieved it defaults to nil, which is sort of like pretending to be a server.  "},{"title":"isNetworkOwner​","type":1,"pageTitle":"NetworkOwnerUtils","url":"api/NetworkOwnerUtils#isNetworkOwner","content":"&lt;/&gt; NetworkOwnerUtils.isNetworkOwner( part: BasePart , player: Player? -- nil for server ) → boolean Returns whether or not a player is a network owner. If it cannot be retrieved then it will return false.  "},{"title":"isServerNetworkOwner​","type":1,"pageTitle":"NetworkOwnerUtils","url":"api/NetworkOwnerUtils#isServerNetworkOwner","content":"&lt;/&gt; NetworkOwnerUtils.isServerNetworkOwner(part: BasePart ) → boolean Returns whether or not the server is the network owner. Returns false if it can't be retrieved.  "},{"title":"tryToGetNetworkOwner​","type":1,"pageTitle":"NetworkOwnerUtils","url":"api/NetworkOwnerUtils#tryToGetNetworkOwner","content":"&lt;/&gt; NetworkOwnerUtils.tryToGetNetworkOwner(part: BasePart ) → ( boolean,-- true if retrieved fine, false otherwise Player? -- player that is owner. )  "},{"title":"NetworkRopeUtils","type":0,"sectionRef":"#","url":"api/NetworkRopeUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"NetworkRopeUtils","url":"api/NetworkRopeUtils#functions","content":" "},{"title":"hintSharedMechanism​","type":1,"pageTitle":"NetworkRopeUtils","url":"api/NetworkRopeUtils#hintSharedMechanism","content":"&lt;/&gt; NetworkRopeUtils.hintSharedMechanism( part0: BasePart , part1: BasePart ) → Maid Hints that the two parts share a mechanism. This is sort of a physics hack since Roblox will keep mechanisms on the same network owner.  "},{"title":"clearNetworkOwnerHints​","type":1,"pageTitle":"NetworkRopeUtils","url":"api/NetworkRopeUtils#clearNetworkOwnerHints","content":"&lt;/&gt; NetworkRopeUtils.clearNetworkOwnerHints(part: Part ) → () Removes all network owner hints from a given part "},{"title":"NumberRangeUtils","type":0,"sectionRef":"#","url":"api/NumberRangeUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"NumberRangeUtils","url":"api/NumberRangeUtils#functions","content":" "},{"title":"scale​","type":1,"pageTitle":"NumberRangeUtils","url":"api/NumberRangeUtils#scale","content":"&lt;/&gt; NumberRangeUtils.scale( range: NumberRange , scale: number ) → NumberRange  Scales a number range by the given amount. "},{"title":"NoCollisionConstraintUtils","type":0,"sectionRef":"#","url":"api/NoCollisionConstraintUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"NoCollisionConstraintUtils","url":"api/NoCollisionConstraintUtils#functions","content":" "},{"title":"create​","type":1,"pageTitle":"NoCollisionConstraintUtils","url":"api/NoCollisionConstraintUtils#create","content":"&lt;/&gt; NoCollisionConstraintUtils.create( part0: BasePart , part1: BasePart ) → NoCollisionConstraint  Creates a new NoCollisionConstraint between the two parts.  "},{"title":"tempNoCollision​","type":1,"pageTitle":"NoCollisionConstraintUtils","url":"api/NoCollisionConstraintUtils#tempNoCollision","content":"&lt;/&gt; NoCollisionConstraintUtils.tempNoCollision( parts0: {BasePart }, parts1: {BasePart } ) → Maid Creates NoCollisionConstraint objects between the two part lists, and adds them all to a Maid for cleanup.  "},{"title":"createBetweenPartsLists​","type":1,"pageTitle":"NoCollisionConstraintUtils","url":"api/NoCollisionConstraintUtils#createBetweenPartsLists","content":"&lt;/&gt; NoCollisionConstraintUtils.createBetweenPartsLists( parts0: {BasePart }, parts1: {BasePart } ) → {NoCollisionConstraint } Creates NoCollisionConstraint objects between the two part lists.  "},{"title":"createBetweenMechanisms​","type":1,"pageTitle":"NoCollisionConstraintUtils","url":"api/NoCollisionConstraintUtils#createBetweenMechanisms","content":"&lt;/&gt; NoCollisionConstraintUtils.createBetweenMechanisms( adornee0: BasePart , adornee1: BasePart ) → {NoCollisionConstraint } Creates NoCollisionConstraint objects between the two mechanisms. "},{"title":"NumberToInputKeyUtils","type":0,"sectionRef":"#","url":"api/NumberToInputKeyUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"NumberToInputKeyUtils","url":"api/NumberToInputKeyUtils#functions","content":" "},{"title":"getInputsForNumber​","type":1,"pageTitle":"NumberToInputKeyUtils","url":"api/NumberToInputKeyUtils#getInputsForNumber","content":"&lt;/&gt; NumberToInputKeyUtils.getInputsForNumber(number: number) → {Enum.KeyCode} Retrieves inputs for a given number. "},{"title":"NumberSequenceUtils","type":0,"sectionRef":"#","url":"api/NumberSequenceUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"NumberSequenceUtils","url":"api/NumberSequenceUtils#functions","content":" "},{"title":"scale​","type":1,"pageTitle":"NumberSequenceUtils","url":"api/NumberSequenceUtils#scale","content":"&lt;/&gt; NumberSequenceUtils.scale( sequence: NumberSequence , scale: number ) → () Scales a number sequence value by the set amount  "},{"title":"stripe​","type":1,"pageTitle":"NumberSequenceUtils","url":"api/NumberSequenceUtils#stripe","content":"&lt;/&gt; NumberSequenceUtils.stripe( stripes: number, backgroundTransparency: number,-- [0, 1] stripeTransparency: number,-- [0, 1] percentStripeThickness: number,-- [0, 1] percentOffset: number ) → NumberSequence  Generates a number sequence with stripes, which can be used in a variety of ways. "},{"title":"ObservableMapSet","type":0,"sectionRef":"#","url":"api/ObservableMapSet","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ObservableMapSet","url":"api/ObservableMapSet#functions","content":" "},{"title":"Destroy​","type":1,"pageTitle":"ObservableMapSet","url":"api/ObservableMapSet#Destroy","content":"&lt;/&gt; ObservableMapSet:Destroy() → () Cleans up the ObservableMapSet and sets the metatable to nil. "},{"title":"Observable","type":0,"sectionRef":"#","url":"api/Observable","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Observable","url":"api/Observable#functions","content":" "},{"title":"isObservable​","type":1,"pageTitle":"Observable","url":"api/Observable#isObservable","content":"&lt;/&gt; Observable.isObservable(item: any) → boolean Returns whether or not a value is an observable.  "},{"title":"new​","type":1,"pageTitle":"Observable","url":"api/Observable#new","content":"&lt;/&gt; Observable.new(onSubscribe: (subscription: Subscription&lt;T&gt;) → MaidTask) → Observable&lt;T&gt; Constructs a new Observable local function observeAllChildren(parent) return Observable.new(function(sub) local maid = Maid.new() for _, item in pairs(parent:GetChildren()) do sub:Fire(item) end maid:GiveTask(parent.ChildAdded:Connect(function(child) sub:Fire(child) end)) return maid end) end -- Prints out all current children, and whenever a new -- child is added to workspace local maid = Maid.new() maid:GiveTask(observeAllChildren(workspace):Subscribe(print))   "},{"title":"Pipe​","type":1,"pageTitle":"Observable","url":"api/Observable#Pipe","content":"&lt;/&gt; Observable:Pipe(transformers: {(observable: Observable&lt;T&gt;) → Observable&lt;T&gt;}) → Observable&lt;T&gt; Transforms the observable with the following transformers Rx.of(1, 2, 3):Pipe({ Rx.map(function(result) return result + 1 end); Rx.map(function(value) return (&quot;%0.2f&quot;):format(value) end); }):Subscribe(print) --&gt; 2.00 --&gt; 3.00 --&gt; 4.00   "},{"title":"Subscribe​","type":1,"pageTitle":"Observable","url":"api/Observable#Subscribe","content":"&lt;/&gt; Observable:Subscribe( fireCallback: function?, failCallback: function?, completeCallback: function? ) → MaidTask Subscribes immediately, fireCallback may return a maid (or a task a maid can handle) to clean up "},{"title":"ObservableSet","type":0,"sectionRef":"#","url":"api/ObservableSet","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"ObservableSet","url":"api/ObservableSet#properties","content":" "},{"title":"ItemAdded​","type":1,"pageTitle":"ObservableSet","url":"api/ObservableSet#ItemAdded","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ObservableSet.ItemAdded: Signal&lt;T&gt; Fires when an item is added  "},{"title":"ItemRemoved​","type":1,"pageTitle":"ObservableSet","url":"api/ObservableSet#ItemRemoved","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ObservableSet.ItemRemoved: Signal&lt;T&gt; Fires when an item is removed.  "},{"title":"CountChanged​","type":1,"pageTitle":"ObservableSet","url":"api/ObservableSet#CountChanged","content":"&lt;/&gt; ObservableSet.CountChanged: RBXScriptSignal  Fires when the count changes. "},{"title":"Functions​","type":1,"pageTitle":"ObservableSet","url":"api/ObservableSet#functions","content":" "},{"title":"new​","type":1,"pageTitle":"ObservableSet","url":"api/ObservableSet#new","content":"&lt;/&gt; ObservableSet.new() → ObservableSet Constructs a new ObservableSet  "},{"title":"isObservableSet​","type":1,"pageTitle":"ObservableSet","url":"api/ObservableSet#isObservableSet","content":"&lt;/&gt; ObservableSet.isObservableSet(value: any) → boolean Returns whether the set is an observable set  "},{"title":"ObserveItemsBrio​","type":1,"pageTitle":"ObservableSet","url":"api/ObservableSet#ObserveItemsBrio","content":"&lt;/&gt; ObservableSet:ObserveItemsBrio() → Observable&lt;Brio&lt;T&gt;&gt; Observes all items in the set  "},{"title":"Contains​","type":1,"pageTitle":"ObservableSet","url":"api/ObservableSet#Contains","content":"&lt;/&gt; ObservableSet:Contains(item: T) → boolean Returns whether the set contains the item  "},{"title":"GetCount​","type":1,"pageTitle":"ObservableSet","url":"api/ObservableSet#GetCount","content":"&lt;/&gt; ObservableSet:GetCount() → number Gets the count of items in the set  "},{"title":"ObserveCount​","type":1,"pageTitle":"ObservableSet","url":"api/ObservableSet#ObserveCount","content":"&lt;/&gt; ObservableSet:ObserveCount() → Observable&lt;number&gt; Observes the count of the set  "},{"title":"Add​","type":1,"pageTitle":"ObservableSet","url":"api/ObservableSet#Add","content":"&lt;/&gt; ObservableSet:Add(item: T) → () Adds the item to the set if it does not exists.  "},{"title":"Remove​","type":1,"pageTitle":"ObservableSet","url":"api/ObservableSet#Remove","content":"&lt;/&gt; ObservableSet:Remove(item: T) → () Removes the item from the set if it exists.  "},{"title":"GetList​","type":1,"pageTitle":"ObservableSet","url":"api/ObservableSet#GetList","content":"&lt;/&gt; ObservableSet:GetList() → {T} Gets a list of all entries.  "},{"title":"Destroy​","type":1,"pageTitle":"ObservableSet","url":"api/ObservableSet#Destroy","content":"&lt;/&gt; ObservableSet:Destroy() → () Cleans up the ObservableSet and sets the metatable to nil. "},{"title":"Octree","type":0,"sectionRef":"#","url":"api/Octree","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Octree","url":"api/Octree#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Octree","url":"api/Octree#new","content":"&lt;/&gt; Octree.new() → Octree&lt;T&gt; Constructs a new Octree.  "},{"title":"GetAllNodes​","type":1,"pageTitle":"Octree","url":"api/Octree#GetAllNodes","content":"&lt;/&gt; Octree:GetAllNodes() → {OctreeNode&lt;T&gt;} Returns all octree nodes stored in the octree! local octree = Octree.new() octree:CreateNode(Vector3.new(0, 0, 0), &quot;Hi&quot;) octree:CreateNode(Vector3.new(0, 0, 0), &quot;Bob&quot;) print(octree:GetAllNodes()) --&gt; { &quot;Hi&quot;, &quot;Bob&quot; } Order is not guaranteed. warning If you have 100,000 nodes in your octree, this is going to be very slow.  "},{"title":"CreateNode​","type":1,"pageTitle":"Octree","url":"api/Octree#CreateNode","content":"&lt;/&gt; Octree:CreateNode( position: Vector3 , object: T ) → OctreeNode&lt;T&gt; Creates a new OctreeNode at the given position which can be retrieved tip Be sure to call :Destroy() on a node if the data becomes stale. Note that this is not necessary if the whole octree is removed from memory. local octree = Octree.new() octree:CreateNode(Vector3.new(0, 0, 0), &quot;A&quot;) octree:CreateNode(Vector3.new(0, 0, 0), &quot;B&quot;)   "},{"title":"RadiusSearch​","type":1,"pageTitle":"Octree","url":"api/Octree#RadiusSearch","content":"&lt;/&gt; Octree:RadiusSearch( position: Vector3 , radius: number ) → ( {T},-- Objects found {number}-- Distances squared ) Searches at the position and radius for any objects that may be within this radius. local octree = Octree.new() octree:CreateNode(Vector3.new(0, 0, 0), &quot;A&quot;) octree:CreateNode(Vector3.new(0, 0, 0), &quot;B&quot;) octree:CreateNode(Vector3.new(0, 0, 1000), &quot;C&quot;) print(octree:RadiusSearch(Vector3.new(0, 0, 0), 100)) --&gt; { &quot;A&quot;, &quot;B&quot; }   "},{"title":"KNearestNeighborsSearch​","type":1,"pageTitle":"Octree","url":"api/Octree#KNearestNeighborsSearch","content":"&lt;/&gt; Octree:KNearestNeighborsSearch( position: Vector3 , k: number,-- Number of objects to find radius: number ) → ( {any},-- Objects found {number}-- Distances squared ) Searches at the position and radius for any objects that may be within this radius. Returns the knearest entries. The closest entities will be first in the list. "},{"title":"OctreeNode","type":0,"sectionRef":"#","url":"api/OctreeNode","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"OctreeNode","url":"api/OctreeNode#functions","content":" "},{"title":"KNearestNeighborsSearch​","type":1,"pageTitle":"OctreeNode","url":"api/OctreeNode#KNearestNeighborsSearch","content":"&lt;/&gt; OctreeNode:KNearestNeighborsSearch( k: number,-- The number to retrieve radius: number-- The radius to search in ) → ( {T},-- Objects found, including self {number}-- Distances squared ) Finds the nearest neighbors to this node within the radius local octree = Octree.new() local node = octree:CreateNode(Vector3.new(0, 0, 0), &quot;A&quot;) octree:CreateNode(Vector3.new(0, 0, 5), &quot;B&quot;) print(octree:KNearestNeighborsSearch(10, 100)) --&gt; { &quot;A&quot;, &quot;B&quot; } { 0, 25 }   "},{"title":"GetObject​","type":1,"pageTitle":"OctreeNode","url":"api/OctreeNode#GetObject","content":"&lt;/&gt; OctreeNode:GetObject() → T Returns the object stored in the octree local octree = Octree.new() local node = octree:CreateNode(Vector3.new(0, 0, 0), &quot;A&quot;) print(octree:GetObject()) --&gt; &quot;A&quot;   "},{"title":"RadiusSearch​","type":1,"pageTitle":"OctreeNode","url":"api/OctreeNode#RadiusSearch","content":"&lt;/&gt; OctreeNode:RadiusSearch( radius: number-- The radius to search in ) → ( {any},-- Objects found {number}-- Distances squared ) Finds the nearest neighbors to the octree node  "},{"title":"GetPosition​","type":1,"pageTitle":"OctreeNode","url":"api/OctreeNode#GetPosition","content":"&lt;/&gt; OctreeNode:GetPosition() → Vector3  Retrieves the position  "},{"title":"GetRawPosition​","type":1,"pageTitle":"OctreeNode","url":"api/OctreeNode#GetRawPosition","content":"&lt;/&gt; OctreeNode:GetRawPosition() → ( number,-- px number,-- py number-- pz ) Retrieves the as px, py, pz  "},{"title":"SetPosition​","type":1,"pageTitle":"OctreeNode","url":"api/OctreeNode#SetPosition","content":"&lt;/&gt; OctreeNode:SetPosition(position: Vector3 ) → () Sets the position of the octree nodes and updates the octree accordingly local octree = Octree.new() local node = octree:CreateNode(Vector3.new(0, 0, 0), &quot;A&quot;) print(octree:RadiusSearch(Vector3.new(0, 0, 0), 100)) --&gt; { &quot;A&quot; } node:SetPosition(Vector3.new(1000, 0, 0)) print(octree:RadiusSearch(Vector3.new(0, 0, 0), 100)) --&gt; {}   "},{"title":"Destroy​","type":1,"pageTitle":"OctreeNode","url":"api/OctreeNode#Destroy","content":"&lt;/&gt; OctreeNode:Destroy() → () Removes the OctreeNode from the octree "},{"title":"onRenderStepFrame","type":0,"sectionRef":"#","url":"api/onRenderStepFrame","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"onRenderStepFrame","url":"api/onRenderStepFrame#functions","content":" "},{"title":"onRenderStepFrame​","type":1,"pageTitle":"onRenderStepFrame","url":"api/onRenderStepFrame#onRenderStepFrame","content":"&lt;/&gt; onRenderStepFrame.onRenderStepFrame(priority: number) → MaidTask Executes code at a specific point in render step priority queue. "},{"title":"OctreeRegionUtils","type":0,"sectionRef":"#","url":"api/OctreeRegionUtils","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"OctreeRegionUtils","url":"api/OctreeRegionUtils#types","content":" "},{"title":"OctreeVector3​","type":1,"pageTitle":"OctreeRegionUtils","url":"api/OctreeRegionUtils#OctreeVector3","content":"&lt;/&gt; type OctreeVector3 = { [1]: number, [2]: number, [3]: number } A Vector3 equivalent for octrees. This type is primarily internal and used for faster access than a Vector3.  "},{"title":"OctreeRegion<T>​","type":1,"pageTitle":"OctreeRegionUtils","url":"api/OctreeRegionUtils#OctreeRegion<T>","content":"&lt;/&gt; interface OctreeRegion&lt;T&gt; { subRegions: {OctreeRegion&lt;T&gt;} lowerBounds: OctreeVector3 upperBounds: OctreeVector3 position: OctreeVector3 size: OctreeVector3 parent: OctreeRegion&lt;T&gt;? parentIndex: number depth: number nodes: {OctreeNode&lt;T&gt;} node_count: number } An internal region which stores the data. "},{"title":"Functions​","type":1,"pageTitle":"OctreeRegionUtils","url":"api/OctreeRegionUtils#functions","content":" "},{"title":"visualize​","type":1,"pageTitle":"OctreeRegionUtils","url":"api/OctreeRegionUtils#visualize","content":"&lt;/&gt; OctreeRegionUtils.visualize(region: OctreeRegion&lt;T&gt;) → MaidTask Visualizes the octree region.  "},{"title":"create​","type":1,"pageTitle":"OctreeRegionUtils","url":"api/OctreeRegionUtils#create","content":"&lt;/&gt; OctreeRegionUtils.create( px: number, py: number, pz: number, sx: number, sy: number, sz: number, parent: OctreeRegion&lt;T&gt;?, parentIndex: number? ) → OctreeRegion&lt;T&gt; Creates a new OctreeRegion  "},{"title":"addNode​","type":1,"pageTitle":"OctreeRegionUtils","url":"api/OctreeRegionUtils#addNode","content":"&lt;/&gt; OctreeRegionUtils.addNode( lowestSubregion: OctreeRegion&lt;T&gt;, node: OctreeNode ) → () Adds a node to the lowest subregion  "},{"title":"moveNode​","type":1,"pageTitle":"OctreeRegionUtils","url":"api/OctreeRegionUtils#moveNode","content":"&lt;/&gt; OctreeRegionUtils.moveNode( fromLowest: OctreeRegion&lt;T&gt;, toLowest: OctreeRegion&lt;T&gt;, node: OctreeNode ) → () Moves a node from one region to another  "},{"title":"removeNode​","type":1,"pageTitle":"OctreeRegionUtils","url":"api/OctreeRegionUtils#removeNode","content":"&lt;/&gt; OctreeRegionUtils.removeNode( lowestSubregion: OctreeRegion&lt;T&gt;, node: OctreeNode ) → () Removes a node from the given region  "},{"title":"getSearchRadiusSquared​","type":1,"pageTitle":"OctreeRegionUtils","url":"api/OctreeRegionUtils#getSearchRadiusSquared","content":"&lt;/&gt; OctreeRegionUtils.getSearchRadiusSquared( radius: number, diameter: number, epsilon: number ) → number Retrieves the search radius for a given radius given the region diameter  "},{"title":"getNeighborsWithinRadius​","type":1,"pageTitle":"OctreeRegionUtils","url":"api/OctreeRegionUtils#getNeighborsWithinRadius","content":"&lt;/&gt; OctreeRegionUtils.getNeighborsWithinRadius( region: OctreeRegion&lt;T&gt;, radius: number, px: number, py: number, pz: number, objectsFound: {T}, nodeDistances2: {number}, maxDepth: number ) → () Adds all octree nod values to objectsFound See basic algorithm:https://github.com/PointCloudLibrary/pcl/blob/29f192af57a3e7bdde6ff490669b211d8148378f/octree/include/pcl/octree/impl/octree_search.hpp#L309  "},{"title":"getOrCreateSubRegionAtDepth​","type":1,"pageTitle":"OctreeRegionUtils","url":"api/OctreeRegionUtils#getOrCreateSubRegionAtDepth","content":"&lt;/&gt; OctreeRegionUtils.getOrCreateSubRegionAtDepth( region: OctreeRegion&lt;T&gt;,-- Top level region px: number, py: number, pz: number, maxDepth: number ) → OctreeRegion&lt;T&gt; Recursively ensures that a subregion exists at a given depth, and returns that region for usage.  "},{"title":"createSubRegion​","type":1,"pageTitle":"OctreeRegionUtils","url":"api/OctreeRegionUtils#createSubRegion","content":"&lt;/&gt; OctreeRegionUtils.createSubRegion( parentRegion: OctreeRegion&lt;T&gt;, parentIndex: number ) → OctreeRegion&lt;T&gt; Creates a subregion for an octree.  "},{"title":"inRegionBounds​","type":1,"pageTitle":"OctreeRegionUtils","url":"api/OctreeRegionUtils#inRegionBounds","content":"&lt;/&gt; OctreeRegionUtils.inRegionBounds( region: OctreeRegion&lt;T&gt;, px: number, py: number, pz: number ) → boolean Computes whether a region is in bounds. Consider regions to be range [px, y).  "},{"title":"getSubRegionIndex​","type":1,"pageTitle":"OctreeRegionUtils","url":"api/OctreeRegionUtils#getSubRegionIndex","content":"&lt;/&gt; OctreeRegionUtils.getSubRegionIndex( region: OctreeRegion&lt;T&gt;, px: number, py: number, pz: number ) → number Gets a subregion's internal index.  "},{"title":"getTopLevelRegionHash​","type":1,"pageTitle":"OctreeRegionUtils","url":"api/OctreeRegionUtils#getTopLevelRegionHash","content":"&lt;/&gt; OctreeRegionUtils.getTopLevelRegionHash( cx: number, cy: number, cz: number ) → number This definitely collides fairly consistently See: https://stackoverflow.com/questions/5928725/hashing-2d-3d-and-nd-vectors  "},{"title":"getTopLevelRegionCellIndex​","type":1,"pageTitle":"OctreeRegionUtils","url":"api/OctreeRegionUtils#getTopLevelRegionCellIndex","content":"&lt;/&gt; OctreeRegionUtils.getTopLevelRegionCellIndex( maxRegionSize: OctreeVector3, px: number, py: number, pz: number ) → ( number,-- rpx number,-- rpy number-- rpz ) Computes the index for a top level cell given a position  "},{"title":"getTopLevelRegionPosition​","type":1,"pageTitle":"OctreeRegionUtils","url":"api/OctreeRegionUtils#getTopLevelRegionPosition","content":"&lt;/&gt; OctreeRegionUtils.getTopLevelRegionPosition( maxRegionSize: OctreeVector3, cx: number, cy: number, cz: number ) → ( number, number, number ) Computes a top-level region's position  "},{"title":"areEqualTopRegions​","type":1,"pageTitle":"OctreeRegionUtils","url":"api/OctreeRegionUtils#areEqualTopRegions","content":"&lt;/&gt; OctreeRegionUtils.areEqualTopRegions( region: OctreeRegion&lt;T&gt;, rpx: number, rpy: number, rpz: number ) → boolean Given a top-level region, returns if the region position are equal to this region  "},{"title":"findRegion​","type":1,"pageTitle":"OctreeRegionUtils","url":"api/OctreeRegionUtils#findRegion","content":"&lt;/&gt; OctreeRegionUtils.findRegion( regionHashMap: {[number]: {OctreeRegion&lt;T&gt;}}, maxRegionSize: OctreeVector3, px: number, py: number, pz: number ) → OctreeRegion3? Given a world space position, finds the current region in the hashmap  "},{"title":"getOrCreateRegion​","type":1,"pageTitle":"OctreeRegionUtils","url":"api/OctreeRegionUtils#getOrCreateRegion","content":"&lt;/&gt; OctreeRegionUtils.getOrCreateRegion( regionHashMap: {[number]: {OctreeRegion&lt;T&gt;}}, maxRegionSize: OctreeVector3, px: number, py: number, pz: number ) → OctreeRegion&lt;T&gt; Gets the current region for a position, or creates a new one. "},{"title":"onSteppedFrame","type":0,"sectionRef":"#","url":"api/onSteppedFrame","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"onSteppedFrame","url":"api/onSteppedFrame#functions","content":" "},{"title":"onSteppedFrame​","type":1,"pageTitle":"onSteppedFrame","url":"api/onSteppedFrame#onSteppedFrame","content":"&lt;/&gt; onSteppedFrame.onSteppedFrame(func: function) → RBXScriptConnection  Executes code at a specific point in Roblox's engine. "},{"title":"optional","type":0,"sectionRef":"#","url":"api/optional","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"optional","url":"api/optional#functions","content":" "},{"title":"optional​","type":1,"pageTitle":"optional","url":"api/optional#optional","content":"&lt;/&gt; optional.optional( _require: function, _module: string | number | Instance ) → T? Optional require, if the instance does not exist, or errors while loading, then nil is returned. "},{"title":"OrthogonalUtils","type":0,"sectionRef":"#","url":"api/OrthogonalUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"OrthogonalUtils","url":"api/OrthogonalUtils#functions","content":" "},{"title":"decomposeCFrameToVectors​","type":1,"pageTitle":"OrthogonalUtils","url":"api/OrthogonalUtils#decomposeCFrameToVectors","content":"&lt;/&gt; OrthogonalUtils.decomposeCFrameToVectors(cframe: CFrame ) → () Decompose the CFrame return { Vector3 }  "},{"title":"getClosestVector​","type":1,"pageTitle":"OrthogonalUtils","url":"api/OrthogonalUtils#getClosestVector","content":"&lt;/&gt; OrthogonalUtils.getClosestVector( options: {Vector3 },-- normals unitVector: Vector3 ) → () Gets the closest vectors to another vector. return Vector3?  "},{"title":"snapCFrameTo​","type":1,"pageTitle":"OrthogonalUtils","url":"api/OrthogonalUtils#snapCFrameTo","content":"&lt;/&gt; OrthogonalUtils.snapCFrameTo( cframe: CFrame , snapToCFrame: CFrame ) → () Snaps a CFrame to another one return CFrame "},{"title":"OverriddenProperty","type":0,"sectionRef":"#","url":"api/OverriddenProperty","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"OverriddenProperty","url":"api/OverriddenProperty#functions","content":" "},{"title":"new​","type":1,"pageTitle":"OverriddenProperty","url":"api/OverriddenProperty#new","content":"&lt;/&gt; OverriddenProperty.new( robloxInstance: Instance , propertyName: string, replicateRate: number?,-- Optional replication rate and callback replicateCallback: (T)? ) → OverriddenProperty Constructs a new OverriddenProperty.  "},{"title":"Set​","type":1,"pageTitle":"OverriddenProperty","url":"api/OverriddenProperty#Set","content":"&lt;/&gt; OverriddenProperty:Set(value: T) → () Sets the property  "},{"title":"Get​","type":1,"pageTitle":"OverriddenProperty","url":"api/OverriddenProperty#Get","content":"&lt;/&gt; OverriddenProperty:Get() → T Gets the property "},{"title":"PackageInfoUtils","type":0,"sectionRef":"#","url":"api/PackageInfoUtils","content":"On this page PackageInfoUtils This item is only intended to be used by the module's authors. Private Utility methods to build a virtual graph of the existing package information set","keywords":""},{"title":"ParticleEngineClient","type":0,"sectionRef":"#","url":"api/ParticleEngineClient","content":"On this page ParticleEngineClient This item only works when running on the client. Client Legacy code written by AxisAngles to simulate particles with Guis","keywords":""},{"title":"ParticleEngineConstants","type":0,"sectionRef":"#","url":"api/ParticleEngineConstants","content":"On this page ParticleEngineConstants","keywords":""},{"title":"ParticleEngineServer","type":0,"sectionRef":"#","url":"api/ParticleEngineServer","content":"On this page ParticleEngineServer This item only works when running on the server. Server Handles replication on the server side","keywords":""},{"title":"ParticlePlayer","type":0,"sectionRef":"#","url":"api/ParticlePlayer","content":"On this page ParticlePlayer Plays particle effects for players","keywords":""},{"title":"PartTouchingCalculator","type":0,"sectionRef":"#","url":"api/PartTouchingCalculator","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PartTouchingCalculator","url":"api/PartTouchingCalculator#functions","content":" "},{"title":"new​","type":1,"pageTitle":"PartTouchingCalculator","url":"api/PartTouchingCalculator#new","content":"&lt;/&gt; PartTouchingCalculator.new() → () Constructs a new PartTouchingCalculator  "},{"title":"GetTouching​","type":1,"pageTitle":"PartTouchingCalculator","url":"api/PartTouchingCalculator#GetTouching","content":"&lt;/&gt; PartTouchingCalculator:GetTouching( basePart: BasePart ,-- item to identify touching. Geometry matters padding: number-- studs of padding around the part ) → {BasePart } Retrieves parts touching a base part "},{"title":"PartTouchingRenderer","type":0,"sectionRef":"#","url":"api/PartTouchingRenderer","content":"On this page PartTouchingRenderer Renders touching parts from the PartTouchingCalculator","keywords":""},{"title":"PathfindingUtils","type":0,"sectionRef":"#","url":"api/PathfindingUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PathfindingUtils","url":"api/PathfindingUtils#functions","content":" "},{"title":"promiseComputeAsync​","type":1,"pageTitle":"PathfindingUtils","url":"api/PathfindingUtils#promiseComputeAsync","content":"&lt;/&gt; PathfindingUtils.promiseComputeAsync( path: Path , start: Vector3 , finish: Vector3 ) → Promise&lt;Path &gt; Computes a path wrapped in a promise.  "},{"title":"promiseCheckOcclusion​","type":1,"pageTitle":"PathfindingUtils","url":"api/PathfindingUtils#promiseCheckOcclusion","content":"&lt;/&gt; PathfindingUtils.promiseCheckOcclusion( path: Path , startIndex: number ) → Promise&lt;number&gt; Checks occlusion wrapped in a promise  "},{"title":"visualizePath​","type":1,"pageTitle":"PathfindingUtils","url":"api/PathfindingUtils#visualizePath","content":"&lt;/&gt; PathfindingUtils.visualizePath(path: Path ) → MaidTask Visualizes the current waypoints in the path. Will put the visualization in Draw libraries default parent. "},{"title":"PendingPromiseTracker","type":0,"sectionRef":"#","url":"api/PendingPromiseTracker","content":"On this page PendingPromiseTracker Tracks pending promises","keywords":""},{"title":"PermissionProviderConstants","type":0,"sectionRef":"#","url":"api/PermissionProviderConstants","content":"On this page PermissionProviderConstants Constants for the permission system","keywords":""},{"title":"PermissionProviderClient","type":0,"sectionRef":"#","url":"api/PermissionProviderClient","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PermissionProviderClient","url":"api/PermissionProviderClient#functions","content":" "},{"title":"PromiseIsAdmin​","type":1,"pageTitle":"PermissionProviderClient","url":"api/PermissionProviderClient#PromiseIsAdmin","content":"&lt;/&gt; PermissionProviderClient:PromiseIsAdmin() → Promise&lt;boolean&gt; Returns whether the local player is an admin. "},{"title":"PermissionProviderUtils","type":0,"sectionRef":"#","url":"api/PermissionProviderUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PermissionProviderUtils","url":"api/PermissionProviderUtils#functions","content":" "},{"title":"createGroupRankConfig​","type":1,"pageTitle":"PermissionProviderUtils","url":"api/PermissionProviderUtils#createGroupRankConfig","content":"&lt;/&gt; PermissionProviderUtils.createGroupRankConfig(config: { groupId: number, minAdminRequiredRank: number, minCreatorRequiredRank: number }) → table Creates a group rank config  "},{"title":"createSingleUserConfig​","type":1,"pageTitle":"PermissionProviderUtils","url":"api/PermissionProviderUtils#createSingleUserConfig","content":"&lt;/&gt; PermissionProviderUtils.createSingleUserConfig(config: {userId: number}) → table Creates a single user config  "},{"title":"createConfigFromGame​","type":1,"pageTitle":"PermissionProviderUtils","url":"api/PermissionProviderUtils#createConfigFromGame","content":"&lt;/&gt; PermissionProviderUtils.createConfigFromGame() → table Creates an automatic configuration from the game. "},{"title":"PermissionService","type":0,"sectionRef":"#","url":"api/PermissionService","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PermissionService","url":"api/PermissionService#functions","content":" "},{"title":"Init​","type":1,"pageTitle":"PermissionService","url":"api/PermissionService#Init","content":"&lt;/&gt; PermissionService:Init(_serviceBag: ServiceBag) → () Initializes the service. Should be done via ServiceBag.  "},{"title":"SetProviderFromConfig​","type":1,"pageTitle":"PermissionService","url":"api/PermissionService#SetProviderFromConfig","content":"&lt;/&gt; PermissionService:SetProviderFromConfig(config: {type: string}) → () Sets the provider from a config. See PermissionProviderUtils.createGroupRankConfig and PermissionProviderUtils.createSingleUserConfig.  "},{"title":"Start​","type":1,"pageTitle":"PermissionService","url":"api/PermissionService#Start","content":"&lt;/&gt; PermissionService:Start() → () Starts the permission service. Should be done via ServiceBag.  "},{"title":"PromisePermissionProvider​","type":1,"pageTitle":"PermissionService","url":"api/PermissionService#PromisePermissionProvider","content":"&lt;/&gt; PermissionService:PromisePermissionProvider() → Promise&lt;BasePermissionProvider&gt; Returns the permission provider "},{"title":"PermissionServiceClient","type":0,"sectionRef":"#","url":"api/PermissionServiceClient","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PermissionServiceClient","url":"api/PermissionServiceClient#functions","content":" "},{"title":"Init​","type":1,"pageTitle":"PermissionServiceClient","url":"api/PermissionServiceClient#Init","content":"&lt;/&gt; PermissionServiceClient:Init(_serviceBag: ServiceBag) → () Initializes the permission service on the client. Should be done via ServiceBag.  "},{"title":"PromisePermissionProvider​","type":1,"pageTitle":"PermissionServiceClient","url":"api/PermissionServiceClient#PromisePermissionProvider","content":"&lt;/&gt; PermissionServiceClient:PromisePermissionProvider() → Promise&lt;PermissionProviderClient&gt; Returns the permission provider "},{"title":"PillBackingBuilder","type":0,"sectionRef":"#","url":"api/PillBackingBuilder","content":"On this page PillBackingBuilder Builds a pill backing for Guis","keywords":""},{"title":"PhysicsUtils","type":0,"sectionRef":"#","url":"api/PhysicsUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PhysicsUtils","url":"api/PhysicsUtils#functions","content":" "},{"title":"getConnectedParts​","type":1,"pageTitle":"PhysicsUtils","url":"api/PhysicsUtils#getConnectedParts","content":"&lt;/&gt; PhysicsUtils.getConnectedParts(part: BasePart ) → {BasePart } Retrieves all connected parts of a part, plus the connected part.  "},{"title":"getMass​","type":1,"pageTitle":"PhysicsUtils","url":"api/PhysicsUtils#getMass","content":"&lt;/&gt; PhysicsUtils.getMass(parts: {BasePart }) → number Retrieves mass of all parts  "},{"title":"estimateBuoyancyContribution​","type":1,"pageTitle":"PhysicsUtils","url":"api/PhysicsUtils#estimateBuoyancyContribution","content":"&lt;/&gt; PhysicsUtils.estimateBuoyancyContribution(parts: {BasePart }) → ( number,-- buoyancy number,-- mass number-- volume ) Estimate buoyancy contributed by parts  "},{"title":"getCenterOfMass​","type":1,"pageTitle":"PhysicsUtils","url":"api/PhysicsUtils#getCenterOfMass","content":"&lt;/&gt; PhysicsUtils.getCenterOfMass(parts: {BasePart }) → ( Vector3 ,-- position number-- mass ) Return's the world vector center of mass.  "},{"title":"momentOfInertia​","type":1,"pageTitle":"PhysicsUtils","url":"api/PhysicsUtils#momentOfInertia","content":"&lt;/&gt; PhysicsUtils.momentOfInertia( part: BasePart , axis: Vector3 , origin: Vector3 ) → number Calculates the moment of inertia of a solid cuboid. warning This is wrong for Roblox. Roblox has hollow cuvoids as parts  "},{"title":"bodyMomentOfInertia​","type":1,"pageTitle":"PhysicsUtils","url":"api/PhysicsUtils#bodyMomentOfInertia","content":"&lt;/&gt; PhysicsUtils.bodyMomentOfInertia( parts: Thepartstouse, axis: theaxistouse( Shouldbetorque, oroffsetcrossforce ), origin: Theoriginoftheaxis(shouldbecenterofmassoftheparts) ) → number Given a connected body of parts, returns the moment of inertia of these parts  "},{"title":"applyForce​","type":1,"pageTitle":"PhysicsUtils","url":"api/PhysicsUtils#applyForce","content":"&lt;/&gt; PhysicsUtils.applyForce( part: BasePart , force: Vector3 ,-- the force vector to apply forcePosition: Vector3 -- The position that the force is to be applied from (World vector). ) → () Applies a force to a Roblox body. tip Roblox has :ApplyImpulse now as an API surface, so I recommend using that instead. It should be noted that setting the velocity to one part of a connected part on Roblox sets the velocity of the whole physics model.http://xboxforums.create.msdn.com/forums/p/34179/196459.aspx http://www.cs.cmu.edu/~baraff/sigcourse/notesd1.pdf  "},{"title":"acceleratePart​","type":1,"pageTitle":"PhysicsUtils","url":"api/PhysicsUtils#acceleratePart","content":"&lt;/&gt; PhysicsUtils.acceleratePart( part: BasePart , emittingPart: BasePart , acceleration: Vector3 ) → () Accelerates a part utilizing newton's laws. emittingPart is the part it's emitted from. force = mass * acceleration "},{"title":"PillBackingUtils","type":0,"sectionRef":"#","url":"api/PillBackingUtils","content":"On this page PillBackingUtils Utilities for working with pill backings","keywords":""},{"title":"PlaneUtils","type":0,"sectionRef":"#","url":"api/PlaneUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PlaneUtils","url":"api/PlaneUtils#functions","content":" "},{"title":"rayIntersection​","type":1,"pageTitle":"PlaneUtils","url":"api/PlaneUtils#rayIntersection","content":"&lt;/&gt; PlaneUtils.rayIntersection( origin: Vector3 , normal: Vector3 , rayOrigin: Vector3 , unitRayDirection: Vector3 ) → Vector3? -- Intersection point Finds the intersection between planes and rays. https://wiki.roblox.com/index.php?title=User:EgoMoose/Articles/Silhouettes_and_shadows#Ray_plane_intersection Originally from EgoMoose "},{"title":"PlayerBinder","type":0,"sectionRef":"#","url":"api/PlayerBinder","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PlayerBinder","url":"api/PlayerBinder#functions","content":" "},{"title":"new​","type":1,"pageTitle":"PlayerBinder","url":"api/PlayerBinder#new","content":"&lt;/&gt; PlayerBinder.new( tag: string, class: BinderContructor, ...: any ) → PlayerBinder&lt;T&gt; Returns a new PlayerBinder  "},{"title":"Start​","type":1,"pageTitle":"PlayerBinder","url":"api/PlayerBinder#Start","content":"&lt;/&gt; PlayerBinder:Start() → () Starts the binder. See Binder.Start. Should be done via a ServiceBag. "},{"title":"PlayerDataStoreManager","type":0,"sectionRef":"#","url":"api/PlayerDataStoreManager","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PlayerDataStoreManager","url":"api/PlayerDataStoreManager#functions","content":" "},{"title":"new​","type":1,"pageTitle":"PlayerDataStoreManager","url":"api/PlayerDataStoreManager#new","content":"&lt;/&gt; PlayerDataStoreManager.new( robloxDataStore: DataStore, keyGenerator: (player) → string-- Function that takes in a player, and outputs a key ) → PlayerDataStoreManager Constructs a new PlayerDataStoreManager.  "},{"title":"DisableSaveOnCloseStudio​","type":1,"pageTitle":"PlayerDataStoreManager","url":"api/PlayerDataStoreManager#DisableSaveOnCloseStudio","content":"&lt;/&gt; PlayerDataStoreManager:DisableSaveOnCloseStudio() → () For if you want to disable saving in studio for faster close time!  "},{"title":"AddRemovingCallback​","type":1,"pageTitle":"PlayerDataStoreManager","url":"api/PlayerDataStoreManager#AddRemovingCallback","content":"&lt;/&gt; PlayerDataStoreManager:AddRemovingCallback( callback: function-- May return a promise ) → () Adds a callback to be called before save on removal  "},{"title":"RemovePlayerDataStore​","type":1,"pageTitle":"PlayerDataStoreManager","url":"api/PlayerDataStoreManager#RemovePlayerDataStore","content":"&lt;/&gt; PlayerDataStoreManager:RemovePlayerDataStore(player: Player ) → () Callable to allow manual GC so things can properly clean up. This can be used to pre-emptively cleanup players.  "},{"title":"GetDataStore​","type":1,"pageTitle":"PlayerDataStoreManager","url":"api/PlayerDataStoreManager#GetDataStore","content":"&lt;/&gt; PlayerDataStoreManager:GetDataStore(player: Player ) → DataStore   "},{"title":"PromiseAllSaves​","type":1,"pageTitle":"PlayerDataStoreManager","url":"api/PlayerDataStoreManager#PromiseAllSaves","content":"&lt;/&gt; PlayerDataStoreManager:PromiseAllSaves() → Promise Removes all player data stores, and returns a promise that resolves when all pending saves are saved. "},{"title":"PlayerDataStoreService","type":0,"sectionRef":"#","url":"api/PlayerDataStoreService","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PlayerDataStoreService","url":"api/PlayerDataStoreService#functions","content":" "},{"title":"Init​","type":1,"pageTitle":"PlayerDataStoreService","url":"api/PlayerDataStoreService#Init","content":"&lt;/&gt; PlayerDataStoreService:Init(serviceBag: ServiceBag) → () Initializes the PlayerDataStoreService. Should be done via ServiceBag.Init.  "},{"title":"Start​","type":1,"pageTitle":"PlayerDataStoreService","url":"api/PlayerDataStoreService#Start","content":"&lt;/&gt; PlayerDataStoreService:Start() → () Initializes the datastore service for players. Should be done via ServiceBag.Start.  "},{"title":"SetDataStoreName​","type":1,"pageTitle":"PlayerDataStoreService","url":"api/PlayerDataStoreService#SetDataStoreName","content":"&lt;/&gt; PlayerDataStoreService:SetDataStoreName(dataStoreName: string) → () Sets the name for the datastore to retrieve. info Must be done before start and after init.  "},{"title":"SetDataStoreScope​","type":1,"pageTitle":"PlayerDataStoreService","url":"api/PlayerDataStoreService#SetDataStoreScope","content":"&lt;/&gt; PlayerDataStoreService:SetDataStoreScope(dataStoreScope: string) → () Sets the scope for the datastore to retrieve. info Must be done before start and after init.  "},{"title":"PromiseDataStore​","type":1,"pageTitle":"PlayerDataStoreService","url":"api/PlayerDataStoreService#PromiseDataStore","content":"&lt;/&gt; PlayerDataStoreService:PromiseDataStore(player: Player ) → Promise&lt;DataStore&gt; Gets the datastore for the player.  "},{"title":"PromiseAddRemovingCallback​","type":1,"pageTitle":"PlayerDataStoreService","url":"api/PlayerDataStoreService#PromiseAddRemovingCallback","content":"&lt;/&gt; PlayerDataStoreService:PromiseAddRemovingCallback( callback: function-- May return a promise ) → Promise Adds a removing callback to the manager.  "},{"title":"PromiseManager​","type":1,"pageTitle":"PlayerDataStoreService","url":"api/PlayerDataStoreService#PromiseManager","content":"&lt;/&gt; PlayerDataStoreService:PromiseManager() → PlayerDataStoreManager Retrieves the manager "},{"title":"PlayerGuiUtils","type":0,"sectionRef":"#","url":"api/PlayerGuiUtils","content":"On this page PlayerGuiUtils","keywords":""},{"title":"PlayerProductManager","type":0,"sectionRef":"#","url":"api/PlayerProductManager","content":"On this page PlayerProductManager","keywords":""},{"title":"PlayerHumanoidBinder","type":0,"sectionRef":"#","url":"api/PlayerHumanoidBinder","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PlayerHumanoidBinder","url":"api/PlayerHumanoidBinder#functions","content":" "},{"title":"new​","type":1,"pageTitle":"PlayerHumanoidBinder","url":"api/PlayerHumanoidBinder#new","content":"&lt;/&gt; PlayerHumanoidBinder.new( tag: string, class: BinderContructor, ...: any ) → PlayerHumanoidBinder&lt;T&gt; Returns a new PlayerHumanoidBinder  "},{"title":"SetAutomaticTagging​","type":1,"pageTitle":"PlayerHumanoidBinder","url":"api/PlayerHumanoidBinder#SetAutomaticTagging","content":"&lt;/&gt; PlayerHumanoidBinder:SetAutomaticTagging(shouldTag: boolean) → () Sets whether tagging should be enabled  "},{"title":"Start​","type":1,"pageTitle":"PlayerHumanoidBinder","url":"api/PlayerHumanoidBinder#Start","content":"&lt;/&gt; PlayerHumanoidBinder:Start() → () Starts the binder. See Binder.Start. Should be done via a ServiceBag. "},{"title":"PlayerProductManagerBase","type":0,"sectionRef":"#","url":"api/PlayerProductManagerBase","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PlayerProductManagerBase","url":"api/PlayerProductManagerBase#functions","content":" "},{"title":"GetPlayer​","type":1,"pageTitle":"PlayerProductManagerBase","url":"api/PlayerProductManagerBase#GetPlayer","content":"&lt;/&gt; PlayerProductManagerBase:GetPlayer() → Player  Gets the current player  "},{"title":"ObservePlayerOwnsPass​","type":1,"pageTitle":"PlayerProductManagerBase","url":"api/PlayerProductManagerBase#ObservePlayerOwnsPass","content":"&lt;/&gt; PlayerProductManagerBase:ObservePlayerOwnsPass(gamePassId: number) → Observable&lt;boolean&gt; Observes whether the player owns the current pass or not.  "},{"title":"PromisePlayerOwnsPass​","type":1,"pageTitle":"PlayerProductManagerBase","url":"api/PlayerProductManagerBase#PromisePlayerOwnsPass","content":"&lt;/&gt; PlayerProductManagerBase:PromisePlayerOwnsPass(gamePassId: number) → Promise&lt;boolean&gt; Promises whether the player owns the current pass or not. "},{"title":"PlayerProductManagerClient","type":0,"sectionRef":"#","url":"api/PlayerProductManagerClient","content":"On this page PlayerProductManagerClient This item only works when running on the client. Client","keywords":""},{"title":"PlayerProductManagerConstants","type":0,"sectionRef":"#","url":"api/PlayerProductManagerConstants","content":"On this page PlayerProductManagerConstants","keywords":""},{"title":"PlayerProductManagerUtils","type":0,"sectionRef":"#","url":"api/PlayerProductManagerUtils","content":"On this page PlayerProductManagerUtils","keywords":""},{"title":"PlayersServicePromises","type":0,"sectionRef":"#","url":"api/PlayersServicePromises","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PlayersServicePromises","url":"api/PlayersServicePromises#functions","content":" "},{"title":"promiseUserIdFromName​","type":1,"pageTitle":"PlayersServicePromises","url":"api/PlayersServicePromises#promiseUserIdFromName","content":"&lt;/&gt; PlayersServicePromises.promiseUserIdFromName(name: string) → Promise&lt;UserId&gt; Promises the userId from a given name. "},{"title":"PlayerThumbnailUtils","type":0,"sectionRef":"#","url":"api/PlayerThumbnailUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PlayerThumbnailUtils","url":"api/PlayerThumbnailUtils#functions","content":" "},{"title":"promiseUserThumbnail​","type":1,"pageTitle":"PlayerThumbnailUtils","url":"api/PlayerThumbnailUtils#promiseUserThumbnail","content":"&lt;/&gt; PlayerThumbnailUtils.promiseUserThumbnail( userId: number, thumbnailType: ThumbnailType? , thumbnailSize: ThumbnailSize? ) → Promise&lt;string&gt; Promises a user thumbnail with retry enabled. PlayerThumbnailUtils.promiseUserThumbnail(4397833):Then(function(image) imageLabel.Image = image end)   "},{"title":"promiseUserName​","type":1,"pageTitle":"PlayerThumbnailUtils","url":"api/PlayerThumbnailUtils#promiseUserName","content":"&lt;/&gt; PlayerThumbnailUtils.promiseUserName(userId: number) → Promise&lt;string&gt; Promises a player userName with retries enabled. "},{"title":"PolynomialUtils","type":0,"sectionRef":"#","url":"api/PolynomialUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PolynomialUtils","url":"api/PolynomialUtils#functions","content":" "},{"title":"solveOrderedRealLinear​","type":1,"pageTitle":"PolynomialUtils","url":"api/PolynomialUtils#solveOrderedRealLinear","content":"&lt;/&gt; PolynomialUtils.solveOrderedRealLinear( a: number, b: number ) → number? Solves a linear ordered equation  "},{"title":"solveOrderedRealQuadratic​","type":1,"pageTitle":"PolynomialUtils","url":"api/PolynomialUtils#solveOrderedRealQuadratic","content":"&lt;/&gt; PolynomialUtils.solveOrderedRealQuadratic( a: number, b: number, c: number ) → ( number?, number? ) Solves a quadratic polynomial "},{"title":"PointCamera","type":0,"sectionRef":"#","url":"api/PointCamera","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PointCamera","url":"api/PointCamera#functions","content":" "},{"title":"new​","type":1,"pageTitle":"PointCamera","url":"api/PointCamera#new","content":"&lt;/&gt; PointCamera.new( originCamera: Camera ,-- A camera to use focusCamera: Camera -- The Camera to look at. ) → () Initializes a new PointCamera "},{"title":"PreferredParentUtils","type":0,"sectionRef":"#","url":"api/PreferredParentUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PreferredParentUtils","url":"api/PreferredParentUtils#functions","content":" "},{"title":"createPreferredParentRetriever​","type":1,"pageTitle":"PreferredParentUtils","url":"api/PreferredParentUtils#createPreferredParentRetriever","content":"&lt;/&gt; PreferredParentUtils.createPreferredParentRetriever( parent: Instance , name: string ) → () → Instance    "},{"title":"getPreferredParent​","type":1,"pageTitle":"PreferredParentUtils","url":"api/PreferredParentUtils#getPreferredParent","content":"&lt;/&gt; PreferredParentUtils.getPreferredParent( parent: Instance , name: string ) → Instance   "},{"title":"Probability","type":0,"sectionRef":"#","url":"api/Probability","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Probability","url":"api/Probability#functions","content":" "},{"title":"boxMuller​","type":1,"pageTitle":"Probability","url":"api/Probability#boxMuller","content":"&lt;/&gt; Probability.boxMuller() → number Returns a boxMuller random distribution  "},{"title":"normal​","type":1,"pageTitle":"Probability","url":"api/Probability#normal","content":"&lt;/&gt; Probability.normal( mean: number, standardDeviation: number ) → number Returns a normal distribution  "},{"title":"boundedNormal​","type":1,"pageTitle":"Probability","url":"api/Probability#boundedNormal","content":"&lt;/&gt; Probability.boundedNormal( mean: number, standardDeviation: number, hardMin: number, hardMax: number ) → number Returns a bounded normal, clamping the normal value "},{"title":"promiseBoundClass","type":0,"sectionRef":"#","url":"api/promiseBoundClass","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"promiseBoundClass","url":"api/promiseBoundClass#functions","content":" "},{"title":"promiseBoundClass​","type":1,"pageTitle":"promiseBoundClass","url":"api/promiseBoundClass#promiseBoundClass","content":"&lt;/&gt; promiseBoundClass.promiseBoundClass( binder: Binder&lt;T&gt;, inst: Instance , cancelToken: CancelToken ) → Promise&lt;T&gt; Returns a promise that resolves when the class is bound to the instance. "},{"title":"Promise","type":0,"sectionRef":"#","url":"api/Promise","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Promise","url":"api/Promise#functions","content":" "},{"title":"isPromise​","type":1,"pageTitle":"Promise","url":"api/Promise#isPromise","content":"&lt;/&gt; Promise.isPromise(value: any) → boolean Determines whether a value is a promise or not.  "},{"title":"new​","type":1,"pageTitle":"Promise","url":"api/Promise#new","content":"&lt;/&gt; Promise.new(func: ( resolve: (...) → (), reject: (...) → () ) → ()?) → Promise&lt;T&gt; Constructs a new promise. ::warning Do not yield within this func callback, as it will yield on the main thread. This is a performance optimization. ::  "},{"title":"spawn​","type":1,"pageTitle":"Promise","url":"api/Promise#spawn","content":"&lt;/&gt; Promise.spawn(func: ( resolve: (...) → (), reject: (...) → () ) → ()?) → Promise&lt;T&gt; Initializes a new promise with the given function in a deferred wrapper.  "},{"title":"defer​","type":1,"pageTitle":"Promise","url":"api/Promise#defer","content":"&lt;/&gt; Promise.defer(func: ( resolve: (...) → (), reject: (...) → () ) → ()?) → Promise&lt;T&gt; Initializes a new promise with the given function in a deferred wrapper.  "},{"title":"resolved​","type":1,"pageTitle":"Promise","url":"api/Promise#resolved","content":"&lt;/&gt; Promise.resolved(...: Valuestoresolveto) → Promise&lt;T&gt; Returns a resolved promise with the following values  "},{"title":"rejected​","type":1,"pageTitle":"Promise","url":"api/Promise#rejected","content":"&lt;/&gt; Promise.rejected(...: Valuestorejectto) → Promise&lt;T&gt; Returns a rejected promise with the following values  "},{"title":"IsPending​","type":1,"pageTitle":"Promise","url":"api/Promise#IsPending","content":"&lt;/&gt; Promise:IsPending() → bool-- True if pending, false otherwise Returns whether or not the promise is pending  "},{"title":"IsFulfilled​","type":1,"pageTitle":"Promise","url":"api/Promise#IsFulfilled","content":"&lt;/&gt; Promise:IsFulfilled() → bool-- True if fulfilled Returns whether or not the promise is fulfilled  "},{"title":"IsRejected​","type":1,"pageTitle":"Promise","url":"api/Promise#IsRejected","content":"&lt;/&gt; Promise:IsRejected() → bool-- True if rejected Returns whether or not the promise is rejected  "},{"title":"Wait​","type":1,"pageTitle":"Promise","url":"api/Promise#Wait","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; Promise:Wait() → T Yields until the promise is complete, and errors if an error exists, otherwise returns the fulfilled results.  "},{"title":"Yield​","type":1,"pageTitle":"Promise","url":"api/Promise#Yield","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; Promise:Yield() → boolean,T Yields until the promise is complete, then returns a boolean indicating the result, followed by the values from the promise.  "},{"title":"Resolve​","type":1,"pageTitle":"Promise","url":"api/Promise#Resolve","content":"&lt;/&gt; Promise:Resolve(...: T) → () Promise resolution procedure, resolves the given values  "},{"title":"Reject​","type":1,"pageTitle":"Promise","url":"api/Promise#Reject","content":"&lt;/&gt; Promise:Reject( ...: T-- Params to reject with ) → () Rejects the promise with the values given  "},{"title":"Then​","type":1,"pageTitle":"Promise","url":"api/Promise#Then","content":"&lt;/&gt; Promise:Then( onFulfilled: function,-- Called if/when fulfilled with parameters onRejected: function-- Called if/when rejected with parameters ) → Promise&lt;T&gt; Handlers if/when promise is fulfilled/rejected. It takes up to two arguments, callback functions for the success and failure cases of the Promise. May return the same promise if certain behavior is met. info We do not comply with 2.2.4 (onFulfilled or onRejected must not be called until the execution context stack contains only platform code). This means promises may stack overflow, however, it also makes promises a lot cheaper If/when promise is rejected, all respective onRejected callbacks must execute in the order of their originating calls to then. If/when promise is fulfilled, all respective onFulfilled callbacks must execute in the order of their originating calls to then.  "},{"title":"Tap​","type":1,"pageTitle":"Promise","url":"api/Promise#Tap","content":"&lt;/&gt; Promise:Tap( onFulfilled: function, onRejected: function ) → Promise&lt;T&gt;-- Returns self Like then, but the value passed down the chain is the resolved value of the promise, not the value returned from onFulfilled or onRejected Will still yield for the result if a promise is returned, but will discard the result.  "},{"title":"Finally​","type":1,"pageTitle":"Promise","url":"api/Promise#Finally","content":"&lt;/&gt; Promise:Finally(func: function) → Promise&lt;T&gt; Executes upon pending stop  "},{"title":"Catch​","type":1,"pageTitle":"Promise","url":"api/Promise#Catch","content":"&lt;/&gt; Promise:Catch(onRejected: function) → Promise&lt;T&gt; Catch errors from the promise  "},{"title":"Destroy​","type":1,"pageTitle":"Promise","url":"api/Promise#Destroy","content":"&lt;/&gt; Promise:Destroy() → () Rejects the current promise. Utility left for Maid task  "},{"title":"GetResults​","type":1,"pageTitle":"Promise","url":"api/Promise#GetResults","content":"&lt;/&gt; Promise:GetResults() → ( boolean,-- true if resolved, false otherwise. any ) Returns the results from the promise. warning This API surface will error if the promise is still pending. "},{"title":"promiseBoundLinkedClass","type":0,"sectionRef":"#","url":"api/promiseBoundLinkedClass","content":"On this page promiseBoundLinkedClass Promise that returns an objectValue's value that has a bound value to it.","keywords":""},{"title":"promiseChild","type":0,"sectionRef":"#","url":"api/promiseChild","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"promiseChild","url":"api/promiseChild#functions","content":" "},{"title":"promiseChild​","type":1,"pageTitle":"promiseChild","url":"api/promiseChild#promiseChild","content":"&lt;/&gt; promiseChild.promiseChild( parent: Instance , name: string, timeOut: number? ) → Promise&lt;Instance &gt; Wraps the :WaitForChild API with a promise "},{"title":"PromiseGetRemoteEvent","type":0,"sectionRef":"#","url":"api/PromiseGetRemoteEvent","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PromiseGetRemoteEvent","url":"api/PromiseGetRemoteEvent#functions","content":" "},{"title":"PromiseGetRemoteEvent​","type":1,"pageTitle":"PromiseGetRemoteEvent","url":"api/PromiseGetRemoteEvent#PromiseGetRemoteEvent","content":"&lt;/&gt; PromiseGetRemoteEvent.PromiseGetRemoteEvent(name: string) → Promise&lt;RemoteEvent &gt; Like GetRemoteEvent but in promise form. "},{"title":"PromiseGetRemoteFunction","type":0,"sectionRef":"#","url":"api/PromiseGetRemoteFunction","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PromiseGetRemoteFunction","url":"api/PromiseGetRemoteFunction#functions","content":" "},{"title":"PromiseGetRemoteFunction​","type":1,"pageTitle":"PromiseGetRemoteFunction","url":"api/PromiseGetRemoteFunction#PromiseGetRemoteFunction","content":"&lt;/&gt; PromiseGetRemoteFunction.PromiseGetRemoteFunction(name: string) → Promise&lt;RemoteFunction &gt; Like GetRemoteFunction but in promise form. "},{"title":"PromiseInstanceUtils","type":0,"sectionRef":"#","url":"api/PromiseInstanceUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PromiseInstanceUtils","url":"api/PromiseInstanceUtils#functions","content":" "},{"title":"promiseRemoved​","type":1,"pageTitle":"PromiseInstanceUtils","url":"api/PromiseInstanceUtils#promiseRemoved","content":"&lt;/&gt; PromiseInstanceUtils.promiseRemoved(instance: Instance ) → Promise  "},{"title":"promisePropertyValue","type":0,"sectionRef":"#","url":"api/promisePropertyValue","content":"On this page promisePropertyValue Promises a property value","keywords":""},{"title":"PromiseRemoteEventMixin","type":0,"sectionRef":"#","url":"api/PromiseRemoteEventMixin","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PromiseRemoteEventMixin","url":"api/PromiseRemoteEventMixin#functions","content":" "},{"title":"Add​","type":1,"pageTitle":"PromiseRemoteEventMixin","url":"api/PromiseRemoteEventMixin#Add","content":"&lt;/&gt; PromiseRemoteEventMixin:Add( class: {_maid: Maid}, remoteEventName: string ) → () Adds the remote function mixin to a class local BaseObject = require(&quot;BaseObject&quot;) local Bird = setmetatable({}, BaseObject) Bird.ClassName = &quot;Bird&quot; Bird.__index = Bird require(&quot;PromiseRemoteEventMixin&quot;):Add(Bird, &quot;BirdRemoteEvent&quot;) function Bird.new(inst) local self = setmetatable(BaseObject.new(inst), Bird) self:PromiseRemoteEvent():Then(function(remoteEvent) self._maid:GiveTask(remoteEvent.OnClientEvent:Connect(function(...) self:_handleRemoteEvent(...) end) end) return self end   "},{"title":"PromiseRemoteEvent​","type":1,"pageTitle":"PromiseRemoteEventMixin","url":"api/PromiseRemoteEventMixin#PromiseRemoteEvent","content":"&lt;/&gt; PromiseRemoteEventMixin:PromiseRemoteEvent() → Promise&lt;RemoteEvent &gt; Returns a promise that returns a remote event "},{"title":"PromiseUtils","type":0,"sectionRef":"#","url":"api/PromiseUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PromiseUtils","url":"api/PromiseUtils#functions","content":" "},{"title":"any​","type":1,"pageTitle":"PromiseUtils","url":"api/PromiseUtils#any","content":"&lt;/&gt; PromiseUtils.any(promises: {Promise&lt;T&gt;}) → Promise&lt;T&gt;-- Promise that resolves with first result Returns the value of the first promise resolved  "},{"title":"all​","type":1,"pageTitle":"PromiseUtils","url":"api/PromiseUtils#all","content":"&lt;/&gt; PromiseUtils.all(promises: {Promise&lt;T&gt;}) → Promise&lt;T&gt; Executes all promises. If any fails, the result will be rejected. However, it yields until every promise is complete. warning Passing in a spare array (i.e. {nil, promise}) will result in undefined behavior here.  "},{"title":"invert​","type":1,"pageTitle":"PromiseUtils","url":"api/PromiseUtils#invert","content":"&lt;/&gt; PromiseUtils.invert(promise: Promise&lt;T&gt;) → Promise&lt;T&gt; Inverts the result of a promise, turning a resolved promise into a rejected one, and a rejected one into a resolved one.  "},{"title":"fromSignal​","type":1,"pageTitle":"PromiseUtils","url":"api/PromiseUtils#fromSignal","content":"&lt;/&gt; PromiseUtils.fromSignal(signal: Signal&lt;T&gt;) → Promise&lt;T&gt; Creates a promise from a signal  "},{"title":"timeout​","type":1,"pageTitle":"PromiseUtils","url":"api/PromiseUtils#timeout","content":"&lt;/&gt; PromiseUtils.timeout( timeoutTime: number, fromPromise: Promise&lt;T&gt; ) → Promise&lt;T&gt; Creates a new promise from the given promise that will reject after the given timeoutTime "},{"title":"PromiseRemoteFunctionMixin","type":0,"sectionRef":"#","url":"api/PromiseRemoteFunctionMixin","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PromiseRemoteFunctionMixin","url":"api/PromiseRemoteFunctionMixin#functions","content":" "},{"title":"Add​","type":1,"pageTitle":"PromiseRemoteFunctionMixin","url":"api/PromiseRemoteFunctionMixin#Add","content":"&lt;/&gt; PromiseRemoteFunctionMixin:Add( class: {_maid: Maid}, remoteFunctionName: string ) → () Adds the remote function mixin to a class local BaseObject = require(&quot;BaseObject&quot;) local Bird = setmetatable({}, BaseObject) Bird.ClassName = &quot;Bird&quot; Bird.__index = Bird require(&quot;PromiseRemoteFunctionMixin&quot;):Add(Bird, &quot;BirdRemoteFunction&quot;) function Bird.new(inst) local self = setmetatable(BaseObject.new(inst), Bird) self:PromiseRemoteFunction():Then(function(remoteFunction) task.spawn(function() remoteFunction:InvokeServer() -- or whatever end) end) return self end   "},{"title":"PromiseRemoteFunction​","type":1,"pageTitle":"PromiseRemoteFunctionMixin","url":"api/PromiseRemoteFunctionMixin#PromiseRemoteFunction","content":"&lt;/&gt; PromiseRemoteFunctionMixin:PromiseRemoteFunction() → Promise&lt;RemoteFunction &gt; Returns a promise that returns a remote function "},{"title":"promiseWait","type":0,"sectionRef":"#","url":"api/promiseWait","content":"On this page promiseWait Wraps the wait()/delay() API in a promise","keywords":""},{"title":"ProximityPromptInputUtils","type":0,"sectionRef":"#","url":"api/ProximityPromptInputUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ProximityPromptInputUtils","url":"api/ProximityPromptInputUtils#functions","content":" "},{"title":"inputKeyMapFromPrompt​","type":1,"pageTitle":"ProximityPromptInputUtils","url":"api/ProximityPromptInputUtils#inputKeyMapFromPrompt","content":"&lt;/&gt; ProximityPromptInputUtils.inputKeyMapFromPrompt(prompt: ProximityPrompt ) → InputKeyMapList Creates an InputKeyMapList from a proximity prompt.  "},{"title":"configurePromptFromInputKeyMap​","type":1,"pageTitle":"ProximityPromptInputUtils","url":"api/ProximityPromptInputUtils#configurePromptFromInputKeyMap","content":"&lt;/&gt; ProximityPromptInputUtils.configurePromptFromInputKeyMap( prompt: ProximityPrompt , inputKeyMapList: InputKeyMapList ) → () Sets the key codes for a proximity prompt to match an inputKeyMapList  "},{"title":"getFirstInputKeyCode​","type":1,"pageTitle":"ProximityPromptInputUtils","url":"api/ProximityPromptInputUtils#getFirstInputKeyCode","content":"&lt;/&gt; ProximityPromptInputUtils.getFirstInputKeyCode( inputKeyMapList: InputKeyMapList, inputMode: InputMode ) → KeyCode?  Picks the first keyCode that matches the inputMode. "},{"title":"PseudoLocalize","type":0,"sectionRef":"#","url":"api/PseudoLocalize","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"PseudoLocalize","url":"api/PseudoLocalize#properties","content":" "},{"title":"PSEUDO_CHARACTER_MAP​","type":1,"pageTitle":"PseudoLocalize","url":"api/PseudoLocalize#PSEUDO_CHARACTER_MAP","content":"&lt;/&gt; PseudoLocalize.PSEUDO_CHARACTER_MAP: {[string]: string} Mapping of English characters to pseudo localized characters. "},{"title":"Functions​","type":1,"pageTitle":"PseudoLocalize","url":"api/PseudoLocalize#functions","content":" "},{"title":"pseudoLocalize​","type":1,"pageTitle":"PseudoLocalize","url":"api/PseudoLocalize#pseudoLocalize","content":"&lt;/&gt; PseudoLocalize.pseudoLocalize( line: string-- The line to translate ) → string-- The translated line Translates a line into pseudo text while maintaining params  "},{"title":"addToLocalizationTable​","type":1,"pageTitle":"PseudoLocalize","url":"api/PseudoLocalize#addToLocalizationTable","content":"&lt;/&gt; PseudoLocalize.addToLocalizationTable( localizationTable: LocalizationTable ,-- LocalizationTable to add to. preferredLocaleId: string?,-- Preferred locale to use. Defaults to &quot;qlp-pls&quot; preferredFromLocale: string?-- Preferred from locale. Defaults to &quot;en-us&quot; ) → string-- The translated line Parses a localization table and adds a pseudo localized locale to the table. "},{"title":"PushCamera","type":0,"sectionRef":"#","url":"api/PushCamera","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"PushCamera","url":"api/PushCamera#properties","content":" "},{"title":"CameraState​","type":1,"pageTitle":"PushCamera","url":"api/PushCamera#CameraState","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; PushCamera.CameraState: CameraState The current state. "},{"title":"Functions​","type":1,"pageTitle":"PushCamera","url":"api/PushCamera#functions","content":" "},{"title":"new​","type":1,"pageTitle":"PushCamera","url":"api/PushCamera#new","content":"&lt;/&gt; PushCamera.new() → PushCamera Constructs a new PushCamera  "},{"title":"RotateXY​","type":1,"pageTitle":"PushCamera","url":"api/PushCamera#RotateXY","content":"&lt;/&gt; PushCamera:RotateXY( xzrotVector: Vector2 -- The delta rotation to apply ) → ()   "},{"title":"StopRotateBack​","type":1,"pageTitle":"PushCamera","url":"api/PushCamera#StopRotateBack","content":"&lt;/&gt; PushCamera:StopRotateBack() → () Prevents the rotation back. You need to call this every frame you want to prevent rotation.  "},{"title":"Reset​","type":1,"pageTitle":"PushCamera","url":"api/PushCamera#Reset","content":"&lt;/&gt; PushCamera:Reset() → () Resets to default position automatically "},{"title":"QFrame","type":0,"sectionRef":"#","url":"api/QFrame","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"QFrame","url":"api/QFrame#functions","content":" "},{"title":"new​","type":1,"pageTitle":"QFrame","url":"api/QFrame#new","content":"&lt;/&gt; QFrame.new( x: number?, y: number?, z: number?, W: number?, X: number?, Y: number?, Z: number? ) → QFrame Constructs a new QFrame  "},{"title":"isQFrame​","type":1,"pageTitle":"QFrame","url":"api/QFrame#isQFrame","content":"&lt;/&gt; QFrame.isQFrame(value: any) → boolean Returns whether a value is a QFrame  "},{"title":"fromCFrameClosestTo​","type":1,"pageTitle":"QFrame","url":"api/QFrame#fromCFrameClosestTo","content":"&lt;/&gt; QFrame.fromCFrameClosestTo( cframe: CFrame , closestTo: QFrame ) → QFrame Gets the QFrame closest to that CFrame  "},{"title":"fromVector3​","type":1,"pageTitle":"QFrame","url":"api/QFrame#fromVector3","content":"&lt;/&gt; QFrame.fromVector3( vector: Vector3 , qFrame: QFrame ) → QFrame Constructs a QFrame from a position and another QFrame rotation.  "},{"title":"toCFrame​","type":1,"pageTitle":"QFrame","url":"api/QFrame#toCFrame","content":"&lt;/&gt; QFrame.toCFrame(self: QFrame) → CFrame  Converts the QFrame to a CFrame  "},{"title":"toPosition​","type":1,"pageTitle":"QFrame","url":"api/QFrame#toPosition","content":"&lt;/&gt; QFrame.toPosition(self: QFrame) → Vector3  Converts the QFrame to a Vector3 position  "},{"title":"isNAN​","type":1,"pageTitle":"QFrame","url":"api/QFrame#isNAN","content":"&lt;/&gt; QFrame.isNAN(a: QFrame) → boolean Returns true if the QFrame contains a NaN value.  "},{"title":"__unm​","type":1,"pageTitle":"QFrame","url":"api/QFrame#__unm","content":"&lt;/&gt; QFrame.__unm(a: QFrame) → QFrame Inverts the QFrame  "},{"title":"__add​","type":1,"pageTitle":"QFrame","url":"api/QFrame#__add","content":"&lt;/&gt; QFrame.__add( a: QFrame, b: QFrame ) → QFrame Adds the QFrames together  "},{"title":"__sub​","type":1,"pageTitle":"QFrame","url":"api/QFrame#__sub","content":"&lt;/&gt; QFrame.__sub( a: QFrame, b: QFrame ) → QFrame Subtracts the QFrames together  "},{"title":"__pow​","type":1,"pageTitle":"QFrame","url":"api/QFrame#__pow","content":"&lt;/&gt; QFrame.__pow( a: QFrame, b: number ) → QFrame Takes the QFrame to the power, using quaternion power formula.  "},{"title":"__mul​","type":1,"pageTitle":"QFrame","url":"api/QFrame#__mul","content":"&lt;/&gt; QFrame.__mul( a: QFrame | number, b: QFrame | number ) → QFrame Multiplies the QFrames together  "},{"title":"__div​","type":1,"pageTitle":"QFrame","url":"api/QFrame#__div","content":"&lt;/&gt; QFrame.__div( a: QFrame, b: number ) → QFrame Divides the QFrame by the number  "},{"title":"__eq​","type":1,"pageTitle":"QFrame","url":"api/QFrame#__eq","content":"&lt;/&gt; QFrame.__eq( a: QFrame, b: QFrame ) → boolean Compares the QFrame for equality. "},{"title":"qGui","type":0,"sectionRef":"#","url":"api/qGui","content":"On this page qGui A group of utility functions to be used to help create visual effectcs with ROBLOX GUIs","keywords":""},{"title":"Quaternion","type":0,"sectionRef":"#","url":"api/Quaternion","content":"On this page Quaternion Quaternion data type object Author: xXxMoNkEyMaNxXx","keywords":""},{"title":"Queue","type":0,"sectionRef":"#","url":"api/Queue","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Queue","url":"api/Queue#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Queue","url":"api/Queue#new","content":"&lt;/&gt; Queue.new() → Queue&lt;T&gt; Constructs a new queue  "},{"title":"PushLeft​","type":1,"pageTitle":"Queue","url":"api/Queue#PushLeft","content":"&lt;/&gt; Queue:PushLeft(value: T) → () Pushes an entry to the left of the queue  "},{"title":"PushRight​","type":1,"pageTitle":"Queue","url":"api/Queue#PushRight","content":"&lt;/&gt; Queue:PushRight(value: T) → () Pushes an entry to the right of the queue  "},{"title":"PopLeft​","type":1,"pageTitle":"Queue","url":"api/Queue#PopLeft","content":"&lt;/&gt; Queue:PopLeft() → T Pops an entry from the left of the queue  "},{"title":"PopRight​","type":1,"pageTitle":"Queue","url":"api/Queue#PopRight","content":"&lt;/&gt; Queue:PopRight() → T Pops an entry from the right of the queue  "},{"title":"IsEmpty​","type":1,"pageTitle":"Queue","url":"api/Queue#IsEmpty","content":"&lt;/&gt; Queue:IsEmpty() → boolean Returns true if the queue is empty "},{"title":"RacketingRopeConstraint","type":0,"sectionRef":"#","url":"api/RacketingRopeConstraint","content":"On this page RacketingRopeConstraint Tries to racket a rope constraint back down to a reasonable length. Use RopeConstraint.WinchEnabled","keywords":""},{"title":"R15Utils","type":0,"sectionRef":"#","url":"api/R15Utils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"R15Utils","url":"api/R15Utils#functions","content":" "},{"title":"searchForRigAttachment​","type":1,"pageTitle":"R15Utils","url":"api/R15Utils#searchForRigAttachment","content":"&lt;/&gt; R15Utils.searchForRigAttachment( character: Model , partName: string, attachmentName: string ) → Attachment?  Searches the rig for an attachment  "},{"title":"getUpperTorso​","type":1,"pageTitle":"R15Utils","url":"api/R15Utils#getUpperTorso","content":"&lt;/&gt; R15Utils.getUpperTorso(character: Model ) → BasePart?  Retrieves the upper torso  "},{"title":"getLowerTorso​","type":1,"pageTitle":"R15Utils","url":"api/R15Utils#getLowerTorso","content":"&lt;/&gt; R15Utils.getLowerTorso(character: Model ) → BasePart?  Retrieves the lower torso  "},{"title":"getWaistJoint​","type":1,"pageTitle":"R15Utils","url":"api/R15Utils#getWaistJoint","content":"&lt;/&gt; R15Utils.getWaistJoint(character: Model ) → Motor6D?  Retrieves the waist joint  "},{"title":"getNeckJoint​","type":1,"pageTitle":"R15Utils","url":"api/R15Utils#getNeckJoint","content":"&lt;/&gt; R15Utils.getNeckJoint(character: Model ) → Motor6D?  Retrieves the neck joint  "},{"title":"getHand​","type":1,"pageTitle":"R15Utils","url":"api/R15Utils#getHand","content":"&lt;/&gt; R15Utils.getHand( character: Model , side: &quot;Left&quot; | &quot;Right&quot; ) → Attachment?  Retrieves hand attachment  "},{"title":"getGripWeld​","type":1,"pageTitle":"R15Utils","url":"api/R15Utils#getGripWeld","content":"&lt;/&gt; R15Utils.getGripWeld( character: Model , side: &quot;Left&quot; | &quot;Right&quot; ) → Motor6D?  Retrieves grip weld  "},{"title":"getGripWeldName​","type":1,"pageTitle":"R15Utils","url":"api/R15Utils#getGripWeldName","content":"&lt;/&gt; R15Utils.getGripWeldName(side: &quot;Left&quot; | &quot;Right&quot;) → &quot;LeftGrip&quot; | &quot;RightGrip&quot; Retrieves grip weld name for a given side  "},{"title":"getHandName​","type":1,"pageTitle":"R15Utils","url":"api/R15Utils#getHandName","content":"&lt;/&gt; R15Utils.getHandName(side: &quot;Left&quot; | &quot;Right&quot;) → &quot;LeftHand&quot; | &quot;RightHand&quot; Retrieves grip weld name for a given side  "},{"title":"getGripAttachmentName​","type":1,"pageTitle":"R15Utils","url":"api/R15Utils#getGripAttachmentName","content":"&lt;/&gt; R15Utils.getGripAttachmentName(side: &quot;Left&quot; | &quot;Right&quot;) → &quot;LeftGripAttachment&quot; | &quot;RightGripAttachment&quot; Retrieves the grip attachment name  "},{"title":"getShoulderRigAttachment​","type":1,"pageTitle":"R15Utils","url":"api/R15Utils#getShoulderRigAttachment","content":"&lt;/&gt; R15Utils.getShoulderRigAttachment( character: Model , side: &quot;Left&quot; | &quot;Right&quot; ) → Attachment?  Retrieves the shoulder rig attachment  "},{"title":"getGripAttachment​","type":1,"pageTitle":"R15Utils","url":"api/R15Utils#getGripAttachment","content":"&lt;/&gt; R15Utils.getGripAttachment( character: Model , side: &quot;Left&quot; | &quot;Right&quot; ) → Attachment?  Retrieves the grip attachment for the given side  "},{"title":"getExpectedRootPartYOffset​","type":1,"pageTitle":"R15Utils","url":"api/R15Utils#getExpectedRootPartYOffset","content":"&lt;/&gt; R15Utils.getExpectedRootPartYOffset(humanoid: Humanoid ) → number? Retrieves the expected root part y offset for a humanoid  "},{"title":"getRigLength​","type":1,"pageTitle":"R15Utils","url":"api/R15Utils#getRigLength","content":"&lt;/&gt; R15Utils.getRigLength( character: Model , partName: string, rigAttachment0: string, rigAttachment1: string ) → number? Gets the length of a segment for a rig  "},{"title":"addLengthsOrNil​","type":1,"pageTitle":"R15Utils","url":"api/R15Utils#addLengthsOrNil","content":"&lt;/&gt; R15Utils.addLengthsOrNil(lengths: {number?}) → number? Adds the lengths together  "},{"title":"getUpperArmRigLength​","type":1,"pageTitle":"R15Utils","url":"api/R15Utils#getUpperArmRigLength","content":"&lt;/&gt; R15Utils.getUpperArmRigLength( character: Model , side: &quot;Left&quot; | &quot;Right&quot; ) → number? Retrieves the upper arm length for a character  "},{"title":"getLowerArmRigLength​","type":1,"pageTitle":"R15Utils","url":"api/R15Utils#getLowerArmRigLength","content":"&lt;/&gt; R15Utils.getLowerArmRigLength( character: Model , side: &quot;Left&quot; | &quot;Right&quot; ) → number? Retrieves the lower arm length for a character  "},{"title":"getWristToGripLength​","type":1,"pageTitle":"R15Utils","url":"api/R15Utils#getWristToGripLength","content":"&lt;/&gt; R15Utils.getWristToGripLength( character: Model , side: &quot;Left&quot; | &quot;Right&quot; ) → number? Retrieves the wrist to hand length  "},{"title":"getArmRigToGripLength​","type":1,"pageTitle":"R15Utils","url":"api/R15Utils#getArmRigToGripLength","content":"&lt;/&gt; R15Utils.getArmRigToGripLength( character: Model , side: &quot;Left&quot; | &quot;Right&quot; ) → number? Computes the length of an arm for a given character "},{"title":"Ragdoll","type":0,"sectionRef":"#","url":"api/Ragdoll","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Ragdoll","url":"api/Ragdoll#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Ragdoll","url":"api/Ragdoll#new","content":"&lt;/&gt; Ragdoll.new( humanoid: Humanoid , _serviceBag: ServiceBag ) → Ragdoll Constructs a new Ragdoll. Should be done via Binder. See RagdollBindersServer. "},{"title":"Ragdollable","type":0,"sectionRef":"#","url":"api/Ragdollable","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Ragdollable","url":"api/Ragdollable#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Ragdollable","url":"api/Ragdollable#new","content":"&lt;/&gt; Ragdollable.new( humanoid: Humanoid , serviceBag: ServiceBag ) → Ragdollable Constructs a new Ragdollable. Should be done via Binder. See RagdollBindersServer. "},{"title":"RagdollableConstants","type":0,"sectionRef":"#","url":"api/RagdollableConstants","content":"On this page RagdollableConstants Constants for the Ragdollable class.","keywords":""},{"title":"RagdollableClient","type":0,"sectionRef":"#","url":"api/RagdollableClient","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RagdollableClient","url":"api/RagdollableClient#functions","content":" "},{"title":"new​","type":1,"pageTitle":"RagdollableClient","url":"api/RagdollableClient#new","content":"&lt;/&gt; RagdollableClient.new( humanoid: Humanoid , serviceBag: ServiceBag ) → RagdollableClient Constructs a new RagdollableClient. Should be done via Binder. See RagdollBindersClient. "},{"title":"RagdollBindersClient","type":0,"sectionRef":"#","url":"api/RagdollBindersClient","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"RagdollBindersClient","url":"api/RagdollBindersClient#properties","content":" "},{"title":"Ragdoll​","type":1,"pageTitle":"RagdollBindersClient","url":"api/RagdollBindersClient#Ragdoll","content":"&lt;/&gt; RagdollBindersClient.Ragdoll: Binder&lt;RagdollClient&gt; Apply this binder to a humanoid to ragdoll it. Humanoid must already have Ragdollable defined. local ragdoll = serviceBag:GetService(RagdollBindersClient).Ragdoll:Get(humanoid) if ragdoll then print(&quot;Is ragdolled&quot;) else print(&quot;Not ragdolled&quot;) end   "},{"title":"Ragdollable​","type":1,"pageTitle":"RagdollBindersClient","url":"api/RagdollBindersClient#Ragdollable","content":"&lt;/&gt; RagdollBindersClient.Ragdollable: Binder&lt;RagdollableClient&gt; Enables ragdolling on a humanoid.  "},{"title":"RagdollaRagdollHumanoidOnDeathble​","type":1,"pageTitle":"RagdollBindersClient","url":"api/RagdollBindersClient#RagdollaRagdollHumanoidOnDeathble","content":"&lt;/&gt; RagdollBindersClient.RagdollaRagdollHumanoidOnDeathble: Binder&lt;RagdollHumanoidOnDeathClient&gt; Automatically applies ragdoll upon humanoid death.  "},{"title":"RagdollHumanoidOnFall​","type":1,"pageTitle":"RagdollBindersClient","url":"api/RagdollBindersClient#RagdollHumanoidOnFall","content":"&lt;/&gt; RagdollBindersClient.RagdollHumanoidOnFall: Binder&lt;RagdollHumanoidOnFallClient&gt; Automatically applies ragdoll upon humanoid fall. "},{"title":"RagdollBindersServer","type":0,"sectionRef":"#","url":"api/RagdollBindersServer","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"RagdollBindersServer","url":"api/RagdollBindersServer#properties","content":" "},{"title":"Ragdoll​","type":1,"pageTitle":"RagdollBindersServer","url":"api/RagdollBindersServer#Ragdoll","content":"&lt;/&gt; RagdollBindersServer.Ragdoll: Binder&lt;Ragdoll&gt; Apply this Binder to a humanoid to ragdoll it. Humanoid must already have Ragdollable defined. local ragdollBinder = serviceBag:GetService(RagdollBindersClient).Ragdoll local ragdoll = ragdollBinder:Get(humanoid) if ragdoll then print(&quot;Is ragdolled&quot;) ragdollBinder:Unbind(humanoid) else print(&quot;Not ragdolled&quot;) ragdollBinder:Bind(humanoid) end You can also use RxBinderUtils.observeBoundClass to observe whether a humanoid is ragdolled using an Observable. info Like any usage of Observable, be sure to give the Subscription to a Maid (or call Subscription.Destroy on it) once done with the event connection. local maid = Maid.new() local ragdollBinder = serviceBag:GetService(RagdollBindersClient).Ragdoll maid:GiveTask(RxBinderUtils.observeBoundClass(ragdollBinder, humanoid):Subscribe(function(ragdoll) if ragdoll then print(&quot;Ragdolled!&quot;) else print(&quot;Not ragdolled&quot;) end end))   "},{"title":"Ragdollable​","type":1,"pageTitle":"RagdollBindersServer","url":"api/RagdollBindersServer#Ragdollable","content":"&lt;/&gt; RagdollBindersServer.Ragdollable: PlayerHumanoidBinder&lt;Ragdollable&gt; Enables ragdolling on a humanoid.  "},{"title":"RagdollHumanoidOnDeath​","type":1,"pageTitle":"RagdollBindersServer","url":"api/RagdollBindersServer#RagdollHumanoidOnDeath","content":"&lt;/&gt; RagdollBindersServer.RagdollHumanoidOnDeath: PlayerHumanoidBinder&lt;RagdollHumanoidOnDeath&gt; Automatically applies ragdoll upon humanoid death.  "},{"title":"RagdollHumanoidOnFall​","type":1,"pageTitle":"RagdollBindersServer","url":"api/RagdollBindersServer#RagdollHumanoidOnFall","content":"&lt;/&gt; RagdollBindersServer.RagdollHumanoidOnFall: PlayerHumanoidBinder&lt;RagdollHumanoidOnFall&gt; Automatically applies ragdoll upon humanoid fall.  "},{"title":"UnragdollAutomatically​","type":1,"pageTitle":"RagdollBindersServer","url":"api/RagdollBindersServer#UnragdollAutomatically","content":"&lt;/&gt; RagdollBindersServer.UnragdollAutomatically: PlayerHumanoidBinder&lt;UnragdollAutomatically&gt; Automatically unragdolls the humanoid. "},{"title":"RagdollClient","type":0,"sectionRef":"#","url":"api/RagdollClient","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RagdollClient","url":"api/RagdollClient#functions","content":" "},{"title":"new​","type":1,"pageTitle":"RagdollClient","url":"api/RagdollClient#new","content":"&lt;/&gt; RagdollClient.new( humanoid: Humanoid , serviceBag: ServiceBag ) → RagdollClient Constructs a new RagdollClient. Should be done via Binder. See RagdollBindersClient. "},{"title":"RagdollConstants","type":0,"sectionRef":"#","url":"api/RagdollConstants","content":"On this page RagdollConstants Constants for the Ragdoll class.","keywords":""},{"title":"RagdollHumanoidOnDeathClient","type":0,"sectionRef":"#","url":"api/RagdollHumanoidOnDeathClient","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RagdollHumanoidOnDeathClient","url":"api/RagdollHumanoidOnDeathClient#functions","content":" "},{"title":"new​","type":1,"pageTitle":"RagdollHumanoidOnDeathClient","url":"api/RagdollHumanoidOnDeathClient#new","content":"&lt;/&gt; RagdollHumanoidOnDeathClient.new( humanoid: Humanoid , serviceBag: ServiceBag ) → RagdollHumanoidOnDeathClient Constructs a new RagdollHumanoidOnDeathClient. Should be done via Binder. See RagdollBindersClient. "},{"title":"RagdollHumanoidOnDeath","type":0,"sectionRef":"#","url":"api/RagdollHumanoidOnDeath","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RagdollHumanoidOnDeath","url":"api/RagdollHumanoidOnDeath#functions","content":" "},{"title":"new​","type":1,"pageTitle":"RagdollHumanoidOnDeath","url":"api/RagdollHumanoidOnDeath#new","content":"&lt;/&gt; RagdollHumanoidOnDeath.new( humanoid: Humanoid , serviceBag: ServiceBag ) → RagdollHumanoidOnDeath Constructs a new RagdollHumanoidOnDeath. Should be done via Binder. See RagdollBindersServer. "},{"title":"RagdollHumanoidOnFall","type":0,"sectionRef":"#","url":"api/RagdollHumanoidOnFall","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RagdollHumanoidOnFall","url":"api/RagdollHumanoidOnFall#functions","content":" "},{"title":"new​","type":1,"pageTitle":"RagdollHumanoidOnFall","url":"api/RagdollHumanoidOnFall#new","content":"&lt;/&gt; RagdollHumanoidOnFall.new( humanoid: Humanoid , serviceBag: ServiceBag ) → RagdollHumanoidOnFall Constructs a new RagdollHumanoidOnFall. Should be done via Binder. See RagdollBindersServer. "},{"title":"RagdollHumanoidOnFallClient","type":0,"sectionRef":"#","url":"api/RagdollHumanoidOnFallClient","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RagdollHumanoidOnFallClient","url":"api/RagdollHumanoidOnFallClient#functions","content":" "},{"title":"new​","type":1,"pageTitle":"RagdollHumanoidOnFallClient","url":"api/RagdollHumanoidOnFallClient#new","content":"&lt;/&gt; RagdollHumanoidOnFallClient.new( humanoid: Humanoid , serviceBag: ServiceBag ) → RagdollHumanoidOnFallClient Constructs a new RagdollHumanoidOnFallClient. Should be done via Binder. See RagdollBindersClient. "},{"title":"RagdollHumanoidOnFallConstants","type":0,"sectionRef":"#","url":"api/RagdollHumanoidOnFallConstants","content":"On this page RagdollHumanoidOnFallConstants Constants for RagdollHumanoidOnFall.","keywords":""},{"title":"RagdollRigging","type":0,"sectionRef":"#","url":"api/RagdollRigging","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RagdollRigging","url":"api/RagdollRigging#functions","content":" "},{"title":"configureRagdollJoints​","type":1,"pageTitle":"RagdollRigging","url":"api/RagdollRigging#configureRagdollJoints","content":"&lt;/&gt; RagdollRigging.configureRagdollJoints( create: boolean,-- True if we create the joints, false if we just configure. model: Model , rigType: HumanoidRigType ) → () Creates joints on a model for a given rig type.  "},{"title":"removeRagdollJoints​","type":1,"pageTitle":"RagdollRigging","url":"api/RagdollRigging#removeRagdollJoints","content":"&lt;/&gt; RagdollRigging.removeRagdollJoints(model: Model ) → () Removes ragdoll joints for a given model  "},{"title":"getMotors​","type":1,"pageTitle":"RagdollRigging","url":"api/RagdollRigging#getMotors","content":"&lt;/&gt; RagdollRigging.getMotors( model: Model , rigType: HumanoidRigType ) → () Retrieves all joint motors for a given rigType  "},{"title":"disableParticleEmittersAndFadeOutYielding​","type":1,"pageTitle":"RagdollRigging","url":"api/RagdollRigging#disableParticleEmittersAndFadeOutYielding","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; RagdollRigging.disableParticleEmittersAndFadeOutYielding( character: Model , duration: number ) → () Disables all particle emitters and fades them out. Yields for the duration.  "},{"title":"easeJointFriction​","type":1,"pageTitle":"RagdollRigging","url":"api/RagdollRigging#easeJointFriction","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; RagdollRigging.easeJointFriction( character: Model , duration: number ) → () Applies a sliding friction torque to the character making it stiffer and stiffer. Yields. "},{"title":"RagdollService","type":0,"sectionRef":"#","url":"api/RagdollService","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RagdollService","url":"api/RagdollService#functions","content":" "},{"title":"Init​","type":1,"pageTitle":"RagdollService","url":"api/RagdollService#Init","content":"&lt;/&gt; RagdollService:Init(serviceBag: ServiceBag) → () Initializes the ragdoll service on the server. Should be done via ServiceBag.  "},{"title":"SetUnragdollAutomatically​","type":1,"pageTitle":"RagdollService","url":"api/RagdollService#SetUnragdollAutomatically","content":"&lt;/&gt; RagdollService:SetUnragdollAutomatically(unragdollAutomatically: boolean) → () Sets whether ragdolls should unragdoll automatically. "},{"title":"RagdollServiceClient","type":0,"sectionRef":"#","url":"api/RagdollServiceClient","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RagdollServiceClient","url":"api/RagdollServiceClient#functions","content":" "},{"title":"Init​","type":1,"pageTitle":"RagdollServiceClient","url":"api/RagdollServiceClient#Init","content":"&lt;/&gt; RagdollServiceClient:Init(serviceBag: ServiceBag) → () Initializes the ragdoll service on the client. Should be done via ServiceBag.  "},{"title":"SetScreenShakeEnabled​","type":1,"pageTitle":"RagdollServiceClient","url":"api/RagdollServiceClient#SetScreenShakeEnabled","content":"&lt;/&gt; RagdollServiceClient:SetScreenShakeEnabled(value: boolelan) → () Sets screen shake enabled for the local player  "},{"title":"GetScreenShakeEnabled​","type":1,"pageTitle":"RagdollServiceClient","url":"api/RagdollServiceClient#GetScreenShakeEnabled","content":"&lt;/&gt; RagdollServiceClient:GetScreenShakeEnabled() → boolean Returns wheher screenshake is enabled. "},{"title":"RagdollServiceConstants","type":0,"sectionRef":"#","url":"api/RagdollServiceConstants","content":"On this page RagdollServiceConstants","keywords":""},{"title":"RagdollUtils","type":0,"sectionRef":"#","url":"api/RagdollUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RagdollUtils","url":"api/RagdollUtils#functions","content":" "},{"title":"setupState​","type":1,"pageTitle":"RagdollUtils","url":"api/RagdollUtils#setupState","content":"&lt;/&gt; RagdollUtils.setupState(humanoid: Humanoid ) → Maid Sets up state monitoring for when the humanoid changes to ensure ragdoll is smooth.  "},{"title":"preventAnimationTransformLoop​","type":1,"pageTitle":"RagdollUtils","url":"api/RagdollUtils#preventAnimationTransformLoop","content":"&lt;/&gt; RagdollUtils.preventAnimationTransformLoop(humanoid: Humanoid ) → Maid Prevents animations from being applied on the humanoid torso on both the server and client. note We need this on all clients/servers to override animations!  "},{"title":"setupMotors​","type":1,"pageTitle":"RagdollUtils","url":"api/RagdollUtils#setupMotors","content":"&lt;/&gt; RagdollUtils.setupMotors(humanoid: Humanoid ) → Maid Sets up the motors so that ragdoll can go, applying velocities to the ragdoll. This needs to occur on the network owner of the character first.  "},{"title":"setupHead​","type":1,"pageTitle":"RagdollUtils","url":"api/RagdollUtils#setupHead","content":"&lt;/&gt; RagdollUtils.setupHead(humanoid: Humanoid ) → MaidTask If the head is not a mesh part, this resizes the head into a mesh part with correct physics, and ensures the head scaling is correct. "},{"title":"RandomUtils","type":0,"sectionRef":"#","url":"api/RandomUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RandomUtils","url":"api/RandomUtils#functions","content":" "},{"title":"choice​","type":1,"pageTitle":"RandomUtils","url":"api/RandomUtils#choice","content":"&lt;/&gt; RandomUtils.choice( list: {T}, random: Random? -- Optional ) → T? Picks an option from a list. Returns nil if the list is empty. local options = Players:GetPlayers() local choice = RandomUtils.choice(options) print(choice) Deterministic version: local options = { &quot;apples&quot;, &quot;oranges&quot;, &quot;bananas&quot; } local random = Random.new() print(RandomUtils.choice(options, random)) --&gt; &quot;apples&quot;   "},{"title":"shuffledCopy​","type":1,"pageTitle":"RandomUtils","url":"api/RandomUtils#shuffledCopy","content":"&lt;/&gt; RandomUtils.shuffledCopy( list: {T},-- A new table to copy random: Random? -- Optional random to use when shuffling ) → {T} Creates a copy of the table, but shuffled using fisher-yates shuffle local options = { &quot;apples&quot;, &quot;oranges&quot;, &quot;bananas&quot; } local random = Random.new() print(RandomUtils.shuffledCopy(options)) --&gt; shuffled copy of table print(RandomUtils.shuffledCopy(options, random)) --&gt; deterministic shuffled copy of table   "},{"title":"shuffle​","type":1,"pageTitle":"RandomUtils","url":"api/RandomUtils#shuffle","content":"&lt;/&gt; RandomUtils.shuffle( list: {T}, random: Random? -- Optional random to use when shuffling ) → () Shuffles the list in place using fisher-yates shuffle. local options = { &quot;apples&quot;, &quot;oranges&quot;, &quot;bananas&quot; } local random = Random.new() RandomUtils.shuffle(options, random) print(options) --&gt; deterministic shuffled copy of table RandomUtils.shuffle(options) print(options) --&gt; shuffled table   "},{"title":"weightedChoice​","type":1,"pageTitle":"RandomUtils","url":"api/RandomUtils#weightedChoice","content":"&lt;/&gt; RandomUtils.weightedChoice( list: {T},-- List of options weights: {number},-- Array the same length with weights. random: Random? -- Optional random ) → T?-- May return nil if the list is empty Like RandomUtils.choice but weighted options in a performance friendly way. Takes O(n) time. warning A weight of 0 may still be picked, and negative weights may result in undefined behavior. local weights = { 1, 3, 10 } local options = { &quot;a&quot;, &quot;b&quot;, &quot;c&quot; } print(RandomUtils.weightedChoice(options, weights)) --&gt; &quot;c&quot;   "},{"title":"gaussianRandom​","type":1,"pageTitle":"RandomUtils","url":"api/RandomUtils#gaussianRandom","content":"&lt;/&gt; RandomUtils.gaussianRandom( random: Random? -- Optional random to use ) → number Computes the gaussian random function which is the independent probability curve.  "},{"title":"randomUnitVector3​","type":1,"pageTitle":"RandomUtils","url":"api/RandomUtils#randomUnitVector3","content":"&lt;/&gt; RandomUtils.randomUnitVector3( random?: Random? -- Optional random to use ) → Vector3   "},{"title":"RandomVector3Utils","type":0,"sectionRef":"#","url":"api/RandomVector3Utils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RandomVector3Utils","url":"api/RandomVector3Utils#functions","content":" "},{"title":"getRandomUnitVector​","type":1,"pageTitle":"RandomVector3Utils","url":"api/RandomVector3Utils#getRandomUnitVector","content":"&lt;/&gt; RandomVector3Utils.getRandomUnitVector() → Vector3  Equal distribution unit vectors around a sphere "},{"title":"Raycaster","type":0,"sectionRef":"#","url":"api/Raycaster","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Raycaster","url":"api/Raycaster#types","content":" "},{"title":"RaycastData​","type":1,"pageTitle":"Raycaster","url":"api/Raycaster#RaycastData","content":"&lt;/&gt; interface RaycastData { Part: Instance Position: Vector3 Normal: Vector3 Material: Enum.Material } Raycast data used by filter functions of the Raycaster. "},{"title":"Properties​","type":1,"pageTitle":"Raycaster","url":"api/Raycaster#properties","content":" "},{"title":"IgnoreList​","type":1,"pageTitle":"Raycaster","url":"api/Raycaster#IgnoreList","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Raycaster.IgnoreList: {Instance } Current ignore list  "},{"title":"Filter​","type":1,"pageTitle":"Raycaster","url":"api/Raycaster#Filter","content":"&lt;/&gt; Raycaster.Filter: function The current filter function  "},{"title":"IgnoreWater​","type":1,"pageTitle":"Raycaster","url":"api/Raycaster#IgnoreWater","content":"&lt;/&gt; Raycaster.IgnoreWater: boolean Whether or not to ignore water  "},{"title":"MaxCasts​","type":1,"pageTitle":"Raycaster","url":"api/Raycaster#MaxCasts","content":"&lt;/&gt; Raycaster.MaxCasts: number Total number of casts allowed "},{"title":"Functions​","type":1,"pageTitle":"Raycaster","url":"api/Raycaster#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Raycaster","url":"api/Raycaster#new","content":"&lt;/&gt; Raycaster.new( doIgnoreFunction: (data: RaycastData) → boolean-- Returns true to ignore ) → () Constructs a new Raycaster.  "},{"title":"Ignore​","type":1,"pageTitle":"Raycaster","url":"api/Raycaster#Ignore","content":"&lt;/&gt; Raycaster:Ignore(tableOrInstance: Instance | {Instance }) → () Ignores the value  "},{"title":"FindPartOnRay​","type":1,"pageTitle":"Raycaster","url":"api/Raycaster#FindPartOnRay","content":"&lt;/&gt; Raycaster:FindPartOnRay(ray: Ray ) → RaycastData? Repeats raycasts until exhausted attempts, or a result is found. "},{"title":"RaycastUtils","type":0,"sectionRef":"#","url":"api/RaycastUtils","content":"On this page RaycastUtils General utility for raycasting Author: Quenty, AxisAngle","keywords":""},{"title":"Region3int16Utils","type":0,"sectionRef":"#","url":"api/Region3int16Utils","content":"On this page Region3int16Utils Module for working with Region3int16","keywords":""},{"title":"Region3Utils","type":0,"sectionRef":"#","url":"api/Region3Utils","content":"On this page Region3Utils Utility methods for Region3","keywords":""},{"title":"RemoteFunctionUtils","type":0,"sectionRef":"#","url":"api/RemoteFunctionUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RemoteFunctionUtils","url":"api/RemoteFunctionUtils#functions","content":" "},{"title":"promiseInvokeServer​","type":1,"pageTitle":"RemoteFunctionUtils","url":"api/RemoteFunctionUtils#promiseInvokeServer","content":"&lt;/&gt; RemoteFunctionUtils.promiseInvokeServer( remoteFunction: RemoteFunction , ...: any ) → Promise&lt;T&gt; Invokes the server with the remote function call. "},{"title":"ResetService","type":0,"sectionRef":"#","url":"api/ResetService","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ResetService","url":"api/ResetService#functions","content":" "},{"title":"Init​","type":1,"pageTitle":"ResetService","url":"api/ResetService#Init","content":"&lt;/&gt; ResetService:Init() → () Initializes the reset service. Should be done via a ServiceBag. "},{"title":"ResetServiceClient","type":0,"sectionRef":"#","url":"api/ResetServiceClient","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ResetServiceClient","url":"api/ResetServiceClient#functions","content":" "},{"title":"Init​","type":1,"pageTitle":"ResetServiceClient","url":"api/ResetServiceClient#Init","content":"&lt;/&gt; ResetServiceClient:Init() → () Initializes the reset service. Should be done via a ServiceBag.  "},{"title":"RequestResetCharacter​","type":1,"pageTitle":"ResetServiceClient","url":"api/ResetServiceClient#RequestResetCharacter","content":"&lt;/&gt; ResetServiceClient:RequestResetCharacter() → () Requests the player's character resets "},{"title":"ResetServiceConstants","type":0,"sectionRef":"#","url":"api/ResetServiceConstants","content":"On this page ResetServiceConstants","keywords":""},{"title":"ResourceConstants","type":0,"sectionRef":"#","url":"api/ResourceConstants","content":"On this page ResourceConstants This item is only intended to be used by the module's authors. Private Holds constants for resource retrieval.","keywords":""},{"title":"RigBuilderUtils","type":0,"sectionRef":"#","url":"api/RigBuilderUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RigBuilderUtils","url":"api/RigBuilderUtils#functions","content":" "},{"title":"createR6MeshRig​","type":1,"pageTitle":"RigBuilderUtils","url":"api/RigBuilderUtils#createR6MeshRig","content":"&lt;/&gt; RigBuilderUtils.createR6MeshRig() → Instance  Creates an R6 mesh rig  "},{"title":"createR6MeshBoyRig​","type":1,"pageTitle":"RigBuilderUtils","url":"api/RigBuilderUtils#createR6MeshBoyRig","content":"&lt;/&gt; RigBuilderUtils.createR6MeshBoyRig() → Instance  Creates an R6 boy mesh rig  "},{"title":"createR6MeshGirlRig​","type":1,"pageTitle":"RigBuilderUtils","url":"api/RigBuilderUtils#createR6MeshGirlRig","content":"&lt;/&gt; RigBuilderUtils.createR6MeshGirlRig() → Instance  Creates an R6 girl mesh rig  "},{"title":"promiseR15PackageRig​","type":1,"pageTitle":"RigBuilderUtils","url":"api/RigBuilderUtils#promiseR15PackageRig","content":"&lt;/&gt; RigBuilderUtils.promiseR15PackageRig(packageAssetId: number) → Promise&lt;Instance &gt; Creates an R15 rig from a package  "},{"title":"promiseR15Rig​","type":1,"pageTitle":"RigBuilderUtils","url":"api/RigBuilderUtils#promiseR15Rig","content":"&lt;/&gt; RigBuilderUtils.promiseR15Rig() → Promise&lt;Instance &gt; Creates a default R15 rig  "},{"title":"promiseR15ManRig​","type":1,"pageTitle":"RigBuilderUtils","url":"api/RigBuilderUtils#promiseR15ManRig","content":"&lt;/&gt; RigBuilderUtils.promiseR15ManRig() → Promise&lt;Instance &gt; Creates an R15 man rig  "},{"title":"promiseR15WomanRig​","type":1,"pageTitle":"RigBuilderUtils","url":"api/RigBuilderUtils#promiseR15WomanRig","content":"&lt;/&gt; RigBuilderUtils.promiseR15WomanRig() → Promise&lt;Instance &gt; Creates an R15 woman rig  "},{"title":"promiseR15MeshRig​","type":1,"pageTitle":"RigBuilderUtils","url":"api/RigBuilderUtils#promiseR15MeshRig","content":"&lt;/&gt; RigBuilderUtils.promiseR15MeshRig() → Promise&lt;Instance &gt; Creates an R15 mesh rig  "},{"title":"promisePlayerRig​","type":1,"pageTitle":"RigBuilderUtils","url":"api/RigBuilderUtils#promisePlayerRig","content":"&lt;/&gt; RigBuilderUtils.promisePlayerRig(userId: number) → Promise&lt;Instance &gt; Creates an R15 rig dressed as a given player "},{"title":"RobloxApiClass","type":0,"sectionRef":"#","url":"api/RobloxApiClass","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RobloxApiClass","url":"api/RobloxApiClass#functions","content":" "},{"title":"new​","type":1,"pageTitle":"RobloxApiClass","url":"api/RobloxApiClass#new","content":"&lt;/&gt; RobloxApiClass.new( robloxApiDump: RobloxApiDump, data: table ) → RobloxApiClass Constructs a new RobloxApiClass. See RobloxApiDump.PromiseClass to actually construct this class.  "},{"title":"GetRawData​","type":1,"pageTitle":"RobloxApiClass","url":"api/RobloxApiClass#GetRawData","content":"&lt;/&gt; RobloxApiClass:GetRawData() → table Retrieves the raw class data  "},{"title":"GetClassName​","type":1,"pageTitle":"RobloxApiClass","url":"api/RobloxApiClass#GetClassName","content":"&lt;/&gt; RobloxApiClass:GetClassName() → string Gets the class name.  "},{"title":"GetMemberCategory​","type":1,"pageTitle":"RobloxApiClass","url":"api/RobloxApiClass#GetMemberCategory","content":"&lt;/&gt; RobloxApiClass:GetMemberCategory() → string? Gets the class category.  "},{"title":"PromiseSuperClass​","type":1,"pageTitle":"RobloxApiClass","url":"api/RobloxApiClass#PromiseSuperClass","content":"&lt;/&gt; RobloxApiClass:PromiseSuperClass() → Promise&lt;RobloxApiClass&gt; Retrieves the super class, or rejects.  "},{"title":"PromiseIsA​","type":1,"pageTitle":"RobloxApiClass","url":"api/RobloxApiClass#PromiseIsA","content":"&lt;/&gt; RobloxApiClass:PromiseIsA(className: string) → Promise&lt;boolean&gt; Returns a promise that resolves whether this class is of a specific type.  "},{"title":"PromiseIsDescendantOf​","type":1,"pageTitle":"RobloxApiClass","url":"api/RobloxApiClass#PromiseIsDescendantOf","content":"&lt;/&gt; RobloxApiClass:PromiseIsDescendantOf(className: string) → Promise&lt;boolean&gt; Returns a promise that resolves whether this class is a descendant of another specific class.  "},{"title":"PromiseAllSuperClasses​","type":1,"pageTitle":"RobloxApiClass","url":"api/RobloxApiClass#PromiseAllSuperClasses","content":"&lt;/&gt; RobloxApiClass:PromiseAllSuperClasses() → Promise&lt;{RobloxApiClass}&gt; Returns a promise that resolves to all super classes.  "},{"title":"GetSuperClassName​","type":1,"pageTitle":"RobloxApiClass","url":"api/RobloxApiClass#GetSuperClassName","content":"&lt;/&gt; RobloxApiClass:GetSuperClassName() → string? Returns the super class name  "},{"title":"HasSuperClass​","type":1,"pageTitle":"RobloxApiClass","url":"api/RobloxApiClass#HasSuperClass","content":"&lt;/&gt; RobloxApiClass:HasSuperClass() → boolean Returns whether the class has a super class  "},{"title":"PromiseMembers​","type":1,"pageTitle":"RobloxApiClass","url":"api/RobloxApiClass#PromiseMembers","content":"&lt;/&gt; RobloxApiClass:PromiseMembers() → Promise&lt;{RobloxApiMember}&gt; Retrieves all class members (events, properties, callbacks, functions).  "},{"title":"PromiseProperties​","type":1,"pageTitle":"RobloxApiClass","url":"api/RobloxApiClass#PromiseProperties","content":"&lt;/&gt; RobloxApiClass:PromiseProperties() → Promise&lt;{RobloxApiMember}&gt; Gets all class properties.  "},{"title":"PromiseEvents​","type":1,"pageTitle":"RobloxApiClass","url":"api/RobloxApiClass#PromiseEvents","content":"&lt;/&gt; RobloxApiClass:PromiseEvents() → Promise&lt;{RobloxApiMember}&gt; Gets all class events.  "},{"title":"PromiseFunctions​","type":1,"pageTitle":"RobloxApiClass","url":"api/RobloxApiClass#PromiseFunctions","content":"&lt;/&gt; RobloxApiClass:PromiseFunctions() → Promise&lt;{RobloxApiMember}&gt; Gets all class functions (i.e. methods).  "},{"title":"IsService​","type":1,"pageTitle":"RobloxApiClass","url":"api/RobloxApiClass#IsService","content":"&lt;/&gt; RobloxApiClass:IsService() → boolean Retrieves whether the class is a service  "},{"title":"IsNotCreatable​","type":1,"pageTitle":"RobloxApiClass","url":"api/RobloxApiClass#IsNotCreatable","content":"&lt;/&gt; RobloxApiClass:IsNotCreatable() → boolean Retrieves whether the class is not creatable  "},{"title":"IsNotReplicated​","type":1,"pageTitle":"RobloxApiClass","url":"api/RobloxApiClass#IsNotReplicated","content":"&lt;/&gt; RobloxApiClass:IsNotReplicated() → boolean Retrieves whether the class is not replicated  "},{"title":"HasTag​","type":1,"pageTitle":"RobloxApiClass","url":"api/RobloxApiClass#HasTag","content":"&lt;/&gt; RobloxApiClass:HasTag(tagName: string) → boolean Retrieves whether the class has a tag or not "},{"title":"RobloxApiDump","type":0,"sectionRef":"#","url":"api/RobloxApiDump","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RobloxApiDump","url":"api/RobloxApiDump#functions","content":" "},{"title":"new​","type":1,"pageTitle":"RobloxApiDump","url":"api/RobloxApiDump#new","content":"&lt;/&gt; RobloxApiDump.new() → RobloxApiDump Constructs a new RobloxApiDump which will cache all results for its lifetime.  "},{"title":"PromiseClass​","type":1,"pageTitle":"RobloxApiDump","url":"api/RobloxApiDump#PromiseClass","content":"&lt;/&gt; RobloxApiDump:PromiseClass(className: string) → RobloxApiClass Promises the Roblox API class for the given class name.  "},{"title":"PromiseMembers​","type":1,"pageTitle":"RobloxApiDump","url":"api/RobloxApiDump#PromiseMembers","content":"&lt;/&gt; RobloxApiDump:PromiseMembers(className: string) → {RobloxApiMember} Promises all Roblox API members. "},{"title":"RobloxApiDumpConstants","type":0,"sectionRef":"#","url":"api/RobloxApiDumpConstants","content":"On this page RobloxApiDumpConstants","keywords":""},{"title":"RobloxApiMember","type":0,"sectionRef":"#","url":"api/RobloxApiMember","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RobloxApiMember","url":"api/RobloxApiMember#functions","content":" "},{"title":"new​","type":1,"pageTitle":"RobloxApiMember","url":"api/RobloxApiMember#new","content":"&lt;/&gt; RobloxApiMember.new(data: table) → RobloxApiMember Constructs a new RobloxApiMember wrapping the data given. See RobloxApiDump.PromiseMembers to actually construct this class.  "},{"title":"GetName​","type":1,"pageTitle":"RobloxApiMember","url":"api/RobloxApiMember#GetName","content":"&lt;/&gt; RobloxApiMember:GetName() → string Gets the member name.  "},{"title":"GetCategory​","type":1,"pageTitle":"RobloxApiMember","url":"api/RobloxApiMember#GetCategory","content":"&lt;/&gt; RobloxApiMember:GetCategory() → string? Gets the member category.  "},{"title":"IsReadOnly​","type":1,"pageTitle":"RobloxApiMember","url":"api/RobloxApiMember#IsReadOnly","content":"&lt;/&gt; RobloxApiMember:IsReadOnly() → boolean Retrieves whether the API member is read only.  "},{"title":"GetMemberType​","type":1,"pageTitle":"RobloxApiMember","url":"api/RobloxApiMember#GetMemberType","content":"&lt;/&gt; RobloxApiMember:GetMemberType() → string Retrieves the member type.  "},{"title":"IsEvent​","type":1,"pageTitle":"RobloxApiMember","url":"api/RobloxApiMember#IsEvent","content":"&lt;/&gt; RobloxApiMember:IsEvent() → boolean Returns whether the member is an event.  "},{"title":"GetRawData​","type":1,"pageTitle":"RobloxApiMember","url":"api/RobloxApiMember#GetRawData","content":"&lt;/&gt; RobloxApiMember:GetRawData() → table Retrieves the raw member data  "},{"title":"IsWriteNotAccessibleSecurity​","type":1,"pageTitle":"RobloxApiMember","url":"api/RobloxApiMember#IsWriteNotAccessibleSecurity","content":"&lt;/&gt; RobloxApiMember:IsWriteNotAccessibleSecurity() → boolean Returns whether this member has write NotAccessibleSecurity  "},{"title":"IsReadNotAccessibleSecurity​","type":1,"pageTitle":"RobloxApiMember","url":"api/RobloxApiMember#IsReadNotAccessibleSecurity","content":"&lt;/&gt; RobloxApiMember:IsReadNotAccessibleSecurity() → boolean Returns whether this member has write NotAccessibleSecurity  "},{"title":"IsWriteLocalUserSecurity​","type":1,"pageTitle":"RobloxApiMember","url":"api/RobloxApiMember#IsWriteLocalUserSecurity","content":"&lt;/&gt; RobloxApiMember:IsWriteLocalUserSecurity() → boolean Returns whether this member has write LocalUserSecurity  "},{"title":"IsReadLocalUserSecurity​","type":1,"pageTitle":"RobloxApiMember","url":"api/RobloxApiMember#IsReadLocalUserSecurity","content":"&lt;/&gt; RobloxApiMember:IsReadLocalUserSecurity() → boolean Returns whether this member has read LocalUserSecurity  "},{"title":"CanSerializeSave​","type":1,"pageTitle":"RobloxApiMember","url":"api/RobloxApiMember#CanSerializeSave","content":"&lt;/&gt; RobloxApiMember:CanSerializeSave() → boolean? Returns whether this can serialize save  "},{"title":"CanSerializeLoad​","type":1,"pageTitle":"RobloxApiMember","url":"api/RobloxApiMember#CanSerializeLoad","content":"&lt;/&gt; RobloxApiMember:CanSerializeLoad() → boolean? Returns whether this can serialize save  "},{"title":"GetWriteSecurity​","type":1,"pageTitle":"RobloxApiMember","url":"api/RobloxApiMember#GetWriteSecurity","content":"&lt;/&gt; RobloxApiMember:GetWriteSecurity() → string? Returns the member's write security as a string  "},{"title":"GetReadSecurity​","type":1,"pageTitle":"RobloxApiMember","url":"api/RobloxApiMember#GetReadSecurity","content":"&lt;/&gt; RobloxApiMember:GetReadSecurity() → string? Returns the member's read security as a string  "},{"title":"IsProperty​","type":1,"pageTitle":"RobloxApiMember","url":"api/RobloxApiMember#IsProperty","content":"&lt;/&gt; RobloxApiMember:IsProperty() → boolean Returns whether the member is a property.  "},{"title":"IsFunction​","type":1,"pageTitle":"RobloxApiMember","url":"api/RobloxApiMember#IsFunction","content":"&lt;/&gt; RobloxApiMember:IsFunction() → boolean Returns whether the member is a function (i.e. method).  "},{"title":"IsCallback​","type":1,"pageTitle":"RobloxApiMember","url":"api/RobloxApiMember#IsCallback","content":"&lt;/&gt; RobloxApiMember:IsCallback() → boolean Returns whether the member is a callback.  "},{"title":"IsNotScriptable​","type":1,"pageTitle":"RobloxApiMember","url":"api/RobloxApiMember#IsNotScriptable","content":"&lt;/&gt; RobloxApiMember:IsNotScriptable() → boolean Returns whether a script can modify it.  "},{"title":"IsNotReplicated​","type":1,"pageTitle":"RobloxApiMember","url":"api/RobloxApiMember#IsNotReplicated","content":"&lt;/&gt; RobloxApiMember:IsNotReplicated() → boolean Returns whether the member is not replicated.  "},{"title":"IsDeprecated​","type":1,"pageTitle":"RobloxApiMember","url":"api/RobloxApiMember#IsDeprecated","content":"&lt;/&gt; RobloxApiMember:IsDeprecated() → () Returns whether the member is deprecated..  "},{"title":"IsHidden​","type":1,"pageTitle":"RobloxApiMember","url":"api/RobloxApiMember#IsHidden","content":"&lt;/&gt; RobloxApiMember:IsHidden() → boolean Returns whether this api member is hidden.  "},{"title":"GetTags​","type":1,"pageTitle":"RobloxApiMember","url":"api/RobloxApiMember#GetTags","content":"&lt;/&gt; RobloxApiMember:GetTags() → {string} Returns a list of tags. Do not modify this list.  "},{"title":"HasTag​","type":1,"pageTitle":"RobloxApiMember","url":"api/RobloxApiMember#HasTag","content":"&lt;/&gt; RobloxApiMember:HasTag(tagName: string) → boolean Retrieves whether the member has a tag or not. "},{"title":"RobloxApiUtils","type":0,"sectionRef":"#","url":"api/RobloxApiUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RobloxApiUtils","url":"api/RobloxApiUtils#functions","content":" "},{"title":"promiseDump​","type":1,"pageTitle":"RobloxApiUtils","url":"api/RobloxApiUtils#promiseDump","content":"&lt;/&gt; RobloxApiUtils.promiseDump() → Promise&lt;table&gt; Retrieves the raw API dump from the web. "},{"title":"RoduxActionFactory","type":0,"sectionRef":"#","url":"api/RoduxActionFactory","content":"On this page RoduxActionFactory","keywords":""},{"title":"RoduxActions","type":0,"sectionRef":"#","url":"api/RoduxActions","content":"On this page RoduxActions","keywords":""},{"title":"RootPartUtils","type":0,"sectionRef":"#","url":"api/RootPartUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RootPartUtils","url":"api/RootPartUtils#functions","content":" "},{"title":"promiseRootPart​","type":1,"pageTitle":"RootPartUtils","url":"api/RootPartUtils#promiseRootPart","content":"&lt;/&gt; RootPartUtils.promiseRootPart(humanoid: Humanoid ) → Promise&lt;BasePart &gt; Given a humanoid creates a promise that will resolve once the Humanoid.RootPart property resolves properly. info This works around the fact that humanoid:GetPropertyChangedSignal(&quot;RootPart&quot;) does not fire when the rootpart changes on a humanoid. "},{"title":"RotatedCamera","type":0,"sectionRef":"#","url":"api/RotatedCamera","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"RotatedCamera","url":"api/RotatedCamera#properties","content":" "},{"title":"CameraState​","type":1,"pageTitle":"RotatedCamera","url":"api/RotatedCamera#CameraState","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; RotatedCamera.CameraState: CameraState The current state. "},{"title":"Functions​","type":1,"pageTitle":"RotatedCamera","url":"api/RotatedCamera#functions","content":" "},{"title":"new​","type":1,"pageTitle":"RotatedCamera","url":"api/RotatedCamera#new","content":"&lt;/&gt; RotatedCamera.new() → RotatedCamera Constructs a new RotatedCamera  "},{"title":"RotateXY​","type":1,"pageTitle":"RotatedCamera","url":"api/RotatedCamera#RotateXY","content":"&lt;/&gt; RotatedCamera:RotateXY( xzrotvector: Vector2 -- The delta rotation to apply ) → ()  "},{"title":"RotatingCharacter","type":0,"sectionRef":"#","url":"api/RotatingCharacter","content":"On this page RotatingCharacter Character that rotates for animations","keywords":""},{"title":"RotatingCharacterBuilder","type":0,"sectionRef":"#","url":"api/RotatingCharacterBuilder","content":"On this page RotatingCharacterBuilder","keywords":""},{"title":"RotatingLabelBuilder","type":0,"sectionRef":"#","url":"api/RotatingLabelBuilder","content":"On this page RotatingLabelBuilder Builds a new RotatingLabel. See RotatingLabel for more details. warning This class is not really maintained or used anymore.","keywords":""},{"title":"RotatingLabel","type":0,"sectionRef":"#","url":"api/RotatingLabel","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"RotatingLabel","url":"api/RotatingLabel#properties","content":" "},{"title":"Text​","type":1,"pageTitle":"RotatingLabel","url":"api/RotatingLabel#Text","content":"&lt;/&gt; RotatingLabel.Text: string Sets the text label, which it will automatically update  "},{"title":"Width​","type":1,"pageTitle":"RotatingLabel","url":"api/RotatingLabel#Width","content":"&lt;/&gt; RotatingLabel.Width: number Sets the general width of each character  "},{"title":"Transparency​","type":1,"pageTitle":"RotatingLabel","url":"api/RotatingLabel#Transparency","content":"&lt;/&gt; RotatingLabel.Transparency: number Sets the transparency  "},{"title":"Damper​","type":1,"pageTitle":"RotatingLabel","url":"api/RotatingLabel#Damper","content":"&lt;/&gt; RotatingLabel.Damper: number Sets the damper of the underlying spring model  "},{"title":"Speed​","type":1,"pageTitle":"RotatingLabel","url":"api/RotatingLabel#Speed","content":"&lt;/&gt; RotatingLabel.Speed: number Sets the speed of the underlying spring model  "},{"title":"TextXAlignment​","type":1,"pageTitle":"RotatingLabel","url":"api/RotatingLabel#TextXAlignment","content":"&lt;/&gt; RotatingLabel.TextXAlignment: TextXAlignment  Sets the alignment on the X axis. Cannot be Center. "},{"title":"RoundedBackingBuilder","type":0,"sectionRef":"#","url":"api/RoundedBackingBuilder","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RoundedBackingBuilder","url":"api/RoundedBackingBuilder#functions","content":" "},{"title":"new​","type":1,"pageTitle":"RoundedBackingBuilder","url":"api/RoundedBackingBuilder#new","content":"&lt;/&gt; RoundedBackingBuilder.new( options: {sibling: boolean}-- Options to set ) → RoundedBackingBuilder Initializes a new RoundedBackingBuilder If options.sibling is true, assumes sibling mode in the ScreenGui, defaults to true. "},{"title":"RxAttributeUtils","type":0,"sectionRef":"#","url":"api/RxAttributeUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RxAttributeUtils","url":"api/RxAttributeUtils#functions","content":" "},{"title":"observeAttribute​","type":1,"pageTitle":"RxAttributeUtils","url":"api/RxAttributeUtils#observeAttribute","content":"&lt;/&gt; RxAttributeUtils.observeAttribute( instance: Instance , attributeName: string, defaultValue: any? ) → Observable&lt;any&gt; Observes an attribute on an instance. "},{"title":"RxBinderGroupUtils","type":0,"sectionRef":"#","url":"api/RxBinderGroupUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RxBinderGroupUtils","url":"api/RxBinderGroupUtils#functions","content":" "},{"title":"observeBinders​","type":1,"pageTitle":"RxBinderGroupUtils","url":"api/RxBinderGroupUtils#observeBinders","content":"&lt;/&gt; RxBinderGroupUtils.observeBinders(binderGroup: BinderGroup&lt;T&gt;) → Observable&lt;Binder&lt;T&gt;&gt; Observes all binders in a binder group  "},{"title":"observeAllClassesBrio​","type":1,"pageTitle":"RxBinderGroupUtils","url":"api/RxBinderGroupUtils#observeAllClassesBrio","content":"&lt;/&gt; RxBinderGroupUtils.observeAllClassesBrio(binderGroup: BinderGroup&lt;T&gt;) → Observable&lt;Brio&lt;T&gt;&gt; Observes all classes in a given binder group. "},{"title":"RxBinderUtils","type":0,"sectionRef":"#","url":"api/RxBinderUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RxBinderUtils","url":"api/RxBinderUtils#functions","content":" "},{"title":"observeLinkedBoundClassBrio​","type":1,"pageTitle":"RxBinderUtils","url":"api/RxBinderUtils#observeLinkedBoundClassBrio","content":"&lt;/&gt; RxBinderUtils.observeLinkedBoundClassBrio( linkName: string, parent: Instance , binder: Binder&lt;T&gt; ) → Observable&lt;Brio&lt;T&gt;&gt; Observes a structure where a parent has object values with linked objects (for example), maybe an AI has a list of linked objectvalue tasks to execute.  "},{"title":"observeBoundChildClassBrio​","type":1,"pageTitle":"RxBinderUtils","url":"api/RxBinderUtils#observeBoundChildClassBrio","content":"&lt;/&gt; RxBinderUtils.observeBoundChildClassBrio( binder: Binder&lt;T&gt;, instance: Instance ) → Observable&lt;Brio&lt;T&gt;&gt; Observes bound children classes.  "},{"title":"observeBoundParentClassBrio​","type":1,"pageTitle":"RxBinderUtils","url":"api/RxBinderUtils#observeBoundParentClassBrio","content":"&lt;/&gt; RxBinderUtils.observeBoundParentClassBrio( binder: Binder&lt;T&gt;, instance: Instance ) → Observable&lt;Brio&lt;T&gt;&gt; Observes ainstance's parent class that is bound.  "},{"title":"observeBoundChildClassesBrio​","type":1,"pageTitle":"RxBinderUtils","url":"api/RxBinderUtils#observeBoundChildClassesBrio","content":"&lt;/&gt; RxBinderUtils.observeBoundChildClassesBrio( binders: {Binder&lt;T&gt;}, instance: Instance ) → Observable&lt;Brio&lt;T&gt;&gt; Observes all bound classes that hit that list of binders  "},{"title":"observeBoundClass​","type":1,"pageTitle":"RxBinderUtils","url":"api/RxBinderUtils#observeBoundClass","content":"&lt;/&gt; RxBinderUtils.observeBoundClass( binder: Binder&lt;T&gt;, instance: Instance ) → Observable&lt;T?&gt; Observes a bound class on a given instance.  "},{"title":"observeBoundClassBrio​","type":1,"pageTitle":"RxBinderUtils","url":"api/RxBinderUtils#observeBoundClassBrio","content":"&lt;/&gt; RxBinderUtils.observeBoundClassBrio( binder: Binder&lt;T&gt;, instance: Instance ) → Observable&lt;Brio&lt;T&gt;&gt; Observes a bound class on a given instance.  "},{"title":"observeBoundClassesBrio​","type":1,"pageTitle":"RxBinderUtils","url":"api/RxBinderUtils#observeBoundClassesBrio","content":"&lt;/&gt; RxBinderUtils.observeBoundClassesBrio( binders: {Binder&lt;T&gt;}, instance: Instance ) → Observable&lt;Brio&lt;T&gt;&gt; Observes all bound classes for a given binder.  "},{"title":"observeAllBrio​","type":1,"pageTitle":"RxBinderUtils","url":"api/RxBinderUtils#observeAllBrio","content":"&lt;/&gt; RxBinderUtils.observeAllBrio(binder: Binder) → Observable&lt;Brio&lt;T&gt;&gt; Observes all instances bound to a given binder. "},{"title":"Rx","type":0,"sectionRef":"#","url":"api/Rx","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Rx","url":"api/Rx#properties","content":" "},{"title":"EMPTY​","type":1,"pageTitle":"Rx","url":"api/Rx#EMPTY","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Rx.EMPTY: Observable&lt;()&gt; An empty observable that completes immediately  "},{"title":"NEVER​","type":1,"pageTitle":"Rx","url":"api/Rx#NEVER","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Rx.NEVER: Observable&lt;()&gt; An observable that never completes. "},{"title":"Functions​","type":1,"pageTitle":"Rx","url":"api/Rx#functions","content":" "},{"title":"pipe​","type":1,"pageTitle":"Rx","url":"api/Rx#pipe","content":"&lt;/&gt; Rx.pipe(transformers: {Observable&lt;any&gt;}) → (source: Observable&lt;T&gt;) → Observable&lt;U&gt; Pipes the tranformers through each otherhttps://rxjs-dev.firebaseapp.com/api/index/function/pipe  "},{"title":"of​","type":1,"pageTitle":"Rx","url":"api/Rx#of","content":"&lt;/&gt; Rx.of( ...: any-- Arguments to emit ) → Observable http://reactivex.io/documentation/operators/just.html Rx.of(1, 2, 3):Subscribe(print, function() print(&quot;Complete&quot;) end)) --&gt; 1, 2, 3, &quot;Complete&quot;   "},{"title":"from​","type":1,"pageTitle":"Rx","url":"api/Rx#from","content":"&lt;/&gt; Rx.from(item: Promise | table) → Observable Converts an itemhttp://reactivex.io/documentation/operators/from.html  "},{"title":"toPromise​","type":1,"pageTitle":"Rx","url":"api/Rx#toPromise","content":"&lt;/&gt; Rx.toPromise( observable: Observable&lt;T&gt;, cancelToken: CancelToken? ) → Promise&lt;T&gt; Converts a promise to an observable.  "},{"title":"merge​","type":1,"pageTitle":"Rx","url":"api/Rx#merge","content":"&lt;/&gt; Rx.merge(observables: {Observable}) → Observable https://rxjs-dev.firebaseapp.com/api/operators/merge  "},{"title":"fromSignal​","type":1,"pageTitle":"Rx","url":"api/Rx#fromSignal","content":"&lt;/&gt; Rx.fromSignal(event: Signal&lt;T&gt;) → Observable&lt;T&gt; Converts a Signal into an observable.https://rxjs-dev.firebaseapp.com/api/index/function/fromEvent  "},{"title":"fromPromise​","type":1,"pageTitle":"Rx","url":"api/Rx#fromPromise","content":"&lt;/&gt; Rx.fromPromise(promise: Promise&lt;T&gt;) → Observable&lt;T&gt; Converts a Promise into an observable.https://rxjs-dev.firebaseapp.com/api/index/function/from  "},{"title":"tap​","type":1,"pageTitle":"Rx","url":"api/Rx#tap","content":"&lt;/&gt; Rx.tap( onFire: function?, onError: function?, onComplete: function? ) → (source: Observable&lt;T&gt;) → Observable&lt;T&gt; Taps into the observable and executes the onFire/onError/onComplete commands. https://rxjs-dev.firebaseapp.com/api/operators/tap  "},{"title":"start​","type":1,"pageTitle":"Rx","url":"api/Rx#start","content":"&lt;/&gt; Rx.start(callback: function) → (source: Observable) → Observable Starts the observable with the given value from the callback http://reactivex.io/documentation/operators/start.html  "},{"title":"startFrom​","type":1,"pageTitle":"Rx","url":"api/Rx#startFrom","content":"&lt;/&gt; Rx.startFrom(callback: () → {T}) → (source: Observable) → Observable Like start, but also from (list!)  "},{"title":"startWith​","type":1,"pageTitle":"Rx","url":"api/Rx#startWith","content":"&lt;/&gt; Rx.startWith(values: {T}) → (source: Observable) → Observable Starts with the given valueshttps://rxjs-dev.firebaseapp.com/api/operators/startWith  "},{"title":"defaultsTo​","type":1,"pageTitle":"Rx","url":"api/Rx#defaultsTo","content":"&lt;/&gt; Rx.defaultsTo(value: any) → (source: Observable) → Observable Defaults the observable to a value if it isn't fired immediately Rx.NEVER:Pipe({ Rx.defaultsTo(&quot;Hello&quot;) }):Subscribe(print) --&gt; Hello   "},{"title":"defaultsToNil​","type":1,"pageTitle":"Rx","url":"api/Rx#defaultsToNil","content":"&lt;/&gt; Rx.defaultsToNil(source: Observable) → Observable Defaults the observable value to nil Rx.NEVER:Pipe({ Rx.defaultsToNil }):Subscribe(print) --&gt; nil Great for defaulting Roblox attributes and objects  "},{"title":"endWith​","type":1,"pageTitle":"Rx","url":"api/Rx#endWith","content":"&lt;/&gt; Rx.endWith(values: {T}) → (source: Observable) → Observable Ends the observable with these values before cancellationhttps://www.learnrxjs.io/learn-rxjs/operators/combination/endwith  "},{"title":"where​","type":1,"pageTitle":"Rx","url":"api/Rx#where","content":"&lt;/&gt; Rx.where(predicate: (value: T) → boolean) → (source: Observable&lt;T&gt;) → Observable&lt;T&gt; http://reactivex.io/documentation/operators/filter.html Filters out values Rx.of(1, 2, 3, 4, 5):Pipe({ Rx.where(function(value) return value % 2 == 0; end) }):Subscribe(print) --&gt; 2, 4   "},{"title":"distinct​","type":1,"pageTitle":"Rx","url":"api/Rx#distinct","content":"&lt;/&gt; Rx.distinct() → (source: Observable&lt;T&gt;) → Observable&lt;T&gt; Only takes distinct values from the observable stream. http://reactivex.io/documentation/operators/distinct.html Rx.of(1, 1, 2, 3, 3, 1):Pipe({ Rx.distinct(); }):Subscribe(print) --&gt; 1, 2, 3, 1   "},{"title":"mapTo​","type":1,"pageTitle":"Rx","url":"api/Rx#mapTo","content":"&lt;/&gt; Rx.mapTo( ...: any-- The value to map each source value to. ) → (source: Observable&lt;T&gt;) → Observable&lt;T&gt; https://rxjs.dev/api/operators/mapTo  "},{"title":"map​","type":1,"pageTitle":"Rx","url":"api/Rx#map","content":"&lt;/&gt; Rx.map(project: (T) → U) → (source: Observable&lt;T&gt;) → Observable&lt;U&gt; http://reactivex.io/documentation/operators/map.html Maps one value to another Rx.of(1, 2, 3, 4, 5):Pipe({ Rx.map(function(x) return x + 1 end) }):Subscribe(print) -&gt; 2, 3, 4, 5, 6   "},{"title":"mergeAll​","type":1,"pageTitle":"Rx","url":"api/Rx#mergeAll","content":"&lt;/&gt; Rx.mergeAll() → (source: Observable&lt;Observable&lt;T&gt;&gt;) → Observable&lt;T&gt; Merges higher order observables together. Basically, if you have an observable that is emitting an observable, this subscribes to each emitted observable and combines them into a single observable. Rx.of(Rx.of(1, 2, 3), Rx.of(4)) :Pipe({ Rx.mergeAll(); }) :Subscribe(print) -&gt; 1, 2, 3, 4   "},{"title":"switchAll​","type":1,"pageTitle":"Rx","url":"api/Rx#switchAll","content":"&lt;/&gt; Rx.switchAll() → (source: Observable&lt;Observable&lt;T&gt;&gt;) → Observable&lt;T&gt; Merges higher order observables together https://rxjs.dev/api/operators/switchAll Works like mergeAll, where you subscribe to an observable which is emitting observables. However, when another observable is emitted it disconnects from the other observable and subscribes to that one.  "},{"title":"flatMap​","type":1,"pageTitle":"Rx","url":"api/Rx#flatMap","content":"&lt;/&gt; Rx.flatMap( project: (value: T) → Observable&lt;U&gt;, resultSelector: (( initialValue: T, outputValue: U ) → U)? ) → (source: Observable&lt;T&gt;) → Observable&lt;U&gt; Sort of equivalent of promise.then() This takes a stream of observables  "},{"title":"packed​","type":1,"pageTitle":"Rx","url":"api/Rx#packed","content":"&lt;/&gt; Rx.packed(...: any) → Observable Returns an observable that takes in a tuple, and emits that tuple, then completes. Rx.packed(&quot;a&quot;, &quot;b&quot;) :Subscribe(function(first, second) print(first, second) --&gt; a, b end)   "},{"title":"unpacked​","type":1,"pageTitle":"Rx","url":"api/Rx#unpacked","content":"&lt;/&gt; Rx.unpacked(observable: Observable&lt;{T}&gt;) → Observable&lt;T&gt; Unpacks the observables value if a table is received  "},{"title":"finalize​","type":1,"pageTitle":"Rx","url":"api/Rx#finalize","content":"&lt;/&gt; Rx.finalize(finalizerCallback: () → ()) → (source: Observable&lt;T&gt;) → Observable&lt;T&gt; Acts as a finalizer callback once the subscription is unsubscribed. Rx.of(&quot;a&quot;, &quot;b&quot;):Pipe({ Rx.finalize(function() print(&quot;Subscription done!&quot;) end); }) http://reactivex.io/documentation/operators/do.html https://rxjs-dev.firebaseapp.com/api/operators/finalize https://github.com/ReactiveX/rxjs/blob/master/src/internal/operators/finalize.ts  "},{"title":"combineLatestAll​","type":1,"pageTitle":"Rx","url":"api/Rx#combineLatestAll","content":"&lt;/&gt; Rx.combineLatestAll() → (source: Observable&lt;Observable&lt;T&gt;&gt;) → Observable&lt;{T}&gt; Given an observable that emits observables, emit an observable that once the initial observable completes, the latest values of each emitted observable will be combined into an array that will be emitted. https://rxjs.dev/api/operators/combineLatestAll  "},{"title":"catchError​","type":1,"pageTitle":"Rx","url":"api/Rx#catchError","content":"&lt;/&gt; Rx.catchError(callback: (error: TError) → Observable&lt;TErrorResult&gt;) → (source: Observable&lt;T&gt;) → Observable&lt;T | TErrorResult&gt; Catches an error, and allows another observable to be subscribed in terms of handling the error. warning This method is not yet tested  "},{"title":"combineLatest​","type":1,"pageTitle":"Rx","url":"api/Rx#combineLatest","content":"&lt;/&gt; Rx.combineLatest(observables: {[TKey]: Observable&lt;TEmitted&gt; | TEmitted}) → Observable&lt;{[TKey]: TEmitted}&gt; One of the most useful functions this combines the latest values of observables at each chance! Rx.combineLatest({ child = Rx.fromSignal(Workspace.ChildAdded); lastChildRemoved = Rx.fromSignal(Workspace.ChildRemoved); value = 5; }):Subscribe(function(data) print(data.child) --&gt; last child print(data.lastChildRemoved) --&gt; other value print(data.value) --&gt; 5 end) tip Note that the resulting observable will not emit until all input observables are emitted.  "},{"title":"using​","type":1,"pageTitle":"Rx","url":"api/Rx#using","content":"&lt;/&gt; Rx.using( resourceFactory: () → MaidTask, observableFactory: (MaidTask) → Observable&lt;T&gt; ) → Observable&lt;T&gt; http://reactivex.io/documentation/operators/using.html Each time a subscription occurs, the resource is constructed and exists for the lifetime of the observation. The observableFactory uses the resource for subscription. note Note from Quenty: I haven't found this that useful.  "},{"title":"take​","type":1,"pageTitle":"Rx","url":"api/Rx#take","content":"&lt;/&gt; Rx.take(number: number) → (source: Observable&lt;T&gt;) → Observable&lt;T&gt; Takes n entries and then completes the observation. https://rxjs.dev/api/operators/take  "},{"title":"defer​","type":1,"pageTitle":"Rx","url":"api/Rx#defer","content":"&lt;/&gt; Rx.defer(observableFactory: () → Observable&lt;T&gt;) → Observable&lt;T&gt; Defers the subscription and creation of the observable until the actual subscription of the observable. https://rxjs-dev.firebaseapp.com/api/index/function/defer https://netbasal.com/getting-to-know-the-defer-observable-in-rxjs-a16f092d8c09  "},{"title":"withLatestFrom​","type":1,"pageTitle":"Rx","url":"api/Rx#withLatestFrom","content":"&lt;/&gt; Rx.withLatestFrom(inputObservables: {Observable&lt;TInput&gt;}) → (source: Observable&lt;T&gt;) → Observable&lt;{ T, ...TInput }&gt; Honestly, I have not used this one much. https://rxjs-dev.firebaseapp.com/api/operators/withLatestFrom https://medium.com/js-in-action/rxjs-nosy-combinelatest-vs-selfish-withlatestfrom-a957e1af42bf  "},{"title":"scan​","type":1,"pageTitle":"Rx","url":"api/Rx#scan","content":"&lt;/&gt; Rx.scan( accumulator: ( current: TSeed, ...: TInput ) → TResult, seed: TSeed ) → (source: Observable&lt;TInput&gt;) → Observable&lt;TResult&gt; https://rxjs-dev.firebaseapp.com/api/operators/scan  "},{"title":"throttleTime​","type":1,"pageTitle":"Rx","url":"api/Rx#throttleTime","content":"&lt;/&gt; Rx.throttleTime( duration: number, throttleConfig: {leading=true;trailing=true;} ) → (source: Observable) → Observable Throttles emission of observables. https://rxjs-dev.firebaseapp.com/api/operators/debounceTime note Note that on complete, the last item is not included, for now, unlike the existing version in rxjs.  "},{"title":"throttleDefer​","type":1,"pageTitle":"Rx","url":"api/Rx#throttleDefer","content":"&lt;/&gt; Rx.throttleDefer() → (source: Observable) → Observable Throttles emission of observables on the defer stack to the last emission.  "},{"title":"combineAll​","type":1,"pageTitle":"Rx","url":"api/Rx#combineAll","content":"deprecated in 1.0.0 &lt;/&gt; This was deprecated in 1.0.0 Use Rx.combineLatestAll Rx.combineAll() → (source: Observable&lt;Observable&lt;T&gt;&gt;) → Observable&lt;{T}&gt; The same as combineLatestAll. This is for backwards compatability, and is deprecated. "},{"title":"RxCooldownUtils","type":0,"sectionRef":"#","url":"api/RxCooldownUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RxCooldownUtils","url":"api/RxCooldownUtils#functions","content":" "},{"title":"observeCooldownBrio​","type":1,"pageTitle":"RxCooldownUtils","url":"api/RxCooldownUtils#observeCooldownBrio","content":"&lt;/&gt; RxCooldownUtils.observeCooldownBrio( cooldownBinder: Binder&lt;Cooldown | CooldownClient&gt;, parent: Instance ) → Observable&lt;Brio&lt;Cooldown | CooldownClient&gt;&gt; Observes a cooldown "},{"title":"RxBrioUtils","type":0,"sectionRef":"#","url":"api/RxBrioUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RxBrioUtils","url":"api/RxBrioUtils#functions","content":" "},{"title":"toBrio​","type":1,"pageTitle":"RxBrioUtils","url":"api/RxBrioUtils#toBrio","content":"&lt;/&gt; RxBrioUtils.toBrio() → (source: Observable&lt;Brio&lt;T&gt; | T&gt;) → Observable&lt;Brio&lt;T&gt;&gt; Takes a result and converts it to a brio if it is not one.  "},{"title":"completeOnDeath​","type":1,"pageTitle":"RxBrioUtils","url":"api/RxBrioUtils#completeOnDeath","content":"&lt;/&gt; RxBrioUtils.completeOnDeath( brio: Brio, observable: Observable&lt;T&gt; ) → Observable&lt;T&gt; Completes the observable on death  "},{"title":"emitWhileAllDead​","type":1,"pageTitle":"RxBrioUtils","url":"api/RxBrioUtils#emitWhileAllDead","content":"&lt;/&gt; RxBrioUtils.emitWhileAllDead(valueToEmitWhileAllDead: T) → (source: Observable&lt;Brio&lt;U&gt;&gt;) → Observable&lt;Brio&lt;U | T&gt;&gt; Whenever all returned brios are dead, emits this value wrapped in a brio.  "},{"title":"reduceToAliveList​","type":1,"pageTitle":"RxBrioUtils","url":"api/RxBrioUtils#reduceToAliveList","content":"&lt;/&gt; RxBrioUtils.reduceToAliveList(selectFromBrio: ((value: T) → U)?) → (source: Observable&lt;Brio&lt;T&gt;&gt;) → Observable&lt;Brio{U}&gt; This can't be cheap. Consider deeply if you want this or not.  "},{"title":"reemitLastBrioOnDeath​","type":1,"pageTitle":"RxBrioUtils","url":"api/RxBrioUtils#reemitLastBrioOnDeath","content":"&lt;/&gt; RxBrioUtils.reemitLastBrioOnDeath() → (sourceObservable&lt;Brio&lt;T&gt;&gt;) → Observable&lt;Brio&lt;T&gt;&gt; Whenever the last brio dies, reemit it as a dead brio  "},{"title":"where​","type":1,"pageTitle":"RxBrioUtils","url":"api/RxBrioUtils#where","content":"since 3.6.0 &lt;/&gt; RxBrioUtils.where(predicate: (T) → boolean) → (source: Observable&lt;Brio&lt;T&gt;&gt;) → Observable&lt;Brio&lt;T&gt;&gt; Unpacks the brio, and then repacks it. Ignored items still invalidate the previous brio  "},{"title":"flatMapBrio​","type":1,"pageTitle":"RxBrioUtils","url":"api/RxBrioUtils#flatMapBrio","content":"since 3.6.0 &lt;/&gt; RxBrioUtils.flatMapBrio(project: (value: TBrio) → TProject | Brio&lt;TProject&gt;) → (source: Observable&lt;Brio&lt;TBrio&gt;&gt; → Observable&lt;Brio&lt;TResult&gt;&gt;) Flat map equivalent for brios. The resulting observables will be disconnected at the end of the brio. Like RxBrioUtils.flatMap, but emitted values are wrapped in brios. The lifetime of this brio is limited by the lifetime of the input brios, which are unwrapped and repackaged.  "},{"title":"switchMapBrio​","type":1,"pageTitle":"RxBrioUtils","url":"api/RxBrioUtils#switchMapBrio","content":"since 3.6.0 &lt;/&gt; RxBrioUtils.switchMapBrio(project: (value: TBrio) → TProject | Brio&lt;TProject&gt;) → (source: Observable&lt;Brio&lt;TBrio&gt;&gt;) → Observable&lt;Brio&lt;TResult&gt;&gt; Switch map but for brios. The resulting observable will be disconnected on the end of the brio's life. Like RxBrioUtils.switchMap but emitted values are wrapped in brios. The lifetime of this brio is limited by the lifetime of the input brios, which are unwrapped and repackaged.  "},{"title":"flatCombineLatest​","type":1,"pageTitle":"RxBrioUtils","url":"api/RxBrioUtils#flatCombineLatest","content":"since 3.6.0 &lt;/&gt; RxBrioUtils.flatCombineLatest(observables: {[any]: Observable&lt;Brio&lt;T&gt;&gt; | Observable&lt;T&gt; | T}) → Observable&lt;{[any]: T?}&gt; Works line combineLatest, but allow the transformation of a brio into an observable that emits the value, and then nil, on death. The issue here is this: Resources are found with combineLatest() One resource dies All resources are invalidated We still wanted to be able to use most of the resources With this method we are able to do this, as we'll re-emit a table with all resoruces except the invalidated one.  "},{"title":"prepend​","type":1,"pageTitle":"RxBrioUtils","url":"api/RxBrioUtils#prepend","content":"since 3.6.0 &lt;/&gt; RxBrioUtils.prepend(...: T) → (source: Observable&lt;Brio&lt;U&gt;&gt;) → Observable&lt;Brio&lt;U | T&gt;&gt; Prepends the value onto the emitted brio  "},{"title":"extend​","type":1,"pageTitle":"RxBrioUtils","url":"api/RxBrioUtils#extend","content":"since 3.6.0 &lt;/&gt; RxBrioUtils.extend(...: T) → (source: Observable&lt;Brio&lt;U&gt;&gt;) → Observable&lt;Brio&lt;U | T&gt;&gt; Extends the value onto the emitted brio  "},{"title":"map​","type":1,"pageTitle":"RxBrioUtils","url":"api/RxBrioUtils#map","content":"since 3.6.0 &lt;/&gt; RxBrioUtils.map(project: project(Brio&lt;T&gt; | T) → Brio&lt;U&gt; | U) → (source: Observable&lt;Brio&lt;T&gt; | T&gt;) → Observable&lt;Brio&lt;U&gt;&gt; Maps the input brios to the output observables  "},{"title":"mapBrioBrio​","type":1,"pageTitle":"RxBrioUtils","url":"api/RxBrioUtils#mapBrioBrio","content":"since 3.6.0 &lt;/&gt; RxBrioUtils.mapBrioBrio(project: (value: TBrio) → TProject | Brio&lt;TProject&gt;) → (brio&lt;TBrio&gt;) → Brio&lt;TProject&gt; Takes in a brio and returns an observable that emits the brio, and then completes on death.  "},{"title":"toEmitOnDeathObservable​","type":1,"pageTitle":"RxBrioUtils","url":"api/RxBrioUtils#toEmitOnDeathObservable","content":"&lt;/&gt; RxBrioUtils.toEmitOnDeathObservable( brio: Brio&lt;T&gt; | T, emitOnDeathValue: U ) → Observable&lt;T | U&gt; Transforms the brio into an observable that emits the initial value of the brio, and then another value on death  "},{"title":"mapBrioToEmitOnDeathObservable​","type":1,"pageTitle":"RxBrioUtils","url":"api/RxBrioUtils#mapBrioToEmitOnDeathObservable","content":"&lt;/&gt; RxBrioUtils.mapBrioToEmitOnDeathObservable(emitOnDeathValue: U) → (brio: Brio&lt;T&gt; | T) → Observable&lt;T | U&gt; Returns a mapping function that emits the given value.  "},{"title":"emitOnDeath​","type":1,"pageTitle":"RxBrioUtils","url":"api/RxBrioUtils#emitOnDeath","content":"&lt;/&gt; RxBrioUtils.emitOnDeath(emitOnDeathValue: U) → (source: Observable&lt;Brio&lt;T&gt; | T&gt;) → Observable&lt;T | U&gt; Takes in an observable of brios and returns an observable of the inner values that will also output nil if there is no other value for the brio.  "},{"title":"flattenToValueAndNil​","type":1,"pageTitle":"RxBrioUtils","url":"api/RxBrioUtils#flattenToValueAndNil","content":"&lt;/&gt; RxBrioUtils.flattenToValueAndNil(source: Observable&lt;Brio&lt;T&gt; | T&gt;) → T | nil Flattens the observable to nil and the value  "},{"title":"onlyLastBrioSurvives​","type":1,"pageTitle":"RxBrioUtils","url":"api/RxBrioUtils#onlyLastBrioSurvives","content":"&lt;/&gt; RxBrioUtils.onlyLastBrioSurvives() → (sourceObservable&lt;Brio&lt;T&gt;&gt;) → Observable&lt;Brio&lt;T&gt;&gt; Ensures only the last brio survives.  "},{"title":"switchToBrio​","type":1,"pageTitle":"RxBrioUtils","url":"api/RxBrioUtils#switchToBrio","content":"since 3.6.0 &lt;/&gt; RxBrioUtils.switchToBrio() → (source: Observable&lt;T&gt;) → Observable&lt;Brio&lt;T&gt;&gt; Switches the result to a brio, and ensures only the last brio lives.  "},{"title":"filter​","type":1,"pageTitle":"RxBrioUtils","url":"api/RxBrioUtils#filter","content":"deprecated in 3.6.0 &lt;/&gt; This was deprecated in 3.6.0 This method does not wrap the resulting value in a Brio, which can sometimes lead to leaks. RxBrioUtils.filter(predicate: (T) → boolean) → (source: Observable&lt;Brio&lt;T&gt;&gt;) → Observable&lt;Brio&lt;T&gt;&gt; Same as RxBrioUtils.where. Here to keep backwards compatability.  "},{"title":"combineLatest​","type":1,"pageTitle":"RxBrioUtils","url":"api/RxBrioUtils#combineLatest","content":"deprecated in 3.6.0 &lt;/&gt; This was deprecated in 3.6.0 This method does not wrap the resulting value in a Brio, which can sometimes lead to leaks. RxBrioUtils.combineLatest(observables: {[any]: Observable&lt;Brio&lt;T&gt;&gt; | Observable&lt;T&gt; | T}) → Observable&lt;Brio&lt;{[any]: T}&gt;&gt; Flattens all the brios in one brio and combines them. Note that this method leads to gaps in the lifetime of the brio.  "},{"title":"flatMap​","type":1,"pageTitle":"RxBrioUtils","url":"api/RxBrioUtils#flatMap","content":"deprecated in 3.6.0 &lt;/&gt; This was deprecated in 3.6.0 This method does not wrap the resulting value in a Brio, which can sometimes lead to leaks. RxBrioUtils.flatMap( project: (value: TBrio) → TProject, resultSelector: (( initialTBrio, value: TProject ) → TResult)? ) → (source: Observable&lt;Brio&lt;TBrio&gt;&gt; → Observable&lt;TResult&gt;) Flat map equivalent for brios. The resulting observables will be disconnected at the end of the brio.  "},{"title":"switchMap​","type":1,"pageTitle":"RxBrioUtils","url":"api/RxBrioUtils#switchMap","content":"deprecated in 3.6.0 &lt;/&gt; This was deprecated in 3.6.0 This method does not wrap the resulting value in a Brio, which can sometimes lead to leaks. RxBrioUtils.switchMap(project: (value: TBrio) → TProject) → (source: Observable&lt;Brio&lt;TBrio&gt;&gt;) → Observable&lt;TResult&gt; Switch map but for brios. The resulting observable will be disconnected on the end of the brio's life.  "},{"title":"mapBrio​","type":1,"pageTitle":"RxBrioUtils","url":"api/RxBrioUtils#mapBrio","content":"deprecated in 3.6.0 &lt;/&gt; This was deprecated in 3.6.0 This method does not wrap the resulting value in a Brio, which can sometimes lead to leaks. RxBrioUtils.mapBrio(project: (value: TBrio) → TProject) → (brio&lt;TBrio&gt;) → TProject Takes in a brio and returns an observable that emits the brio, and then completes on death. "},{"title":"RxInstanceUtils","type":0,"sectionRef":"#","url":"api/RxInstanceUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RxInstanceUtils","url":"api/RxInstanceUtils#functions","content":" "},{"title":"observeProperty​","type":1,"pageTitle":"RxInstanceUtils","url":"api/RxInstanceUtils#observeProperty","content":"&lt;/&gt; RxInstanceUtils.observeProperty( instance: Instance , propertyName: string ) → Observable&lt;T&gt; Observes an instance's property  "},{"title":"observeAncestry​","type":1,"pageTitle":"RxInstanceUtils","url":"api/RxInstanceUtils#observeAncestry","content":"&lt;/&gt; RxInstanceUtils.observeAncestry(instance: Instance ) → Observable&lt;Instance &gt; Observes an instance's ancestry  "},{"title":"observePropertyBrio​","type":1,"pageTitle":"RxInstanceUtils","url":"api/RxInstanceUtils#observePropertyBrio","content":"&lt;/&gt; RxInstanceUtils.observePropertyBrio( instance: Instance , propertyName: string, predicate: ((value: T) → boolean)?-- Optional filter ) → Observable&lt;Brio&lt;T&gt;&gt; Returns a brio of the property value  "},{"title":"observeLastNamedChildBrio​","type":1,"pageTitle":"RxInstanceUtils","url":"api/RxInstanceUtils#observeLastNamedChildBrio","content":"&lt;/&gt; RxInstanceUtils.observeLastNamedChildBrio( parent: Instance , className: string, name: string ) → Observable&lt;Brio&lt;Instance &gt;&gt; Observes the last child with a specific name.  "},{"title":"observeChildrenOfClassBrio​","type":1,"pageTitle":"RxInstanceUtils","url":"api/RxInstanceUtils#observeChildrenOfClassBrio","content":"&lt;/&gt; RxInstanceUtils.observeChildrenOfClassBrio( parent: Instance , className: string ) → Observable&lt;Instance &gt; Observes all children of a specific class  "},{"title":"observeChildrenBrio​","type":1,"pageTitle":"RxInstanceUtils","url":"api/RxInstanceUtils#observeChildrenBrio","content":"&lt;/&gt; RxInstanceUtils.observeChildrenBrio( parent: Instance , predicate: ((value: Instance ) → boolean)?-- Optional filter ) → Observable&lt;Brio&lt;Instance &gt;&gt; Observes all children  "},{"title":"observeDescendants​","type":1,"pageTitle":"RxInstanceUtils","url":"api/RxInstanceUtils#observeDescendants","content":"&lt;/&gt; RxInstanceUtils.observeDescendants( parent: Instance , predicate: ((value: Instance ) → boolean)?-- Optional filter ) → Observable&lt;Brio&lt;Instance &gt;&gt; Observes all descendants that match a predicate "},{"title":"RxLinkUtils","type":0,"sectionRef":"#","url":"api/RxLinkUtils","content":"On this page RxLinkUtils","keywords":""},{"title":"RxR15Utils","type":0,"sectionRef":"#","url":"api/RxR15Utils","content":"On this page RxR15Utils","keywords":""},{"title":"RxStateStackUtils","type":0,"sectionRef":"#","url":"api/RxStateStackUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RxStateStackUtils","url":"api/RxStateStackUtils#functions","content":" "},{"title":"topOfStack​","type":1,"pageTitle":"RxStateStackUtils","url":"api/RxStateStackUtils#topOfStack","content":"&lt;/&gt; RxStateStackUtils.topOfStack() → (source: Observable&lt;Brio&lt;T&gt;&gt;) → Observable&lt;T?&gt; Converts the observable of Brios into a statestack.  "},{"title":"createStateStack​","type":1,"pageTitle":"RxStateStackUtils","url":"api/RxStateStackUtils#createStateStack","content":"&lt;/&gt; RxStateStackUtils.createStateStack(observable: Observable&lt;Brio&lt;T&gt;&gt;) → StateStack&lt;T&gt; Creates a state stack from the brio's value. The state stack holds the last value seen that is valid. "},{"title":"safeDestroy","type":0,"sectionRef":"#","url":"api/safeDestroy","content":"On this page safeDestroy Fixes an issue where you can't destroy already destroyed objects.","keywords":""},{"title":"RxValueBaseUtils","type":0,"sectionRef":"#","url":"api/RxValueBaseUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RxValueBaseUtils","url":"api/RxValueBaseUtils#functions","content":" "},{"title":"observe​","type":1,"pageTitle":"RxValueBaseUtils","url":"api/RxValueBaseUtils#observe","content":"&lt;/&gt; RxValueBaseUtils.observe( parent: Instance , className: string, name: string ) → Observable&lt;any&gt;  warning This caches the last value seen, and may memory leak. :::  "},{"title":"observeBrio​","type":1,"pageTitle":"RxValueBaseUtils","url":"api/RxValueBaseUtils#observeBrio","content":"&lt;/&gt; RxValueBaseUtils.observeBrio( parent: Instance , className: string, name: string ) → Observable&lt;Brio&lt;any&gt;&gt; Observes a value base underneath a parent (last named child).  "},{"title":"observeValue​","type":1,"pageTitle":"RxValueBaseUtils","url":"api/RxValueBaseUtils#observeValue","content":"&lt;/&gt; RxValueBaseUtils.observeValue(valueObject: Instance ) → Observable&lt;T&gt; Observables a given value object's value "},{"title":"ScaleModelUtils","type":0,"sectionRef":"#","url":"api/ScaleModelUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ScaleModelUtils","url":"api/ScaleModelUtils#functions","content":" "},{"title":"scalePartSize​","type":1,"pageTitle":"ScaleModelUtils","url":"api/ScaleModelUtils#scalePartSize","content":"&lt;/&gt; ScaleModelUtils.scalePartSize( part: BasePart , scale: number ) → () Scales a given part's size and any mesh underneath it.  "},{"title":"scalePart​","type":1,"pageTitle":"ScaleModelUtils","url":"api/ScaleModelUtils#scalePart","content":"&lt;/&gt; ScaleModelUtils.scalePart( part: BasePart , scale: number, centroid: Vector3 ) → () Scales the part around the centroid  "},{"title":"scale​","type":1,"pageTitle":"ScaleModelUtils","url":"api/ScaleModelUtils#scale","content":"&lt;/&gt; ScaleModelUtils.scale( parts: {BasePart },-- Table of parts, the parts to scale scale: number,-- The scale to scale by centroid: Vector3 -- the center to scale by ) → () Scales a group of parts around a centroid  "},{"title":"createMeshFromPart​","type":1,"pageTitle":"ScaleModelUtils","url":"api/ScaleModelUtils#createMeshFromPart","content":"&lt;/&gt; ScaleModelUtils.createMeshFromPart(part: BasePart ) → Mesh? Given a part, creates a mesh for that part type if possible "},{"title":"ScoredAction","type":0,"sectionRef":"#","url":"api/ScoredAction","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"ScoredAction","url":"api/ScoredAction#properties","content":" "},{"title":"PreferredChanged​","type":1,"pageTitle":"ScoredAction","url":"api/ScoredAction#PreferredChanged","content":"&lt;/&gt; ScoredAction.PreferredChanged: Signal&lt;boolean&gt;   "},{"title":"Removing​","type":1,"pageTitle":"ScoredAction","url":"api/ScoredAction#Removing","content":"&lt;/&gt; ScoredAction.Removing: Signal&lt;()&gt;  "},{"title":"Functions​","type":1,"pageTitle":"ScoredAction","url":"api/ScoredAction#functions","content":" "},{"title":"new​","type":1,"pageTitle":"ScoredAction","url":"api/ScoredAction#new","content":"&lt;/&gt; ScoredAction.new() → ScoredAction Constructs a new ScoredAction. Should not be called directly. See ScoredActionService.GetScoredAction.  "},{"title":"IsPreferred​","type":1,"pageTitle":"ScoredAction","url":"api/ScoredAction#IsPreferred","content":"&lt;/&gt; ScoredAction:IsPreferred() → boolean Returns whether the action is currently preferred  "},{"title":"SetScore​","type":1,"pageTitle":"ScoredAction","url":"api/ScoredAction#SetScore","content":"&lt;/&gt; ScoredAction:SetScore(score: number) → () Sets the score info Big number is more important. At -math.huge we won't ever set preferred  "},{"title":"GetScore​","type":1,"pageTitle":"ScoredAction","url":"api/ScoredAction#GetScore","content":"&lt;/&gt; ScoredAction:GetScore() → number Retrieves the score  "},{"title":"PushPreferred​","type":1,"pageTitle":"ScoredAction","url":"api/ScoredAction#PushPreferred","content":"&lt;/&gt; ScoredAction:PushPreferred() → MaidTask Pushes that we're preferred "},{"title":"ScoredActionPicker","type":0,"sectionRef":"#","url":"api/ScoredActionPicker","content":"On this page ScoredActionPicker","keywords":""},{"title":"ScoredActionPickerProvider","type":0,"sectionRef":"#","url":"api/ScoredActionPickerProvider","content":"On this page ScoredActionPickerProvider","keywords":""},{"title":"ScoredActionService","type":0,"sectionRef":"#","url":"api/ScoredActionService","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ScoredActionService","url":"api/ScoredActionService#functions","content":" "},{"title":"Init​","type":1,"pageTitle":"ScoredActionService","url":"api/ScoredActionService#Init","content":"&lt;/&gt; ScoredActionService:Init(_serviceBag: ServiceBag) → () Initializes the ScoredActionService. Should be done via ServiceBag.  "},{"title":"Start​","type":1,"pageTitle":"ScoredActionService","url":"api/ScoredActionService#Start","content":"&lt;/&gt; ScoredActionService:Start() → () Starts the scored action service. Should be done via ServiceBag.  "},{"title":"GetScoredAction​","type":1,"pageTitle":"ScoredActionService","url":"api/ScoredActionService#GetScoredAction","content":"&lt;/&gt; ScoredActionService:GetScoredAction(inputKeyMapList: InputKeyMapList) → ScoredAction Gets a new scored action to use  "},{"title":"ObserveNewFromInputKeyMapList​","type":1,"pageTitle":"ScoredActionService","url":"api/ScoredActionService#ObserveNewFromInputKeyMapList","content":"&lt;/&gt; ScoredActionService:ObserveNewFromInputKeyMapList(scoreValue: NumberValue ) → (source: Observable&lt;InputKeyMapList&gt;) → Observable&lt;ScoredAction&gt; Observes a new scored action from a scoring value. warning This MUTATES state of the scored action service whenever an object is emitted. "},{"title":"ScoredActionUtils","type":0,"sectionRef":"#","url":"api/ScoredActionUtils","content":"On this page ScoredActionUtils","keywords":""},{"title":"ScriptInfoUtils","type":0,"sectionRef":"#","url":"api/ScriptInfoUtils","content":"On this page ScriptInfoUtils This item is only intended to be used by the module's authors. Private","keywords":""},{"title":"Scrollbar","type":0,"sectionRef":"#","url":"api/Scrollbar","content":"On this page Scrollbar","keywords":""},{"title":"ScrollingFrame","type":0,"sectionRef":"#","url":"api/ScrollingFrame","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ScrollingFrame","url":"api/ScrollingFrame#functions","content":" "},{"title":"new​","type":1,"pageTitle":"ScrollingFrame","url":"api/ScrollingFrame#new","content":"&lt;/&gt; ScrollingFrame.new( gui: BaseGui-- Gui to use ) → ScrollingFrame Creates a new ScrollingFrame which can be used. Prefer Container.Active = true so scroll wheel works. Container should be in a Frame with ClipsDescendants = true "},{"title":"ScrollModel","type":0,"sectionRef":"#","url":"api/ScrollModel","content":"On this page ScrollModel Scrolling model for scrolling frame","keywords":""},{"title":"ScrollType","type":0,"sectionRef":"#","url":"api/ScrollType","content":"On this page ScrollType ScrollType enum, determines scrolling behavior","keywords":""},{"title":"SelectionImageUtils","type":0,"sectionRef":"#","url":"api/SelectionImageUtils","content":"On this page SelectionImageUtils Provides a utility method to clearing selection images with blank values.","keywords":""},{"title":"ServiceBag","type":0,"sectionRef":"#","url":"api/ServiceBag","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"ServiceBag","url":"api/ServiceBag#types","content":" "},{"title":"Service​","type":1,"pageTitle":"ServiceBag","url":"api/ServiceBag#Service","content":"&lt;/&gt; interface Service { Init:: function? Start:: function? Destroy:: function? }   "},{"title":"ServiceType​","type":1,"pageTitle":"ServiceBag","url":"api/ServiceBag#ServiceType","content":"&lt;/&gt; type ServiceType = Service | ModuleScript   "},{"title":"Functions​","type":1,"pageTitle":"ServiceBag","url":"api/ServiceBag#functions","content":" "},{"title":"new​","type":1,"pageTitle":"ServiceBag","url":"api/ServiceBag#new","content":"&lt;/&gt; ServiceBag.new( parentProvider: ServiceBag?-- Optional parent provider to find services in ) → ServiceBag Constructs a new ServiceBag  "},{"title":"isServiceBag​","type":1,"pageTitle":"ServiceBag","url":"api/ServiceBag#isServiceBag","content":"&lt;/&gt; ServiceBag.isServiceBag(value: ServiceBag?) → boolean Returns whether the value is a serviceBag  "},{"title":"GetService​","type":1,"pageTitle":"ServiceBag","url":"api/ServiceBag#GetService","content":"&lt;/&gt; ServiceBag:GetService(serviceType: ServiceType) → any Retrieves the service, ensuring initialization if we are in the initialization phase.  "},{"title":"HasService​","type":1,"pageTitle":"ServiceBag","url":"api/ServiceBag#HasService","content":"&lt;/&gt; ServiceBag:HasService(serviceType: ServiceType) → boolean Returns whether the service bag has the service.  "},{"title":"Init​","type":1,"pageTitle":"ServiceBag","url":"api/ServiceBag#Init","content":"&lt;/&gt; ServiceBag:Init() → () Initializes the service bag and ensures recursive initialization can occur  "},{"title":"Start​","type":1,"pageTitle":"ServiceBag","url":"api/ServiceBag#Start","content":"&lt;/&gt; ServiceBag:Start() → () Starts the service bag and all services  "},{"title":"CreateScope​","type":1,"pageTitle":"ServiceBag","url":"api/ServiceBag#CreateScope","content":"&lt;/&gt; ServiceBag:CreateScope() → ServiceBag Creates a scoped service bag, where services within the scope will not be accessible outside of the scope.  "},{"title":"Destroy​","type":1,"pageTitle":"ServiceBag","url":"api/ServiceBag#Destroy","content":"&lt;/&gt; ServiceBag:Destroy() → () Cleans up the service bag and all services that have been initialized in the service bag. "},{"title":"Set","type":0,"sectionRef":"#","url":"api/Set","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Set","url":"api/Set#functions","content":" "},{"title":"union​","type":1,"pageTitle":"Set","url":"api/Set#union","content":"&lt;/&gt; Set.union( set: table, otherSet: table ) → table Unions the set with the other set, making a copy.  "},{"title":"unionUpdate​","type":1,"pageTitle":"Set","url":"api/Set#unionUpdate","content":"&lt;/&gt; Set.unionUpdate( set: table, otherSet: table ) → table Unions the set with the other set, updating the set  "},{"title":"intersection​","type":1,"pageTitle":"Set","url":"api/Set#intersection","content":"&lt;/&gt; Set.intersection( set: table, otherSet: table ) → table Finds the set intersection betwen the two sets  "},{"title":"copy​","type":1,"pageTitle":"Set","url":"api/Set#copy","content":"&lt;/&gt; Set.copy(set: table) → table Makes a copy of the set, making the values as true.  "},{"title":"fromTableValue​","type":1,"pageTitle":"Set","url":"api/Set#fromTableValue","content":"&lt;/&gt; Set.fromTableValue(tab: table) → table Converts a set from table values.  "},{"title":"fromList​","type":1,"pageTitle":"Set","url":"api/Set#fromList","content":"&lt;/&gt; Set.fromList(tab: table) → table Converts a set from a list  "},{"title":"toList​","type":1,"pageTitle":"Set","url":"api/Set#toList","content":"&lt;/&gt; Set.toList(set: table) → table Converts a set to a list  "},{"title":"differenceUpdate​","type":1,"pageTitle":"Set","url":"api/Set#differenceUpdate","content":"&lt;/&gt; Set.differenceUpdate( set: table, otherSet: table ) → table Converts a set to a list  "},{"title":"difference​","type":1,"pageTitle":"Set","url":"api/Set#difference","content":"&lt;/&gt; Set.difference( set: table, otherSet: table ) → table Computes the set difference between the two sets "},{"title":"setMechanismCFrame","type":0,"sectionRef":"#","url":"api/setMechanismCFrame","content":"On this page setMechanismCFrame Sets a mechanisms cframe","keywords":""},{"title":"Signal","type":0,"sectionRef":"#","url":"api/Signal","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Signal","url":"api/Signal#functions","content":" "},{"title":"isSignal​","type":1,"pageTitle":"Signal","url":"api/Signal#isSignal","content":"&lt;/&gt; Signal.isSignal(value: any) → boolean Returns whether a class is a signal  "},{"title":"new​","type":1,"pageTitle":"Signal","url":"api/Signal#new","content":"&lt;/&gt; Signal.new() → Signal&lt;T&gt; Constructs a new signal.  "},{"title":"Fire​","type":1,"pageTitle":"Signal","url":"api/Signal#Fire","content":"&lt;/&gt; Signal:Fire( ...: T-- Variable arguments to pass to handler ) → () Fire the event with the given arguments. All handlers will be invoked. Handlers follow  "},{"title":"Connect​","type":1,"pageTitle":"Signal","url":"api/Signal#Connect","content":"&lt;/&gt; Signal:Connect( handler: (...T) → ()-- Function handler called when :Fire(...) is called ) → RBXScriptConnection  Connect a new handler to the event. Returns a connection object that can be disconnected.  "},{"title":"Wait​","type":1,"pageTitle":"Signal","url":"api/Signal#Wait","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; Signal:Wait() → T Wait for fire to be called, and return the arguments it was given.  "},{"title":"Destroy​","type":1,"pageTitle":"Signal","url":"api/Signal#Destroy","content":"&lt;/&gt; Signal:Destroy() → () Disconnects all connected events to the signal. Voids the signal as unusable. Sets the metatable to nil. "},{"title":"SignalUtils","type":0,"sectionRef":"#","url":"api/SignalUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"SignalUtils","url":"api/SignalUtils#functions","content":" "},{"title":"onNext​","type":1,"pageTitle":"SignalUtils","url":"api/SignalUtils#onNext","content":"&lt;/&gt; SignalUtils.onNext( event: RBXScriptSignal , _function: function ) → RBXScriptConnection  Executes on the next event connection. "},{"title":"SlaveClock","type":0,"sectionRef":"#","url":"api/SlaveClock","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"SlaveClock","url":"api/SlaveClock#functions","content":" "},{"title":"new​","type":1,"pageTitle":"SlaveClock","url":"api/SlaveClock#new","content":"&lt;/&gt; SlaveClock.new( remoteEvent: RemoteEvent , remoteFunction: RemoteFunction ) → SlaveClock Constructs a new SlaveClock  "},{"title":"TickToSyncedTime​","type":1,"pageTitle":"SlaveClock","url":"api/SlaveClock#TickToSyncedTime","content":"&lt;/&gt; SlaveClock:TickToSyncedTime(syncedTime: number) → number Converts the syncedTime to the original tick value.  "},{"title":"GetTime​","type":1,"pageTitle":"SlaveClock","url":"api/SlaveClock#GetTime","content":"&lt;/&gt; SlaveClock:GetTime() → number Returns the sycncronized time  "},{"title":"IsSynced​","type":1,"pageTitle":"SlaveClock","url":"api/SlaveClock#IsSynced","content":"&lt;/&gt; SlaveClock:IsSynced() → boolean Returns true if the manager has synced with the server "},{"title":"SmoothPositionCamera","type":0,"sectionRef":"#","url":"api/SmoothPositionCamera","content":"On this page SmoothPositionCamera Lags the camera smoothly behind the position maintaining other components","keywords":""},{"title":"SmoothRotatedCamera","type":0,"sectionRef":"#","url":"api/SmoothRotatedCamera","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"SmoothRotatedCamera","url":"api/SmoothRotatedCamera#functions","content":" "},{"title":"RotateXY​","type":1,"pageTitle":"SmoothRotatedCamera","url":"api/SmoothRotatedCamera#RotateXY","content":"&lt;/&gt; SmoothRotatedCamera:RotateXY( xyRotateVector: Vector2 -- The delta rotation to apply ) → ()  "},{"title":"SmoothZoomedCamera","type":0,"sectionRef":"#","url":"api/SmoothZoomedCamera","content":"On this page SmoothZoomedCamera Allow freedom of movement around a current place, much like the classic script works now. Not intended to be use with the current character script Intended to be used with a SummedCamera, relative.","keywords":""},{"title":"Snackbar","type":0,"sectionRef":"#","url":"api/Snackbar","content":"On this page Snackbar Snackbars provide lightweight feedback on an operation at the base of the screen. They automatically disappear after a timeout or user interaction. There can only be one on the screen at a time.","keywords":""},{"title":"SnackbarManager","type":0,"sectionRef":"#","url":"api/SnackbarManager","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"SnackbarManager","url":"api/SnackbarManager#functions","content":" "},{"title":"WithScreenGui​","type":1,"pageTitle":"SnackbarManager","url":"api/SnackbarManager#WithScreenGui","content":"&lt;/&gt; SnackbarManager:WithScreenGui(screenGui: ScreenGui ) → SnackbarManager Sets the screenGui to use "},{"title":"SocialServiceUtils","type":0,"sectionRef":"#","url":"api/SocialServiceUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"SocialServiceUtils","url":"api/SocialServiceUtils#functions","content":" "},{"title":"promiseCanSendGameInvite​","type":1,"pageTitle":"SocialServiceUtils","url":"api/SocialServiceUtils#promiseCanSendGameInvite","content":"&lt;/&gt; SocialServiceUtils.promiseCanSendGameInvite(player: Player ) → Promise&lt;boolean&gt; Wraps SocialService:CanSendGameInviteAsync(player)  "},{"title":"promisePromptGameInvite​","type":1,"pageTitle":"SocialServiceUtils","url":"api/SocialServiceUtils#promisePromptGameInvite","content":"&lt;/&gt; SocialServiceUtils.promisePromptGameInvite(player: Player ) → Promise Prompts the user to send an in-game invite and resolves once the prompt is closed. "},{"title":"SoundPromiseUtils","type":0,"sectionRef":"#","url":"api/SoundPromiseUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"SoundPromiseUtils","url":"api/SoundPromiseUtils#functions","content":" "},{"title":"promiseLoaded​","type":1,"pageTitle":"SoundPromiseUtils","url":"api/SoundPromiseUtils#promiseLoaded","content":"&lt;/&gt; SoundPromiseUtils.promiseLoaded(sound: Sound ) → Promise Promises that a sound is loaded  "},{"title":"promiseAllSoundsLoaded​","type":1,"pageTitle":"SoundPromiseUtils","url":"api/SoundPromiseUtils#promiseAllSoundsLoaded","content":"&lt;/&gt; SoundPromiseUtils.promiseAllSoundsLoaded(sounds: {Sound }) → Promise Promises that all sounds are loaded "},{"title":"SoundUtils","type":0,"sectionRef":"#","url":"api/SoundUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"SoundUtils","url":"api/SoundUtils#functions","content":" "},{"title":"playFromId​","type":1,"pageTitle":"SoundUtils","url":"api/SoundUtils#playFromId","content":"&lt;/&gt; SoundUtils.playFromId(id: string | number) → Sound  Plays back a template given asset id. SoundUtils.playFromId(&quot;rbxassetid://4255432837&quot;) -- Plays a wooshing sound tip The sound will be automatically cleaned up after the sound is played.  "},{"title":"playTemplate​","type":1,"pageTitle":"SoundUtils","url":"api/SoundUtils#playTemplate","content":"&lt;/&gt; SoundUtils.playTemplate( templates: TemplateProvider, templateName: string ) → Sound  Plays back a template given the templateName. tip The sound will be automatically cleaned up after the sound is played.  "},{"title":"toRbxAssetId​","type":1,"pageTitle":"SoundUtils","url":"api/SoundUtils#toRbxAssetId","content":"&lt;/&gt; SoundUtils.toRbxAssetId(id: string | number) → string Converts a string or number to a string for playback.  "},{"title":"playTemplateInParent​","type":1,"pageTitle":"SoundUtils","url":"api/SoundUtils#playTemplateInParent","content":"&lt;/&gt; SoundUtils.playTemplateInParent( templates: TemplateProvider, templateName: string, parent: Instance ) → Sound  Plays back a sound template in a specific parent. tip The sound will be automatically cleaned up after the sound is played. "},{"title":"SpawnBinderGroupsServer","type":0,"sectionRef":"#","url":"api/SpawnBinderGroupsServer","content":"On this page SpawnBinderGroupsServer","keywords":""},{"title":"SpawnCmdrService","type":0,"sectionRef":"#","url":"api/SpawnCmdrService","content":"On this page SpawnCmdrService","keywords":""},{"title":"SpawnerUtils","type":0,"sectionRef":"#","url":"api/SpawnerUtils","content":"On this page SpawnerUtils","keywords":""},{"title":"SpawnService","type":0,"sectionRef":"#","url":"api/SpawnService","content":"On this page SpawnService Handles spawning stuff in the game","keywords":""},{"title":"SpawnServiceClient","type":0,"sectionRef":"#","url":"api/SpawnServiceClient","content":"On this page SpawnServiceClient","keywords":""},{"title":"SphereUtils","type":0,"sectionRef":"#","url":"api/SphereUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"SphereUtils","url":"api/SphereUtils#functions","content":" "},{"title":"intersectsRay​","type":1,"pageTitle":"SphereUtils","url":"api/SphereUtils#intersectsRay","content":"&lt;/&gt; SphereUtils.intersectsRay( sphereCenter: Vector3 , sphereRadius: number, rayOrigin: Vector3 , rayDirection: Vector3 ) → boolean Determines whether the ray intersects with the sphere. "},{"title":"Spring","type":0,"sectionRef":"#","url":"api/Spring","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Spring","url":"api/Spring#properties","content":" "},{"title":"Position​","type":1,"pageTitle":"Spring","url":"api/Spring#Position","content":"&lt;/&gt; Spring.Position: T The current position at the given clock time. Assigning the position will change the spring to have that position. local spring = Spring.new(0) print(spring.Position) --&gt; 0   "},{"title":"p​","type":1,"pageTitle":"Spring","url":"api/Spring#p","content":"&lt;/&gt; Spring.p: T Alias for Spring.Position  "},{"title":"Velocity​","type":1,"pageTitle":"Spring","url":"api/Spring#Velocity","content":"&lt;/&gt; Spring.Velocity: T The current velocity. Assigning the velocity will change the spring to have that velocity. local spring = Spring.new(0) print(spring.Velocity) --&gt; 0   "},{"title":"v​","type":1,"pageTitle":"Spring","url":"api/Spring#v","content":"&lt;/&gt; Spring.v: T Alias for Spring.Velocity  "},{"title":"Target​","type":1,"pageTitle":"Spring","url":"api/Spring#Target","content":"&lt;/&gt; Spring.Target: T The current target. Assigning the target will change the spring to have that target. local spring = Spring.new(0) print(spring.Target) --&gt; 0   "},{"title":"t​","type":1,"pageTitle":"Spring","url":"api/Spring#t","content":"&lt;/&gt; Spring.t: T Alias for Spring.Target  "},{"title":"Damper​","type":1,"pageTitle":"Spring","url":"api/Spring#Damper","content":"&lt;/&gt; Spring.Damper: number The current damper, defaults to 1. At 1 the spring is critically damped. At less than 1, it will be underdamped, and thus, bounce, and at over 1, it will be critically damped.  "},{"title":"d​","type":1,"pageTitle":"Spring","url":"api/Spring#d","content":"&lt;/&gt; Spring.d: number Alias for Spring.Damper  "},{"title":"Speed​","type":1,"pageTitle":"Spring","url":"api/Spring#Speed","content":"&lt;/&gt; Spring.Speed: number The speed, defaults to 1, but should be between [0, infinity)  "},{"title":"s​","type":1,"pageTitle":"Spring","url":"api/Spring#s","content":"&lt;/&gt; Spring.s: number Alias for Spring.Speed  "},{"title":"Clock​","type":1,"pageTitle":"Spring","url":"api/Spring#Clock","content":"&lt;/&gt; Spring.Clock: () → number The current clock object to syncronize the spring against. "},{"title":"Functions​","type":1,"pageTitle":"Spring","url":"api/Spring#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Spring","url":"api/Spring#new","content":"&lt;/&gt; Spring.new( initial: T,-- The initial parameter is a number or Vector3 (anything with * number and addition/subtraction). clock?: () → number-- The clock function is option, and is used to update the spring ) → Spring&lt;T&gt; Constructs a new Spring at the position and target specified, of type T. -- Linear spring local linearSpring = Spring.new(0) -- Vector2 spring local vector2Spring = Spring.new(Vector2.new(0, 0)) -- Vector3 spring local vector3Spring = Spring.new(Vector3.new(0, 0, 0))   "},{"title":"Impulse​","type":1,"pageTitle":"Spring","url":"api/Spring#Impulse","content":"&lt;/&gt; Spring:Impulse( velocity: T-- The velocity to impulse with ) → () Impulses the spring, increasing velocity by the amount given. This is useful to make something shake, like a Mac password box failing.  "},{"title":"TimeSkip​","type":1,"pageTitle":"Spring","url":"api/Spring#TimeSkip","content":"&lt;/&gt; Spring:TimeSkip( delta: number-- Time to skip forwards ) → () Instantly skips the spring forwards by that amount time "},{"title":"SpringObject","type":0,"sectionRef":"#","url":"api/SpringObject","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"SpringObject","url":"api/SpringObject#functions","content":" "},{"title":"new​","type":1,"pageTitle":"SpringObject","url":"api/SpringObject#new","content":"&lt;/&gt; SpringObject.new( target: T, speed: number | Observable&lt;number&gt; | ValueObject&lt;number&gt; | NumberValue | any, damper: number | Observable&lt;number&gt; | NumberValue | any ) → Spring&lt;T&gt; Constructs a new SpringObject.  "},{"title":"isSpringObject​","type":1,"pageTitle":"SpringObject","url":"api/SpringObject#isSpringObject","content":"&lt;/&gt; SpringObject.isSpringObject(value: any) → boolean Returns whether an object is a SpringObject.  "},{"title":"ObserveRenderStepped​","type":1,"pageTitle":"SpringObject","url":"api/SpringObject#ObserveRenderStepped","content":"&lt;/&gt; SpringObject:ObserveRenderStepped() → Observable&lt;T&gt; Observes the spring animating  "},{"title":"ObserveOnSignal​","type":1,"pageTitle":"SpringObject","url":"api/SpringObject#ObserveOnSignal","content":"&lt;/&gt; SpringObject:ObserveOnSignal(signal: RBXScriptSignal ) → Observable&lt;T&gt; Observes the spring animating  "},{"title":"IsAnimating​","type":1,"pageTitle":"SpringObject","url":"api/SpringObject#IsAnimating","content":"&lt;/&gt; SpringObject:IsAnimating() → boolean-- True if animating Returns true when we're animating  "},{"title":"Impulse​","type":1,"pageTitle":"SpringObject","url":"api/SpringObject#Impulse","content":"&lt;/&gt; SpringObject:Impulse( velocity: T-- The velocity to impulse with ) → () Impulses the spring, increasing velocity by the amount given. This is useful to make something shake, like a Mac password box failing.  "},{"title":"TimeSkip​","type":1,"pageTitle":"SpringObject","url":"api/SpringObject#TimeSkip","content":"&lt;/&gt; SpringObject:TimeSkip( delta: number-- Time to skip forwards ) → () Instantly skips the spring forwards by that amount time  "},{"title":"Destroy​","type":1,"pageTitle":"SpringObject","url":"api/SpringObject#Destroy","content":"&lt;/&gt; SpringObject:Destroy() → () Cleans up the BaseObject and sets the metatable to nil "},{"title":"SpringUtils","type":0,"sectionRef":"#","url":"api/SpringUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"SpringUtils","url":"api/SpringUtils#functions","content":" "},{"title":"animating​","type":1,"pageTitle":"SpringUtils","url":"api/SpringUtils#animating","content":"&lt;/&gt; SpringUtils.animating( spring: Spring&lt;T&gt;, epsilon: number?-- Optional epsilon ) → boolean,T Utility function that returns whether or not a spring is animating based upon velocity and closeness to target, and as the second value, the value that should be used.  "},{"title":"getVelocityAdjustment​","type":1,"pageTitle":"SpringUtils","url":"api/SpringUtils#getVelocityAdjustment","content":"&lt;/&gt; SpringUtils.getVelocityAdjustment( velocity: T, dampen: number, speed: number ) → T Add to spring position to adjust for velocity of target. May have to set clock to time().  "},{"title":"toLinearIfNeeded​","type":1,"pageTitle":"SpringUtils","url":"api/SpringUtils#toLinearIfNeeded","content":"&lt;/&gt; SpringUtils.toLinearIfNeeded(value: T) → LinearValue&lt;T&gt; | T Converts an arbitrary value to a LinearValue if Roblox has not defined this value for multiplication and addition.  "},{"title":"fromLinearIfNeeded​","type":1,"pageTitle":"SpringUtils","url":"api/SpringUtils#fromLinearIfNeeded","content":"&lt;/&gt; SpringUtils.fromLinearIfNeeded(value: LinearValue&lt;T&gt; | any) → T | any Extracts the base value out of a packed linear value if needed. "},{"title":"Sprite","type":0,"sectionRef":"#","url":"api/Sprite","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Sprite","url":"api/Sprite#types","content":" "},{"title":"SpriteData​","type":1,"pageTitle":"Sprite","url":"api/Sprite#SpriteData","content":"&lt;/&gt; interface SpriteData { Texture: string Size: Vector2 Position: Vector2 Name: string } Data used to construct a sprite. "},{"title":"Functions​","type":1,"pageTitle":"Sprite","url":"api/Sprite#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Sprite","url":"api/Sprite#new","content":"&lt;/&gt; Sprite.new(data: SpriteData) → Sprite Constructs a new sprite  "},{"title":"Style​","type":1,"pageTitle":"Sprite","url":"api/Sprite#Style","content":"&lt;/&gt; Sprite:Style(gui: ImageLabel | ImageButton ) → Instance  Applies the styling to the gui  "},{"title":"Get​","type":1,"pageTitle":"Sprite","url":"api/Sprite#Get","content":"&lt;/&gt; Sprite:Get(instanceType: &quot;ImageLabel&quot; | &quot;ImageButton&quot; ) → ImageLabel | ImageButton  Returns a new sprite with the specified instanceType "},{"title":"Spritesheet","type":0,"sectionRef":"#","url":"api/Spritesheet","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Spritesheet","url":"api/Spritesheet#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Spritesheet","url":"api/Spritesheet#new","content":"&lt;/&gt; Spritesheet.new(texture: string) → Spritesheet Constructs a new Spritesheet  "},{"title":"GetPreloadAssetId​","type":1,"pageTitle":"Spritesheet","url":"api/Spritesheet#GetPreloadAssetId","content":"&lt;/&gt; Spritesheet:GetPreloadAssetId() → string Retrieves the preload asset ids to use  "},{"title":"AddSprite​","type":1,"pageTitle":"Spritesheet","url":"api/Spritesheet#AddSprite","content":"&lt;/&gt; Spritesheet:AddSprite( index: any, position: Vector2 , size: Vector2 ) → () Adds a named sprite at the given index  "},{"title":"GetSprite​","type":1,"pageTitle":"Spritesheet","url":"api/Spritesheet#GetSprite","content":"&lt;/&gt; Spritesheet:GetSprite(index: any | EnumItem ) → Sprite? Retrieves the sprite for the given index  "},{"title":"HasSprite​","type":1,"pageTitle":"Spritesheet","url":"api/Spritesheet#HasSprite","content":"&lt;/&gt; Spritesheet:HasSprite(index: any | EnumItem ) → boolean Returns true if the sprite exists "},{"title":"StateStack","type":0,"sectionRef":"#","url":"api/StateStack","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"StateStack","url":"api/StateStack#properties","content":" "},{"title":"Changed​","type":1,"pageTitle":"StateStack","url":"api/StateStack#Changed","content":"&lt;/&gt; StateStack.Changed: Signal&lt;T&gt; Fires with the new state "},{"title":"Functions​","type":1,"pageTitle":"StateStack","url":"api/StateStack#functions","content":" "},{"title":"new​","type":1,"pageTitle":"StateStack","url":"api/StateStack#new","content":"&lt;/&gt; StateStack.new( defaultValue: any-- The default value to use for the statestack. ) → StateStack Constructs a new StateStack.  "},{"title":"GetCount​","type":1,"pageTitle":"StateStack","url":"api/StateStack#GetCount","content":"&lt;/&gt; StateStack:GetCount() → number Gets the count of the stack  "},{"title":"GetState​","type":1,"pageTitle":"StateStack","url":"api/StateStack#GetState","content":"&lt;/&gt; StateStack:GetState() → T? Gets the current state  "},{"title":"Observe​","type":1,"pageTitle":"StateStack","url":"api/StateStack#Observe","content":"&lt;/&gt; StateStack:Observe() → Observable&lt;T?&gt; Observes the current value of stack  "},{"title":"PushState​","type":1,"pageTitle":"StateStack","url":"api/StateStack#PushState","content":"&lt;/&gt; StateStack:PushState(state: T?) → function-- Cleanup function to invoke Pushes the current state onto the stack  "},{"title":"Destroy​","type":1,"pageTitle":"StateStack","url":"api/StateStack#Destroy","content":"&lt;/&gt; StateStack:Destroy() → () Cleans up the StateStack and sets the metatable to nil. tip Be sure to call this to clean up the state stack! "},{"title":"StaticLegacyLoader","type":0,"sectionRef":"#","url":"api/StaticLegacyLoader","content":"On this page StaticLegacyLoader This item is only intended to be used by the module's authors. Private","keywords":""},{"title":"StreamingUtils","type":0,"sectionRef":"#","url":"api/StreamingUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"StreamingUtils","url":"api/StreamingUtils#functions","content":" "},{"title":"promiseStreamAround​","type":1,"pageTitle":"StreamingUtils","url":"api/StreamingUtils#promiseStreamAround","content":"&lt;/&gt; StreamingUtils.promiseStreamAround( player: Player , position: Vector3 , timeOut: number?-- Optional ) → Promise Promises to stream the area around the player at the given position. "},{"title":"StepUtils","type":0,"sectionRef":"#","url":"api/StepUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"StepUtils","url":"api/StepUtils#functions","content":" "},{"title":"bindToRenderStep​","type":1,"pageTitle":"StepUtils","url":"api/StepUtils#bindToRenderStep","content":"&lt;/&gt; StepUtils.bindToRenderStep( update: () → boolean-- should return true while it needs to update ) → ( (...) → (),-- Connect function () → ()-- Disconnect function ) Binds the given update function to render stepped. local spring = Spring.new(0) local maid = Maid.new() local startAnimation, maid._stopAnimation = StepUtils.bindToRenderStep(function() local animating, position = SpringUtils.animating(spring) print(position) return animating end) spring.t = 1 startAnimation() tip Be sure to call the disconnect function when cleaning up, otherwise you may memory leak.  "},{"title":"bindToSignal​","type":1,"pageTitle":"StepUtils","url":"api/StepUtils#bindToSignal","content":"&lt;/&gt; StepUtils.bindToSignal( signal: Signal | RBXScriptSignal , update: () → boolean-- should return true while it needs to update ) → ( (...) → (),-- Connect function () → ()-- Disconnect function ) Binds an update event to a signal until the update function stops returning a truthy value.  "},{"title":"onceAtRenderPriority​","type":1,"pageTitle":"StepUtils","url":"api/StepUtils#onceAtRenderPriority","content":"&lt;/&gt; StepUtils.onceAtRenderPriority( priority: number, func: function-- Function to call ) → function-- Call this function to cancel call Calls the function once at the given priority level, unless the cancel callback is invoked.  "},{"title":"onceAtStepped​","type":1,"pageTitle":"StepUtils","url":"api/StepUtils#onceAtStepped","content":"&lt;/&gt; StepUtils.onceAtStepped( func: function-- Function to call ) → function-- Call this function to cancel call Invokes the function once at stepped, unless the cancel callback is called. -- Sometimes you need to defer the execution of code to make physics happy maid:GiveTask(StepUtils.onceAtStepped(function() part.CFrame = CFrame.new(0, 0, ) end))   "},{"title":"onceAtRenderStepped​","type":1,"pageTitle":"StepUtils","url":"api/StepUtils#onceAtRenderStepped","content":"&lt;/&gt; StepUtils.onceAtRenderStepped( func: function-- Function to call ) → function-- Call this function to cancel call Invokes the function once at renderstepped, unless the cancel callback is called.  "},{"title":"onceAtEvent​","type":1,"pageTitle":"StepUtils","url":"api/StepUtils#onceAtEvent","content":"&lt;/&gt; StepUtils.onceAtEvent( event: Signal | RBXScriptSignal , func: function-- Function to call ) → function-- Call this function to cancel call Invokes the function once at the given event, unless the cancel callback is called. "},{"title":"String","type":0,"sectionRef":"#","url":"api/String","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"String","url":"api/String#functions","content":" "},{"title":"trim​","type":1,"pageTitle":"String","url":"api/String#trim","content":"&lt;/&gt; String.trim( str: string, pattern: string?-- Defaults to whitespace ) → string Trims the string of the given pattern  "},{"title":"toCamelCase​","type":1,"pageTitle":"String","url":"api/String#toCamelCase","content":"&lt;/&gt; String.toCamelCase(str: string) → string Converts the string to UpperCamelCase  "},{"title":"uppercaseFirstLetter​","type":1,"pageTitle":"String","url":"api/String#uppercaseFirstLetter","content":"&lt;/&gt; String.uppercaseFirstLetter(str: string) → string Uppercases the first letter of the string  "},{"title":"toLowerCamelCase​","type":1,"pageTitle":"String","url":"api/String#toLowerCamelCase","content":"&lt;/&gt; String.toLowerCamelCase(str: string) → string Converts to the string to lowerCamelCase  "},{"title":"toPrivateCase​","type":1,"pageTitle":"String","url":"api/String#toPrivateCase","content":"&lt;/&gt; String.toPrivateCase(str: string) → string Converts the string to _privateCamelCase  "},{"title":"trimFront​","type":1,"pageTitle":"String","url":"api/String#trimFront","content":"&lt;/&gt; String.trimFront( str: string, pattern: string?-- Defaults to whitespace ) → string Like trim, but only applied to the beginning of the setring  "},{"title":"checkNumOfCharacterInString​","type":1,"pageTitle":"String","url":"api/String#checkNumOfCharacterInString","content":"&lt;/&gt; String.checkNumOfCharacterInString( str: string, char: string ) → number Counts the number of times a char appears in a string. note Note that this is not UTF8 safe  "},{"title":"isEmptyOrWhitespaceOrNil​","type":1,"pageTitle":"String","url":"api/String#isEmptyOrWhitespaceOrNil","content":"&lt;/&gt; String.isEmptyOrWhitespaceOrNil(str: string) → boolean Checks if a string is empty or nil  "},{"title":"isWhitespace​","type":1,"pageTitle":"String","url":"api/String#isWhitespace","content":"&lt;/&gt; String.isWhitespace(str: string) → boolean Returns whether or not text is only whitespace  "},{"title":"elipseLimit​","type":1,"pageTitle":"String","url":"api/String#elipseLimit","content":"&lt;/&gt; String.elipseLimit( str: string, characterLimit: number ) → string Converts text to have a ... after it if it's too long.  "},{"title":"removePrefix​","type":1,"pageTitle":"String","url":"api/String#removePrefix","content":"&lt;/&gt; String.removePrefix( str: string, prefix: string ) → string Removes a prefix from a string if it exists  "},{"title":"removePostfix​","type":1,"pageTitle":"String","url":"api/String#removePostfix","content":"&lt;/&gt; String.removePostfix( str: string, postfix: string ) → string Removes a postfix from a string if it exists  "},{"title":"endsWith​","type":1,"pageTitle":"String","url":"api/String#endsWith","content":"&lt;/&gt; String.endsWith( str: string, postfix: string ) → boolean Returns if a string ends with a postfix  "},{"title":"startsWith​","type":1,"pageTitle":"String","url":"api/String#startsWith","content":"&lt;/&gt; String.startsWith( str: string, prefix: string ) → boolean Returns if a string starts with a postfix  "},{"title":"addCommas​","type":1,"pageTitle":"String","url":"api/String#addCommas","content":"&lt;/&gt; String.addCommas(number: string | number) → string Adds commas to a number. Not culture aware. "},{"title":"Subscription","type":0,"sectionRef":"#","url":"api/Subscription","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Subscription","url":"api/Subscription#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Subscription","url":"api/Subscription#new","content":"&lt;/&gt; Subscription.new( fireCallback: function?, failCallback: function?, completeCallback: function?, onSubscribe: () → MaidTask ) → Subscription Constructs a new Subscription  "},{"title":"Fire​","type":1,"pageTitle":"Subscription","url":"api/Subscription#Fire","content":"&lt;/&gt; Subscription:Fire(...: any) → () Fires the subscription  "},{"title":"Fail​","type":1,"pageTitle":"Subscription","url":"api/Subscription#Fail","content":"&lt;/&gt; Subscription:Fail() → () Fails the subscription, preventing anything else from emitting.  "},{"title":"GetFireFailComplete​","type":1,"pageTitle":"Subscription","url":"api/Subscription#GetFireFailComplete","content":"&lt;/&gt; Subscription:GetFireFailComplete() → ( function, function, function ) Returns a tuple of fire, fail and complete functions which can be chained into the the next subscription. return function(source) return Observable.new(function(sub) sub:Fire(&quot;hi&quot;) return source:Subscribe(sub:GetFireFailComplete()) end) end   "},{"title":"GetFailComplete​","type":1,"pageTitle":"Subscription","url":"api/Subscription#GetFailComplete","content":"&lt;/&gt; Subscription:GetFailComplete() → ( function, function ) Returns a tuple of fail and complete functions which can be chained into the the next subscription. return function(source) return Observable.new(function(sub) return source:Subscribe(function(result) sub:Fire(tostring(result)) end, sub:GetFailComplete()) -- Reuse is easy here! end) end   "},{"title":"Complete​","type":1,"pageTitle":"Subscription","url":"api/Subscription#Complete","content":"&lt;/&gt; Subscription:Complete() → () Completes the subscription, preventing anything else from being emitted.  "},{"title":"IsPending​","type":1,"pageTitle":"Subscription","url":"api/Subscription#IsPending","content":"&lt;/&gt; Subscription:IsPending() → boolean Returns whether the subscription is pending.  "},{"title":"Destroy​","type":1,"pageTitle":"Subscription","url":"api/Subscription#Destroy","content":"&lt;/&gt; Subscription:Destroy() → () Cleans up the subscription tip This will be invoked by the Observable automatically, and should not be called within the usage of a subscription. "},{"title":"SummedCamera","type":0,"sectionRef":"#","url":"api/SummedCamera","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"SummedCamera","url":"api/SummedCamera#functions","content":" "},{"title":"new​","type":1,"pageTitle":"SummedCamera","url":"api/SummedCamera#new","content":"&lt;/&gt; SummedCamera.new( cameraA: CameraEffect,-- A CameraState or another CameraEffect to be used cameraB: CameraEffect-- A CameraState or another CameraEffect to be used ) → SummedCamera Construct a new summed camera  "},{"title":"SetMode​","type":1,"pageTitle":"SummedCamera","url":"api/SummedCamera#SetMode","content":"&lt;/&gt; SummedCamera:SetMode( mode: &quot;World&quot; | &quot;Relative&quot;-- Mode to set ) → SummedCamera Sets the summation mode. If &quot;World&quot;, then it just adds positions. If &quot;Relative&quot;, then it moves position relative to cameraA's CFrame. "},{"title":"SunPositionUtils","type":0,"sectionRef":"#","url":"api/SunPositionUtils","content":"On this page SunPositionUtils Utility to position the sun","keywords":""},{"title":"SurfaceUtils","type":0,"sectionRef":"#","url":"api/SurfaceUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"SurfaceUtils","url":"api/SurfaceUtils#functions","content":" "},{"title":"getSurfaceCFrame​","type":1,"pageTitle":"SurfaceUtils","url":"api/SurfaceUtils#getSurfaceCFrame","content":"&lt;/&gt; SurfaceUtils.getSurfaceCFrame( part: Part , lnormal: Vector3 ) → CFrame  Finds a CFrame on the surface. warning This only works with Part objects that are rectangles. "},{"title":"SwingTwistUtils","type":0,"sectionRef":"#","url":"api/SwingTwistUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"SwingTwistUtils","url":"api/SwingTwistUtils#functions","content":" "},{"title":"swingTwist​","type":1,"pageTitle":"SwingTwistUtils","url":"api/SwingTwistUtils#swingTwist","content":"&lt;/&gt; SwingTwistUtils.swingTwist( cf: CFrame , direction: Vector3 ) → ( Vector3 ,-- swing Vector3 -- twist ) Decomposes a CFrame into a swing and a twist.  "},{"title":"twistAngle​","type":1,"pageTitle":"SwingTwistUtils","url":"api/SwingTwistUtils#twistAngle","content":"&lt;/&gt; SwingTwistUtils.twistAngle( cf: CFrame , direction: Vector3 ) → number  "},{"title":"Symbol","type":0,"sectionRef":"#","url":"api/Symbol","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Symbol","url":"api/Symbol#functions","content":" "},{"title":"named​","type":1,"pageTitle":"Symbol","url":"api/Symbol#named","content":"&lt;/&gt; Symbol.named(name: string) → Symbol Creates a Symbol with the given name. When printed or coerced to a string, the symbol will turn into the string given as its name. "},{"title":"TaggedTemplateProvider","type":0,"sectionRef":"#","url":"api/TaggedTemplateProvider","content":"On this page TaggedTemplateProvider Like a template provider, but it also reparents and retrieves tagged objects","keywords":""},{"title":"Table","type":0,"sectionRef":"#","url":"api/Table","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Table","url":"api/Table#functions","content":" "},{"title":"append​","type":1,"pageTitle":"Table","url":"api/Table#append","content":"&lt;/&gt; Table.append( target: table,-- Table to append to source: table-- Table read from ) → table-- parameter table Concats target with source.  "},{"title":"merge​","type":1,"pageTitle":"Table","url":"api/Table#merge","content":"&lt;/&gt; Table.merge( orig: table,-- Original table new: table-- Result ) → table Shallow merges two tables without modifying either.  "},{"title":"values​","type":1,"pageTitle":"Table","url":"api/Table#values","content":"&lt;/&gt; Table.values( source: table-- Table source to extract values from ) → table-- A list with all the values the table has Returns a list of all of the values that a table has.  "},{"title":"mergeLists​","type":1,"pageTitle":"Table","url":"api/Table#mergeLists","content":"&lt;/&gt; Table.mergeLists( orig: table,-- Original table new: table-- Result ) → table Shallow merges two lists without modifying either.  "},{"title":"swapKeyValue​","type":1,"pageTitle":"Table","url":"api/Table#swapKeyValue","content":"&lt;/&gt; Table.swapKeyValue( orig: table-- Original table ) → table Swaps keys with values, overwriting additional values if duplicated.  "},{"title":"toList​","type":1,"pageTitle":"Table","url":"api/Table#toList","content":"&lt;/&gt; Table.toList( _table: table-- Table to convert to a list ) → table Converts a table to a list.  "},{"title":"count​","type":1,"pageTitle":"Table","url":"api/Table#count","content":"&lt;/&gt; Table.count( _table: table-- Table to count ) → number-- count Counts the number of items in _table. Useful since __len on table in Lua 5.2 returns just the array length.  "},{"title":"copy​","type":1,"pageTitle":"Table","url":"api/Table#copy","content":"&lt;/&gt; Table.copy( target: table-- Table to copy ) → table-- Result Shallow copies a table from target into a new table  "},{"title":"deepCopy​","type":1,"pageTitle":"Table","url":"api/Table#deepCopy","content":"&lt;/&gt; Table.deepCopy( target: table,-- Table to deep copy _context: table?-- Cntext to deepCopy the value in ) → table-- Result Deep copies a table including metatables  "},{"title":"deepOverwrite​","type":1,"pageTitle":"Table","url":"api/Table#deepOverwrite","content":"&lt;/&gt; Table.deepOverwrite( target: table,-- Target table source: table-- Table to read from ) → table-- target Overwrites a table's value  "},{"title":"getIndex​","type":1,"pageTitle":"Table","url":"api/Table#getIndex","content":"&lt;/&gt; Table.getIndex( haystack: table,-- To search in needle: Valuetosearchfor ) → ( Theindexofthevalue,iffound, nil-- if not found ) Gets an index by value, returning nil if no index is found.  "},{"title":"stringify​","type":1,"pageTitle":"Table","url":"api/Table#stringify","content":"&lt;/&gt; Table.stringify( _table: table,-- Table to stringify indent: number?,-- Indent level output: string?-- Output string, used recursively ) → string-- The table in string form Recursively prints the table. Does not handle recursive tables.  "},{"title":"contains​","type":1,"pageTitle":"Table","url":"api/Table#contains","content":"&lt;/&gt; Table.contains( _table: table,-- To search in for value value: any-- Value to search for ) → boolean-- true if within, false otherwise Returns whether value is within table  "},{"title":"overwrite​","type":1,"pageTitle":"Table","url":"api/Table#overwrite","content":"&lt;/&gt; Table.overwrite( target: table,-- Table to overwite source: table-- Source table to read from ) → table-- target Overwrites an existing table with the source values.  "},{"title":"take​","type":1,"pageTitle":"Table","url":"api/Table#take","content":"&lt;/&gt; Table.take( source: table,-- Source table to retrieve values from count: number-- Number of entries to take ) → table-- List with the entries retrieved Takes count entries from the table. If the table does not have that many entries, will return up to the number the table has to provide.  "},{"title":"readonly​","type":1,"pageTitle":"Table","url":"api/Table#readonly","content":"&lt;/&gt; Table.readonly( target: table-- Table to error on indexing ) → table-- The same table, with the metatable set to readonly Sets a metatable on a table such that it errors when indexing a nil value  "},{"title":"deepReadonly​","type":1,"pageTitle":"Table","url":"api/Table#deepReadonly","content":"&lt;/&gt; Table.deepReadonly( target: table-- Table to error on indexing ) → table-- The same table Recursively sets the table as ReadOnly "},{"title":"TeamTracker","type":0,"sectionRef":"#","url":"api/TeamTracker","content":"On this page TeamTracker Tracks a player's current team, since the Team property is unreliable","keywords":""},{"title":"TeamUtils","type":0,"sectionRef":"#","url":"api/TeamUtils","content":"On this page TeamUtils Team utility methods","keywords":""},{"title":"TemplateContainerUtils","type":0,"sectionRef":"#","url":"api/TemplateContainerUtils","content":"On this page TemplateContainerUtils Utility functions for the TemplateProvider","keywords":""},{"title":"TerrainUtils","type":0,"sectionRef":"#","url":"api/TerrainUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"TerrainUtils","url":"api/TerrainUtils#functions","content":" "},{"title":"getTerrainRegion3​","type":1,"pageTitle":"TerrainUtils","url":"api/TerrainUtils#getTerrainRegion3","content":"&lt;/&gt; TerrainUtils.getTerrainRegion3( position: Vector3 , size: Vector3 , resolution: number ) → Region3  Gets the terrain region from the position and size  "},{"title":"getTerrainRegion3int16FromRegion3​","type":1,"pageTitle":"TerrainUtils","url":"api/TerrainUtils#getTerrainRegion3int16FromRegion3","content":"&lt;/&gt; TerrainUtils.getTerrainRegion3int16FromRegion3( region3: Region3 , resolution: number ) → Region3int16  Gets the terrain region3int16 from a terrain region (in world space) at the resolution requested.  "},{"title":"getCorner​","type":1,"pageTitle":"TerrainUtils","url":"api/TerrainUtils#getCorner","content":"&lt;/&gt; TerrainUtils.getCorner(region3: Region3 ) → Vector3  Gets the corner of terrain for a region3  "},{"title":"getCornerint16​","type":1,"pageTitle":"TerrainUtils","url":"api/TerrainUtils#getCornerint16","content":"&lt;/&gt; TerrainUtils.getCornerint16( region3: Region3 , resolution: number ) → Vector3int16  Gets the corner of the region in Vector3int16 "},{"title":"TemplateProvider","type":0,"sectionRef":"#","url":"api/TemplateProvider","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"TemplateProvider","url":"api/TemplateProvider#functions","content":" "},{"title":"new​","type":1,"pageTitle":"TemplateProvider","url":"api/TemplateProvider#new","content":"&lt;/&gt; TemplateProvider.new( container: Instance | table | number,-- Value replicationParent: Instance? -- Place to replicate instances to. ) → () Constructs a new TemplateProvider.  "},{"title":"Init​","type":1,"pageTitle":"TemplateProvider","url":"api/TemplateProvider#Init","content":"&lt;/&gt; TemplateProvider:Init() → () Initializes the container provider. Should be done via ServiceBag.  "},{"title":"PromiseClone​","type":1,"pageTitle":"TemplateProvider","url":"api/TemplateProvider#PromiseClone","content":"&lt;/&gt; TemplateProvider:PromiseClone(templateName: string) → Promise&lt;Instance &gt; Promises to clone the template as soon as it exists.  "},{"title":"Clone​","type":1,"pageTitle":"TemplateProvider","url":"api/TemplateProvider#Clone","content":"&lt;/&gt; TemplateProvider:Clone(templateName: string) → Instance?  Clones the template. info If the template name has a prefix of &quot;Template&quot; then it will remove it on the cloned instance.  "},{"title":"Get​","type":1,"pageTitle":"TemplateProvider","url":"api/TemplateProvider#Get","content":"&lt;/&gt; TemplateProvider:Get(templateName: string) → Instance?  Returns the raw template  "},{"title":"AddContainer​","type":1,"pageTitle":"TemplateProvider","url":"api/TemplateProvider#AddContainer","content":"&lt;/&gt; TemplateProvider:AddContainer(container: Instance | number) → () Adds a new container to the provider for provision of assets.  "},{"title":"RemoveContainer​","type":1,"pageTitle":"TemplateProvider","url":"api/TemplateProvider#RemoveContainer","content":"&lt;/&gt; TemplateProvider:RemoveContainer(container: Instance | number) → () Removes a container from the provisioning set.  "},{"title":"IsAvailable​","type":1,"pageTitle":"TemplateProvider","url":"api/TemplateProvider#IsAvailable","content":"&lt;/&gt; TemplateProvider:IsAvailable(templateName: string) → boolean Returns whether or not a template is registered at the time  "},{"title":"GetAll​","type":1,"pageTitle":"TemplateProvider","url":"api/TemplateProvider#GetAll","content":"&lt;/&gt; TemplateProvider:GetAll() → {Instance } Returns all current registered items.  "},{"title":"GetContainers​","type":1,"pageTitle":"TemplateProvider","url":"api/TemplateProvider#GetContainers","content":"&lt;/&gt; TemplateProvider:GetContainers() → {Instance | number} Gets all current the containers.  "},{"title":"Destroy​","type":1,"pageTitle":"TemplateProvider","url":"api/TemplateProvider#Destroy","content":"&lt;/&gt; TemplateProvider:Destroy() → () Cleans up the provider "},{"title":"TestMantleConfigProvider","type":0,"sectionRef":"#","url":"api/TestMantleConfigProvider","content":"On this page TestMantleConfigProvider","keywords":""},{"title":"TextFilterService","type":0,"sectionRef":"#","url":"api/TextFilterService","content":"On this page TextFilterService","keywords":""},{"title":"TextFilterServiceClient","type":0,"sectionRef":"#","url":"api/TextFilterServiceClient","content":"On this page TextFilterServiceClient","keywords":""},{"title":"TextFilterServiceConstants","type":0,"sectionRef":"#","url":"api/TextFilterServiceConstants","content":"On this page TextFilterServiceConstants","keywords":""},{"title":"TextFilterUtils","type":0,"sectionRef":"#","url":"api/TextFilterUtils","content":"On this page TextFilterUtils Utility functions for filtering text","keywords":""},{"title":"TextServiceUtils","type":0,"sectionRef":"#","url":"api/TextServiceUtils","content":"On this page TextServiceUtils","keywords":""},{"title":"throttle","type":0,"sectionRef":"#","url":"api/throttle","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"throttle","url":"api/throttle#functions","content":" "},{"title":"throttle​","type":1,"pageTitle":"throttle","url":"api/throttle#throttle","content":"&lt;/&gt; throttle.throttle( timeoutInSeconds: number, func: function, throttleConfig?: {leading=true;trailing=true;} ) → function Provides a debounce function call on an operation. "},{"title":"ThrottledFunction","type":0,"sectionRef":"#","url":"api/ThrottledFunction","content":"On this page ThrottledFunction Throttles execution of a functon. Does both leading, and following","keywords":""},{"title":"Time","type":0,"sectionRef":"#","url":"api/Time","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Time","url":"api/Time#functions","content":" "},{"title":"getDaysMonthTable​","type":1,"pageTitle":"Time","url":"api/Time#getDaysMonthTable","content":"&lt;/&gt; Time.getDaysMonthTable(year: number) → {[number]: number} Returns a Days in months table for the given year  "},{"title":"getOrdinalOfNumber​","type":1,"pageTitle":"Time","url":"api/Time#getOrdinalOfNumber","content":"&lt;/&gt; Time.getOrdinalOfNumber(number: number) → string( Like1st, 2nd )  "},{"title":"TimeSyncConstants","type":0,"sectionRef":"#","url":"api/TimeSyncConstants","content":"On this page TimeSyncConstants","keywords":""},{"title":"TimeSyncService","type":0,"sectionRef":"#","url":"api/TimeSyncService","content":"On this page TimeSyncService Syncronizes time","keywords":""},{"title":"TimeSyncUtils","type":0,"sectionRef":"#","url":"api/TimeSyncUtils","content":"On this page TimeSyncUtils","keywords":""},{"title":"TorsoIKBase","type":0,"sectionRef":"#","url":"api/TorsoIKBase","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"TorsoIKBase","url":"api/TorsoIKBase#functions","content":" "},{"title":"GetTargetUpperTorsoCFrame​","type":1,"pageTitle":"TorsoIKBase","url":"api/TorsoIKBase#GetTargetUpperTorsoCFrame","content":"&lt;/&gt; TorsoIKBase:GetTargetUpperTorsoCFrame() → CFrame?  Helper method used for other IK "},{"title":"TouchButtonScoredActionPicker","type":0,"sectionRef":"#","url":"api/TouchButtonScoredActionPicker","content":"On this page TouchButtonScoredActionPicker We need to handle touch buttons separately because we may have as many of these as we want.","keywords":""},{"title":"TorsoIKUtils","type":0,"sectionRef":"#","url":"api/TorsoIKUtils","content":"On this page TorsoIKUtils","keywords":""},{"title":"TouchingPartUtils","type":0,"sectionRef":"#","url":"api/TouchingPartUtils","content":"On this page TouchingPartUtils Utility to get touching parts on a Roblox part. This acts as a performance-friendly way to query Roblox's spatial tree.","keywords":""},{"title":"TrackCamera","type":0,"sectionRef":"#","url":"api/TrackCamera","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"TrackCamera","url":"api/TrackCamera#properties","content":" "},{"title":"CameraState​","type":1,"pageTitle":"TrackCamera","url":"api/TrackCamera#CameraState","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; TrackCamera.CameraState: CameraState The current state.  "},{"title":"FieldOfView​","type":1,"pageTitle":"TrackCamera","url":"api/TrackCamera#FieldOfView","content":"&lt;/&gt; TrackCamera.FieldOfView: number The current field of view.  "},{"title":"CameraSubject​","type":1,"pageTitle":"TrackCamera","url":"api/TrackCamera#CameraSubject","content":"&lt;/&gt; TrackCamera.CameraSubject: Instance  The current field of view. "},{"title":"Functions​","type":1,"pageTitle":"TrackCamera","url":"api/TrackCamera#functions","content":" "},{"title":"new​","type":1,"pageTitle":"TrackCamera","url":"api/TrackCamera#new","content":"&lt;/&gt; TrackCamera.new( cameraSubject: Instance? -- The CameraSubject to look at. A Roblox part of Roblox model ) → TrackCamera Constructs a new TrackCamera "},{"title":"trajectory","type":0,"sectionRef":"#","url":"api/trajectory","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"trajectory","url":"api/trajectory#functions","content":" "},{"title":"trajectory​","type":1,"pageTitle":"trajectory","url":"api/trajectory#trajectory","content":"&lt;/&gt; trajectory.trajectory( origin: Vector3 ,-- Origin the the bullet target: Vector3 ,-- Target for the bullet initialVelocity: number,-- Magnitude of the initial velocity gravityForce: number-- Force of the gravity ) → ( Vector3? ,-- lowTrajectory Initial velocity for a low trajectory arc Vector3? ,-- highTrajectory Initial velocity for a high trajectory arc Vector3? -- fallbackTrajectory Trajectory directly at target as afallback ) Returns two possible paths from origin to target where the magnitude of the initial velocity is initialVelocity "},{"title":"TransparencyService","type":0,"sectionRef":"#","url":"api/TransparencyService","content":"On this page TransparencyService Service that orchistrates transparency setting from multiple colliding sources and handle the transparency appropriately. This means that 2 systems can work with transparency without knowing about each other.","keywords":""},{"title":"UICornerUtils","type":0,"sectionRef":"#","url":"api/UICornerUtils","content":"On this page UICornerUtils","keywords":""},{"title":"UIPaddingUtils","type":0,"sectionRef":"#","url":"api/UIPaddingUtils","content":"On this page UIPaddingUtils Utility functions for UI padding","keywords":""},{"title":"UltrawideContainerUtils","type":0,"sectionRef":"#","url":"api/UltrawideContainerUtils","content":"On this page UltrawideContainerUtils Creates a 1920x1080 scaling container to handle ultrawide monitors and screens in a reasonable way. This helps keep UI centered and available for ultrawide screens.","keywords":""},{"title":"UndoableReducer","type":0,"sectionRef":"#","url":"api/UndoableReducer","content":"On this page UndoableReducer Simple undo redo stack history","keywords":""},{"title":"UnragdollAutomatically","type":0,"sectionRef":"#","url":"api/UnragdollAutomatically","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"UnragdollAutomatically","url":"api/UnragdollAutomatically#functions","content":" "},{"title":"new​","type":1,"pageTitle":"UnragdollAutomatically","url":"api/UnragdollAutomatically#new","content":"&lt;/&gt; UnragdollAutomatically.new( humanoid: Humanoid , serviceBag: ServiceBag ) → UnragdollAutomatically Constructs a new UnragdollAutomatically. Should be done via Binder. See RagdollBindersServer. "},{"title":"UTF8","type":0,"sectionRef":"#","url":"api/UTF8","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"UTF8","url":"api/UTF8#properties","content":" "},{"title":"UPPER_MAP​","type":1,"pageTitle":"UTF8","url":"api/UTF8#UPPER_MAP","content":"&lt;/&gt; UTF8.UPPER_MAP: {[string]: string} UTF8 lower to uppercase map  "},{"title":"LOWER_MAP​","type":1,"pageTitle":"UTF8","url":"api/UTF8#LOWER_MAP","content":"&lt;/&gt; UTF8.LOWER_MAP: {[string]: string} UTF8 uppercase to lowercase map "},{"title":"Functions​","type":1,"pageTitle":"UTF8","url":"api/UTF8#functions","content":" "},{"title":"upper​","type":1,"pageTitle":"UTF8","url":"api/UTF8#upper","content":"&lt;/&gt; UTF8.upper(str: string) → string UTF8 uppercase  "},{"title":"lower​","type":1,"pageTitle":"UTF8","url":"api/UTF8#lower","content":"&lt;/&gt; UTF8.lower(str: string) → string UTF8 lowercase "},{"title":"Utils","type":0,"sectionRef":"#","url":"api/Utils","content":"On this page Utils This item is only intended to be used by the module's authors. Private","keywords":""},{"title":"ValueBaseUtils","type":0,"sectionRef":"#","url":"api/ValueBaseUtils","content":"On this page ValueBaseUtils Provides utilities for working with valuesbase objects, like IntValue or ObjectValue in Roblox.","keywords":""},{"title":"ValueObject","type":0,"sectionRef":"#","url":"api/ValueObject","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"ValueObject","url":"api/ValueObject#properties","content":" "},{"title":"Changed​","type":1,"pageTitle":"ValueObject","url":"api/ValueObject#Changed","content":"&lt;/&gt; ValueObject.Changed: Signal&lt;()&gt;--Fireswheneverthespringinitiallychangesstate Event fires when the spring value changes  "},{"title":"Changed​","type":1,"pageTitle":"ValueObject","url":"api/ValueObject#Changed","content":"&lt;/&gt; ValueObject.Changed: Signal&lt;T&gt;--fireswitholdValue,newValue Event fires when the value's object value change  "},{"title":"Value​","type":1,"pageTitle":"ValueObject","url":"api/ValueObject#Value","content":"&lt;/&gt; ValueObject.Value: T The value of the ValueObject "},{"title":"Functions​","type":1,"pageTitle":"ValueObject","url":"api/ValueObject#functions","content":" "},{"title":"new​","type":1,"pageTitle":"ValueObject","url":"api/ValueObject#new","content":"&lt;/&gt; ValueObject.new(baseValue: T) → ValueObject Constructs a new value object  "},{"title":"isValueObject​","type":1,"pageTitle":"ValueObject","url":"api/ValueObject#isValueObject","content":"&lt;/&gt; ValueObject.isValueObject(value: any) → boolean Returns whether the object is a ValueObject class  "},{"title":"Observe​","type":1,"pageTitle":"ValueObject","url":"api/ValueObject#Observe","content":"&lt;/&gt; ValueObject:Observe() → Observable&lt;T&gt; Observes the current value of the ValueObject  "},{"title":"Destroy​","type":1,"pageTitle":"ValueObject","url":"api/ValueObject#Destroy","content":"&lt;/&gt; ValueObject:Destroy() → () Forces the value to be nil on cleanup, cleans up the Maid Does not fire the event since 3.5.0 "},{"title":"ValueObjectUtils","type":0,"sectionRef":"#","url":"api/ValueObjectUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ValueObjectUtils","url":"api/ValueObjectUtils#functions","content":" "},{"title":"syncValue​","type":1,"pageTitle":"ValueObjectUtils","url":"api/ValueObjectUtils#syncValue","content":"&lt;/&gt; ValueObjectUtils.syncValue( from: ValueObject&lt;T&gt;, to: ValueObject&lt;T&gt; ) → MaidTask Syncs the value from from to to.  "},{"title":"observeValue​","type":1,"pageTitle":"ValueObjectUtils","url":"api/ValueObjectUtils#observeValue","content":"&lt;/&gt; ValueObjectUtils.observeValue(valueObject: ValueObject&lt;T&gt;) → Observable&lt;T&gt; Observes the current value of the ValueObject  "},{"title":"observeValueBrio​","type":1,"pageTitle":"ValueObjectUtils","url":"api/ValueObjectUtils#observeValueBrio","content":"&lt;/&gt; ValueObjectUtils.observeValueBrio(valueObject: ValueObject&lt;T&gt;) → Observable&lt;Brio&lt;T&gt;&gt; Observes the current value of the ValueObject "},{"title":"Vector3int16Utils","type":0,"sectionRef":"#","url":"api/Vector3int16Utils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Vector3int16Utils","url":"api/Vector3int16Utils#functions","content":" "},{"title":"fromVector3​","type":1,"pageTitle":"Vector3int16Utils","url":"api/Vector3int16Utils#fromVector3","content":"&lt;/&gt; Vector3int16Utils.fromVector3(vector3: Vector3 ) → Vector3int16  Creates a Vector3int16 from a Vector3 "},{"title":"Vector3Utils","type":0,"sectionRef":"#","url":"api/Vector3Utils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Vector3Utils","url":"api/Vector3Utils#functions","content":" "},{"title":"fromVector2XY​","type":1,"pageTitle":"Vector3Utils","url":"api/Vector3Utils#fromVector2XY","content":"&lt;/&gt; Vector3Utils.fromVector2XY(vector2: Vector2 ) → Vector3  Creates a Vector3 from a Vector2 in the XY plane  "},{"title":"fromVector2XZ​","type":1,"pageTitle":"Vector3Utils","url":"api/Vector3Utils#fromVector2XZ","content":"&lt;/&gt; Vector3Utils.fromVector2XZ(vector2: Vector2 ) → Vector3  Creates a Vector3 from a Vector2 in the XZ plane  "},{"title":"getAngleRad​","type":1,"pageTitle":"Vector3Utils","url":"api/Vector3Utils#getAngleRad","content":"&lt;/&gt; Vector3Utils.getAngleRad( a: Vector3 , b: Vector3 ) → number? Computes the angle between 2 vectors in radians  "},{"title":"angleBetweenVectors​","type":1,"pageTitle":"Vector3Utils","url":"api/Vector3Utils#angleBetweenVectors","content":"&lt;/&gt; Vector3Utils.angleBetweenVectors( a: Vector3 , b: Vector3 ) → number Computes the angle between 2 vectors  "},{"title":"round​","type":1,"pageTitle":"Vector3Utils","url":"api/Vector3Utils#round","content":"&lt;/&gt; Vector3Utils.round( vector3: Vector3 , amount: number ) → Vector3  Rounds the vector to the nearest number "},{"title":"Viewport","type":0,"sectionRef":"#","url":"api/Viewport","content":"On this page Viewport","keywords":""},{"title":"ViewportControls","type":0,"sectionRef":"#","url":"api/ViewportControls","content":"On this page ViewportControls","keywords":""},{"title":"WeldConstraintUtils","type":0,"sectionRef":"#","url":"api/WeldConstraintUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"WeldConstraintUtils","url":"api/WeldConstraintUtils#functions","content":" "},{"title":"namedBetween​","type":1,"pageTitle":"WeldConstraintUtils","url":"api/WeldConstraintUtils#namedBetween","content":"&lt;/&gt; WeldConstraintUtils.namedBetween( name: string, part0: BasePart , part1: BasePart , parent: Instance? -- Optional ) → Weld | WeldConstraint  Creates a new weld constraint between the given parts. info Actually generally defaults to a weld because the weld constraint system is buggy.https://devforum.roblox.com/t/weld-constraint-behaves-differently-on-server-compared-to-client/445036 info We tend to create a weld constraint between parts and terrain, because terrain will remove welds when it deforms for non-touching parts. https://devforum.roblox.com/t/allow-way-to-prevent-terrain-after-deforming-from-removing-welds/631061  "},{"title":"namedBetweenForceWeldConstraint​","type":1,"pageTitle":"WeldConstraintUtils","url":"api/WeldConstraintUtils#namedBetweenForceWeldConstraint","content":"&lt;/&gt; WeldConstraintUtils.namedBetweenForceWeldConstraint( name: string, part0: BasePart , part1: BasePart , parent: Instance? -- Optional ) → WeldConstraint  Creates a new weld constraint between the given parts guaranteed. info This may not always work in ways you want, because Roblox is complicated. When in doubt, it is recommend you use WeldConstraintUtils.namedBetween for all welding scenarios. "},{"title":"XZPlaneLockCamera","type":0,"sectionRef":"#","url":"api/XZPlaneLockCamera","content":"On this page XZPlaneLockCamera Lock camera to only XZPlane, preventing TrackerCameras from making players sick.","keywords":""},{"title":"ZoomedCamera","type":0,"sectionRef":"#","url":"api/ZoomedCamera","content":"On this page ZoomedCamera Allow freedom of movement around a current place, much like the classic script works now. Not intended to be use with the current character script Intended to be used with a SummedCamera, relative. local zoom = ZoomedCamera.new() zoom.Zoom = 30 -- Distance from original point zoom.MaxZoom = 100 -- max distance away zoom.MinZoom = 0.5 -- min distance away Assigning .Zoom will automatically clamp","keywords":""},{"title":"What is Nevermore?","type":0,"sectionRef":"#","url":"docs/intro","content":"","keywords":""},{"title":"Installing Nevermore​","type":1,"pageTitle":"What is Nevermore?","url":"docs/intro#installing-nevermore","content":"Install foremanInstall npm "},{"title":"Install using npm​","type":1,"pageTitle":"What is Nevermore?","url":"docs/intro#install-using-npm","content":"Nevermore is designed to use npm to manage packages. You can install a package like this. npm install @quenty/maid Copy Each package is designed to be synced into Roblox using rojo. warning Right now you need a special version of Rojo to sync in the npm dependencies properly! "},{"title":"Custom version of rojo. Why?​","type":1,"pageTitle":"What is Nevermore?","url":"docs/intro#custom-version-of-rojo-why","content":"We have a custom version of rojo to support syncing in symlinks for development, mesh parts, and optional node_modules for dependencies. "},{"title":"Sample project​","type":1,"pageTitle":"What is Nevermore?","url":"docs/intro#sample-project","content":"See games/integration for a sample setup project. "}]