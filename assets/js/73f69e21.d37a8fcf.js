"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[96122],{47579:function(e){e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Constructs a new InputModeSelector","params":[{"name":"inputModes","desc":"","lua_type":"{ InputMode }"}],"returns":[{"desc":"","lua_type":"InputModeSelector"}],"function_type":"static","source":{"line":25,"path":"src/inputmode/src/Client/InputModeSelector.lua"}},{"name":"GetActiveMode","desc":"Returns the current active mode","params":[],"returns":[{"desc":"","lua_type":"InputMode"}],"function_type":"method","source":{"line":51,"path":"src/inputmode/src/Client/InputModeSelector.lua"}},{"name":"Bind","desc":"Binds the updateBindFunction to the mode selector\\n\\n```lua\\nlocal inputModeSelector = InputModeSelector.new({\\n\\tINPUT_MODES.Mouse;\\n\\tINPUT_MODES.Touch;\\n})\\n\\ninputModeSelector:Bind(function(inputMode)\\n\\tif inputMode == INPUT_MODES.Mouse then\\n\\t\\tprint(\\"Show mouse input hints\\")\\n\\telseif inputMode == INPUT_MODES.Touch then\\n\\t\\tprint(\\"Show touch input hints\\")\\n\\telse\\n\\t\\t-- Unknown input mode\\n\\t\\twarn(\\"Unknown input mode\\") -- should not occur\\n\\tend\\nend)\\n```","params":[{"name":"updateBindFunction","desc":"","lua_type":"(newMode: InputMode, modeMaid: Maid) -> ()"}],"returns":[{"desc":"","lua_type":"InputModeSelector"}],"function_type":"method","source":{"line":99,"path":"src/inputmode/src/Client/InputModeSelector.lua"}},{"name":"Destroy","desc":"Cleans up the input mode selector.\\n\\n:::info\\nThis should be called whenever the mode selector is done being used.\\n:::","params":[],"returns":[],"function_type":"method","source":{"line":139,"path":"src/inputmode/src/Client/InputModeSelector.lua"}}],"properties":[{"name":"Changed","desc":"Event that fires whenever the active mode changes.","lua_type":"Signal<InputMode, InputMode> -- newMode, oldMode","source":{"line":38,"path":"src/inputmode/src/Client/InputModeSelector.lua"}},{"name":"Value","desc":"The current active input mode","lua_type":"InputMode?","source":{"line":60,"path":"src/inputmode/src/Client/InputModeSelector.lua"}}],"types":[],"name":"InputModeSelector","desc":"Selects the most recent input mode and attempts to identify the best state from it.","source":{"line":5,"path":"src/inputmode/src/Client/InputModeSelector.lua"}}')}}]);